import { GraphQLClient } from 'graphql-request';
import * as Dom from 'graphql-request/dist/types.dom';
import gql from 'graphql-tag';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  _text: any;
  bigint: any;
  bpchar: any;
  date: any;
  json: any;
  jsonb: any;
  numeric: any;
  timestamptz: any;
  uuid: any;
};

/** expression to compare columns of type Boolean. All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Boolean']>;
  _gt?: InputMaybe<Scalars['Boolean']>;
  _gte?: InputMaybe<Scalars['Boolean']>;
  _in?: InputMaybe<Array<Scalars['Boolean']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['Boolean']>;
  _lte?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Scalars['Boolean']>;
  _nin?: InputMaybe<Array<Scalars['Boolean']>>;
};

/** expression to compare columns of type Int. All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Int']>;
  _gt?: InputMaybe<Scalars['Int']>;
  _gte?: InputMaybe<Scalars['Int']>;
  _in?: InputMaybe<Array<Scalars['Int']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['Int']>;
  _lte?: InputMaybe<Scalars['Int']>;
  _neq?: InputMaybe<Scalars['Int']>;
  _nin?: InputMaybe<Array<Scalars['Int']>>;
};

/** expression to compare columns of type String. All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['String']>;
  _gt?: InputMaybe<Scalars['String']>;
  _gte?: InputMaybe<Scalars['String']>;
  _ilike?: InputMaybe<Scalars['String']>;
  _in?: InputMaybe<Array<Scalars['String']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _like?: InputMaybe<Scalars['String']>;
  _lt?: InputMaybe<Scalars['String']>;
  _lte?: InputMaybe<Scalars['String']>;
  _neq?: InputMaybe<Scalars['String']>;
  _nilike?: InputMaybe<Scalars['String']>;
  _nin?: InputMaybe<Array<Scalars['String']>>;
  _nlike?: InputMaybe<Scalars['String']>;
  _nsimilar?: InputMaybe<Scalars['String']>;
  _similar?: InputMaybe<Scalars['String']>;
};

/** expression to compare columns of type _text. All fields are combined with logical 'AND'. */
export type _Text_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['_text']>;
  _gt?: InputMaybe<Scalars['_text']>;
  _gte?: InputMaybe<Scalars['_text']>;
  _in?: InputMaybe<Array<Scalars['_text']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['_text']>;
  _lte?: InputMaybe<Scalars['_text']>;
  _neq?: InputMaybe<Scalars['_text']>;
  _nin?: InputMaybe<Array<Scalars['_text']>>;
};

/** columns and relationships of "academic_years" */
export type Academic_Years = {
  __typename?: 'academic_years';
  created_at: Scalars['timestamptz'];
  ending_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  slug: Scalars['String'];
  starting_at: Scalars['timestamptz'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "academic_years" */
export type Academic_Years_Aggregate = {
  __typename?: 'academic_years_aggregate';
  aggregate?: Maybe<Academic_Years_Aggregate_Fields>;
  nodes: Array<Academic_Years>;
};

/** aggregate fields of "academic_years" */
export type Academic_Years_Aggregate_Fields = {
  __typename?: 'academic_years_aggregate_fields';
  avg?: Maybe<Academic_Years_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Academic_Years_Max_Fields>;
  min?: Maybe<Academic_Years_Min_Fields>;
  stddev?: Maybe<Academic_Years_Stddev_Fields>;
  stddev_pop?: Maybe<Academic_Years_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Academic_Years_Stddev_Samp_Fields>;
  sum?: Maybe<Academic_Years_Sum_Fields>;
  var_pop?: Maybe<Academic_Years_Var_Pop_Fields>;
  var_samp?: Maybe<Academic_Years_Var_Samp_Fields>;
  variance?: Maybe<Academic_Years_Variance_Fields>;
};


/** aggregate fields of "academic_years" */
export type Academic_Years_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Academic_Years_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "academic_years" */
export type Academic_Years_Aggregate_Order_By = {
  avg?: InputMaybe<Academic_Years_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Academic_Years_Max_Order_By>;
  min?: InputMaybe<Academic_Years_Min_Order_By>;
  stddev?: InputMaybe<Academic_Years_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Academic_Years_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Academic_Years_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Academic_Years_Sum_Order_By>;
  var_pop?: InputMaybe<Academic_Years_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Academic_Years_Var_Samp_Order_By>;
  variance?: InputMaybe<Academic_Years_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "academic_years" */
export type Academic_Years_Arr_Rel_Insert_Input = {
  data: Array<Academic_Years_Insert_Input>;
  on_conflict?: InputMaybe<Academic_Years_On_Conflict>;
};

/** aggregate avg on columns */
export type Academic_Years_Avg_Fields = {
  __typename?: 'academic_years_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "academic_years" */
export type Academic_Years_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "academic_years". All fields are combined with a logical 'AND'. */
export type Academic_Years_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Academic_Years_Bool_Exp>>>;
  _not?: InputMaybe<Academic_Years_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Academic_Years_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  ending_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  starting_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "academic_years" */
export enum Academic_Years_Constraint {
  /** unique or primary key constraint */
  AcademicYearsPkey = 'academic_years_pkey',
  /** unique or primary key constraint */
  AcademicYearsSlugKey = 'academic_years_slug_key'
}

/** input type for incrementing integer column in table "academic_years" */
export type Academic_Years_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "academic_years" */
export type Academic_Years_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  ending_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  starting_at?: InputMaybe<Scalars['timestamptz']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Academic_Years_Max_Fields = {
  __typename?: 'academic_years_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  ending_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  starting_at?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "academic_years" */
export type Academic_Years_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  ending_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  starting_at?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Academic_Years_Min_Fields = {
  __typename?: 'academic_years_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  ending_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  starting_at?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "academic_years" */
export type Academic_Years_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  ending_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  starting_at?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "academic_years" */
export type Academic_Years_Mutation_Response = {
  __typename?: 'academic_years_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Academic_Years>;
};

/** input type for inserting object relation for remote table "academic_years" */
export type Academic_Years_Obj_Rel_Insert_Input = {
  data: Academic_Years_Insert_Input;
  on_conflict?: InputMaybe<Academic_Years_On_Conflict>;
};

/** on conflict condition type for table "academic_years" */
export type Academic_Years_On_Conflict = {
  constraint: Academic_Years_Constraint;
  update_columns: Array<Academic_Years_Update_Column>;
  where?: InputMaybe<Academic_Years_Bool_Exp>;
};

/** ordering options when selecting data from "academic_years" */
export type Academic_Years_Order_By = {
  created_at?: InputMaybe<Order_By>;
  ending_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  starting_at?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "academic_years" */
export type Academic_Years_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "academic_years" */
export enum Academic_Years_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EndingAt = 'ending_at',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  StartingAt = 'starting_at',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "academic_years" */
export type Academic_Years_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  ending_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  starting_at?: InputMaybe<Scalars['timestamptz']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Academic_Years_Stddev_Fields = {
  __typename?: 'academic_years_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "academic_years" */
export type Academic_Years_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Academic_Years_Stddev_Pop_Fields = {
  __typename?: 'academic_years_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "academic_years" */
export type Academic_Years_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Academic_Years_Stddev_Samp_Fields = {
  __typename?: 'academic_years_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "academic_years" */
export type Academic_Years_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Academic_Years_Sum_Fields = {
  __typename?: 'academic_years_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "academic_years" */
export type Academic_Years_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "academic_years" */
export enum Academic_Years_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EndingAt = 'ending_at',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  StartingAt = 'starting_at',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Academic_Years_Var_Pop_Fields = {
  __typename?: 'academic_years_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "academic_years" */
export type Academic_Years_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Academic_Years_Var_Samp_Fields = {
  __typename?: 'academic_years_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "academic_years" */
export type Academic_Years_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Academic_Years_Variance_Fields = {
  __typename?: 'academic_years_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "academic_years" */
export type Academic_Years_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits = {
  __typename?: 'audit_asset_ingest_audits';
  asset_ingest_id: Scalars['uuid'];
  created_at: Scalars['timestamptz'];
  logged_action_id: Scalars['bigint'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Aggregate = {
  __typename?: 'audit_asset_ingest_audits_aggregate';
  aggregate?: Maybe<Audit_Asset_Ingest_Audits_Aggregate_Fields>;
  nodes: Array<Audit_Asset_Ingest_Audits>;
};

/** aggregate fields of "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Aggregate_Fields = {
  __typename?: 'audit_asset_ingest_audits_aggregate_fields';
  avg?: Maybe<Audit_Asset_Ingest_Audits_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Audit_Asset_Ingest_Audits_Max_Fields>;
  min?: Maybe<Audit_Asset_Ingest_Audits_Min_Fields>;
  stddev?: Maybe<Audit_Asset_Ingest_Audits_Stddev_Fields>;
  stddev_pop?: Maybe<Audit_Asset_Ingest_Audits_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Audit_Asset_Ingest_Audits_Stddev_Samp_Fields>;
  sum?: Maybe<Audit_Asset_Ingest_Audits_Sum_Fields>;
  var_pop?: Maybe<Audit_Asset_Ingest_Audits_Var_Pop_Fields>;
  var_samp?: Maybe<Audit_Asset_Ingest_Audits_Var_Samp_Fields>;
  variance?: Maybe<Audit_Asset_Ingest_Audits_Variance_Fields>;
};


/** aggregate fields of "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Audit_Asset_Ingest_Audits_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Aggregate_Order_By = {
  avg?: InputMaybe<Audit_Asset_Ingest_Audits_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Audit_Asset_Ingest_Audits_Max_Order_By>;
  min?: InputMaybe<Audit_Asset_Ingest_Audits_Min_Order_By>;
  stddev?: InputMaybe<Audit_Asset_Ingest_Audits_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Audit_Asset_Ingest_Audits_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Audit_Asset_Ingest_Audits_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Audit_Asset_Ingest_Audits_Sum_Order_By>;
  var_pop?: InputMaybe<Audit_Asset_Ingest_Audits_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Audit_Asset_Ingest_Audits_Var_Samp_Order_By>;
  variance?: InputMaybe<Audit_Asset_Ingest_Audits_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Arr_Rel_Insert_Input = {
  data: Array<Audit_Asset_Ingest_Audits_Insert_Input>;
};

/** aggregate avg on columns */
export type Audit_Asset_Ingest_Audits_Avg_Fields = {
  __typename?: 'audit_asset_ingest_audits_avg_fields';
  logged_action_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Avg_Order_By = {
  logged_action_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "audit.asset_ingest_audits". All fields are combined with a logical 'AND'. */
export type Audit_Asset_Ingest_Audits_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Audit_Asset_Ingest_Audits_Bool_Exp>>>;
  _not?: InputMaybe<Audit_Asset_Ingest_Audits_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Audit_Asset_Ingest_Audits_Bool_Exp>>>;
  asset_ingest_id?: InputMaybe<Uuid_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  logged_action_id?: InputMaybe<Bigint_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** input type for incrementing integer column in table "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Inc_Input = {
  logged_action_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Insert_Input = {
  asset_ingest_id?: InputMaybe<Scalars['uuid']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  logged_action_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Audit_Asset_Ingest_Audits_Max_Fields = {
  __typename?: 'audit_asset_ingest_audits_max_fields';
  asset_ingest_id?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  logged_action_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Max_Order_By = {
  asset_ingest_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  logged_action_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Audit_Asset_Ingest_Audits_Min_Fields = {
  __typename?: 'audit_asset_ingest_audits_min_fields';
  asset_ingest_id?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  logged_action_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Min_Order_By = {
  asset_ingest_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  logged_action_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Mutation_Response = {
  __typename?: 'audit_asset_ingest_audits_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Audit_Asset_Ingest_Audits>;
};

/** input type for inserting object relation for remote table "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Obj_Rel_Insert_Input = {
  data: Audit_Asset_Ingest_Audits_Insert_Input;
};

/** ordering options when selecting data from "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Order_By = {
  asset_ingest_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  logged_action_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** select columns of table "audit.asset_ingest_audits" */
export enum Audit_Asset_Ingest_Audits_Select_Column {
  /** column name */
  AssetIngestId = 'asset_ingest_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  LoggedActionId = 'logged_action_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Set_Input = {
  asset_ingest_id?: InputMaybe<Scalars['uuid']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  logged_action_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Audit_Asset_Ingest_Audits_Stddev_Fields = {
  __typename?: 'audit_asset_ingest_audits_stddev_fields';
  logged_action_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Stddev_Order_By = {
  logged_action_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Audit_Asset_Ingest_Audits_Stddev_Pop_Fields = {
  __typename?: 'audit_asset_ingest_audits_stddev_pop_fields';
  logged_action_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Stddev_Pop_Order_By = {
  logged_action_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Audit_Asset_Ingest_Audits_Stddev_Samp_Fields = {
  __typename?: 'audit_asset_ingest_audits_stddev_samp_fields';
  logged_action_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Stddev_Samp_Order_By = {
  logged_action_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Audit_Asset_Ingest_Audits_Sum_Fields = {
  __typename?: 'audit_asset_ingest_audits_sum_fields';
  logged_action_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Sum_Order_By = {
  logged_action_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Audit_Asset_Ingest_Audits_Var_Pop_Fields = {
  __typename?: 'audit_asset_ingest_audits_var_pop_fields';
  logged_action_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Var_Pop_Order_By = {
  logged_action_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Audit_Asset_Ingest_Audits_Var_Samp_Fields = {
  __typename?: 'audit_asset_ingest_audits_var_samp_fields';
  logged_action_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Var_Samp_Order_By = {
  logged_action_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Audit_Asset_Ingest_Audits_Variance_Fields = {
  __typename?: 'audit_asset_ingest_audits_variance_fields';
  logged_action_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "audit.asset_ingest_audits" */
export type Audit_Asset_Ingest_Audits_Variance_Order_By = {
  logged_action_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "audit.lesson_audits" */
export type Audit_Lesson_Audits = {
  __typename?: 'audit_lesson_audits';
  created_at: Scalars['timestamptz'];
  lesson_id: Scalars['Int'];
  logged_action_id: Scalars['bigint'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "audit.lesson_audits" */
export type Audit_Lesson_Audits_Aggregate = {
  __typename?: 'audit_lesson_audits_aggregate';
  aggregate?: Maybe<Audit_Lesson_Audits_Aggregate_Fields>;
  nodes: Array<Audit_Lesson_Audits>;
};

/** aggregate fields of "audit.lesson_audits" */
export type Audit_Lesson_Audits_Aggregate_Fields = {
  __typename?: 'audit_lesson_audits_aggregate_fields';
  avg?: Maybe<Audit_Lesson_Audits_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Audit_Lesson_Audits_Max_Fields>;
  min?: Maybe<Audit_Lesson_Audits_Min_Fields>;
  stddev?: Maybe<Audit_Lesson_Audits_Stddev_Fields>;
  stddev_pop?: Maybe<Audit_Lesson_Audits_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Audit_Lesson_Audits_Stddev_Samp_Fields>;
  sum?: Maybe<Audit_Lesson_Audits_Sum_Fields>;
  var_pop?: Maybe<Audit_Lesson_Audits_Var_Pop_Fields>;
  var_samp?: Maybe<Audit_Lesson_Audits_Var_Samp_Fields>;
  variance?: Maybe<Audit_Lesson_Audits_Variance_Fields>;
};


/** aggregate fields of "audit.lesson_audits" */
export type Audit_Lesson_Audits_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Audit_Lesson_Audits_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "audit.lesson_audits" */
export type Audit_Lesson_Audits_Aggregate_Order_By = {
  avg?: InputMaybe<Audit_Lesson_Audits_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Audit_Lesson_Audits_Max_Order_By>;
  min?: InputMaybe<Audit_Lesson_Audits_Min_Order_By>;
  stddev?: InputMaybe<Audit_Lesson_Audits_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Audit_Lesson_Audits_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Audit_Lesson_Audits_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Audit_Lesson_Audits_Sum_Order_By>;
  var_pop?: InputMaybe<Audit_Lesson_Audits_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Audit_Lesson_Audits_Var_Samp_Order_By>;
  variance?: InputMaybe<Audit_Lesson_Audits_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "audit.lesson_audits" */
export type Audit_Lesson_Audits_Arr_Rel_Insert_Input = {
  data: Array<Audit_Lesson_Audits_Insert_Input>;
};

/** aggregate avg on columns */
export type Audit_Lesson_Audits_Avg_Fields = {
  __typename?: 'audit_lesson_audits_avg_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  logged_action_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "audit.lesson_audits" */
export type Audit_Lesson_Audits_Avg_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  logged_action_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "audit.lesson_audits". All fields are combined with a logical 'AND'. */
export type Audit_Lesson_Audits_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Audit_Lesson_Audits_Bool_Exp>>>;
  _not?: InputMaybe<Audit_Lesson_Audits_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Audit_Lesson_Audits_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  lesson_id?: InputMaybe<Int_Comparison_Exp>;
  logged_action_id?: InputMaybe<Bigint_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** input type for incrementing integer column in table "audit.lesson_audits" */
export type Audit_Lesson_Audits_Inc_Input = {
  lesson_id?: InputMaybe<Scalars['Int']>;
  logged_action_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "audit.lesson_audits" */
export type Audit_Lesson_Audits_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  logged_action_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Audit_Lesson_Audits_Max_Fields = {
  __typename?: 'audit_lesson_audits_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['Int']>;
  logged_action_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "audit.lesson_audits" */
export type Audit_Lesson_Audits_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  logged_action_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Audit_Lesson_Audits_Min_Fields = {
  __typename?: 'audit_lesson_audits_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['Int']>;
  logged_action_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "audit.lesson_audits" */
export type Audit_Lesson_Audits_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  logged_action_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "audit.lesson_audits" */
export type Audit_Lesson_Audits_Mutation_Response = {
  __typename?: 'audit_lesson_audits_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Audit_Lesson_Audits>;
};

/** input type for inserting object relation for remote table "audit.lesson_audits" */
export type Audit_Lesson_Audits_Obj_Rel_Insert_Input = {
  data: Audit_Lesson_Audits_Insert_Input;
};

/** ordering options when selecting data from "audit.lesson_audits" */
export type Audit_Lesson_Audits_Order_By = {
  created_at?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  logged_action_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** select columns of table "audit.lesson_audits" */
export enum Audit_Lesson_Audits_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LoggedActionId = 'logged_action_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "audit.lesson_audits" */
export type Audit_Lesson_Audits_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  logged_action_id?: InputMaybe<Scalars['bigint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Audit_Lesson_Audits_Stddev_Fields = {
  __typename?: 'audit_lesson_audits_stddev_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  logged_action_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "audit.lesson_audits" */
export type Audit_Lesson_Audits_Stddev_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  logged_action_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Audit_Lesson_Audits_Stddev_Pop_Fields = {
  __typename?: 'audit_lesson_audits_stddev_pop_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  logged_action_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "audit.lesson_audits" */
export type Audit_Lesson_Audits_Stddev_Pop_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  logged_action_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Audit_Lesson_Audits_Stddev_Samp_Fields = {
  __typename?: 'audit_lesson_audits_stddev_samp_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  logged_action_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "audit.lesson_audits" */
export type Audit_Lesson_Audits_Stddev_Samp_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  logged_action_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Audit_Lesson_Audits_Sum_Fields = {
  __typename?: 'audit_lesson_audits_sum_fields';
  lesson_id?: Maybe<Scalars['Int']>;
  logged_action_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "audit.lesson_audits" */
export type Audit_Lesson_Audits_Sum_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  logged_action_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Audit_Lesson_Audits_Var_Pop_Fields = {
  __typename?: 'audit_lesson_audits_var_pop_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  logged_action_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "audit.lesson_audits" */
export type Audit_Lesson_Audits_Var_Pop_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  logged_action_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Audit_Lesson_Audits_Var_Samp_Fields = {
  __typename?: 'audit_lesson_audits_var_samp_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  logged_action_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "audit.lesson_audits" */
export type Audit_Lesson_Audits_Var_Samp_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  logged_action_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Audit_Lesson_Audits_Variance_Fields = {
  __typename?: 'audit_lesson_audits_variance_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  logged_action_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "audit.lesson_audits" */
export type Audit_Lesson_Audits_Variance_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  logged_action_id?: InputMaybe<Order_By>;
};

/** expression to compare columns of type bigint. All fields are combined with logical 'AND'. */
export type Bigint_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['bigint']>;
  _gt?: InputMaybe<Scalars['bigint']>;
  _gte?: InputMaybe<Scalars['bigint']>;
  _in?: InputMaybe<Array<Scalars['bigint']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['bigint']>;
  _lte?: InputMaybe<Scalars['bigint']>;
  _neq?: InputMaybe<Scalars['bigint']>;
  _nin?: InputMaybe<Array<Scalars['bigint']>>;
};

/** expression to compare columns of type bpchar. All fields are combined with logical 'AND'. */
export type Bpchar_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['bpchar']>;
  _gt?: InputMaybe<Scalars['bpchar']>;
  _gte?: InputMaybe<Scalars['bpchar']>;
  _in?: InputMaybe<Array<Scalars['bpchar']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['bpchar']>;
  _lte?: InputMaybe<Scalars['bpchar']>;
  _neq?: InputMaybe<Scalars['bpchar']>;
  _nin?: InputMaybe<Array<Scalars['bpchar']>>;
};

/** columns and relationships of "captions" */
export type Captions = {
  __typename?: 'captions';
  bad_language_detected: Scalars['Boolean'];
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  inappropriate_words?: Maybe<Scalars['_text']>;
  ingest_id: Scalars['String'];
  language_approved: Scalars['Boolean'];
  transcript?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  videos: Array<Videos>;
  /** An aggregated array relationship */
  videos_aggregate: Videos_Aggregate;
};


/** columns and relationships of "captions" */
export type CaptionsVideosArgs = {
  distinct_on?: InputMaybe<Array<Videos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Videos_Order_By>>;
  where?: InputMaybe<Videos_Bool_Exp>;
};


/** columns and relationships of "captions" */
export type CaptionsVideos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Videos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Videos_Order_By>>;
  where?: InputMaybe<Videos_Bool_Exp>;
};

/** aggregated selection of "captions" */
export type Captions_Aggregate = {
  __typename?: 'captions_aggregate';
  aggregate?: Maybe<Captions_Aggregate_Fields>;
  nodes: Array<Captions>;
};

/** aggregate fields of "captions" */
export type Captions_Aggregate_Fields = {
  __typename?: 'captions_aggregate_fields';
  avg?: Maybe<Captions_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Captions_Max_Fields>;
  min?: Maybe<Captions_Min_Fields>;
  stddev?: Maybe<Captions_Stddev_Fields>;
  stddev_pop?: Maybe<Captions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Captions_Stddev_Samp_Fields>;
  sum?: Maybe<Captions_Sum_Fields>;
  var_pop?: Maybe<Captions_Var_Pop_Fields>;
  var_samp?: Maybe<Captions_Var_Samp_Fields>;
  variance?: Maybe<Captions_Variance_Fields>;
};


/** aggregate fields of "captions" */
export type Captions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Captions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "captions" */
export type Captions_Aggregate_Order_By = {
  avg?: InputMaybe<Captions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Captions_Max_Order_By>;
  min?: InputMaybe<Captions_Min_Order_By>;
  stddev?: InputMaybe<Captions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Captions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Captions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Captions_Sum_Order_By>;
  var_pop?: InputMaybe<Captions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Captions_Var_Samp_Order_By>;
  variance?: InputMaybe<Captions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "captions" */
export type Captions_Arr_Rel_Insert_Input = {
  data: Array<Captions_Insert_Input>;
  on_conflict?: InputMaybe<Captions_On_Conflict>;
};

/** aggregate avg on columns */
export type Captions_Avg_Fields = {
  __typename?: 'captions_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "captions" */
export type Captions_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "captions". All fields are combined with a logical 'AND'. */
export type Captions_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Captions_Bool_Exp>>>;
  _not?: InputMaybe<Captions_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Captions_Bool_Exp>>>;
  bad_language_detected?: InputMaybe<Boolean_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  inappropriate_words?: InputMaybe<_Text_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  language_approved?: InputMaybe<Boolean_Comparison_Exp>;
  transcript?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  videos?: InputMaybe<Videos_Bool_Exp>;
};

/** unique or primary key constraints on table "captions" */
export enum Captions_Constraint {
  /** unique or primary key constraint */
  CaptionsIngestIdKey = 'captions_ingest_id_key',
  /** unique or primary key constraint */
  CaptionsPkey = 'captions_pkey'
}

/** input type for incrementing integer column in table "captions" */
export type Captions_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "captions" */
export type Captions_Insert_Input = {
  bad_language_detected?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  inappropriate_words?: InputMaybe<Scalars['_text']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  language_approved?: InputMaybe<Scalars['Boolean']>;
  transcript?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  videos?: InputMaybe<Videos_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Captions_Max_Fields = {
  __typename?: 'captions_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  transcript?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "captions" */
export type Captions_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  transcript?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Captions_Min_Fields = {
  __typename?: 'captions_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  transcript?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "captions" */
export type Captions_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  transcript?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "captions" */
export type Captions_Mutation_Response = {
  __typename?: 'captions_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Captions>;
};

/** input type for inserting object relation for remote table "captions" */
export type Captions_Obj_Rel_Insert_Input = {
  data: Captions_Insert_Input;
  on_conflict?: InputMaybe<Captions_On_Conflict>;
};

/** on conflict condition type for table "captions" */
export type Captions_On_Conflict = {
  constraint: Captions_Constraint;
  update_columns: Array<Captions_Update_Column>;
  where?: InputMaybe<Captions_Bool_Exp>;
};

/** ordering options when selecting data from "captions" */
export type Captions_Order_By = {
  bad_language_detected?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  inappropriate_words?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  language_approved?: InputMaybe<Order_By>;
  transcript?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  videos_aggregate?: InputMaybe<Videos_Aggregate_Order_By>;
};

/** primary key columns input for table: "captions" */
export type Captions_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "captions" */
export enum Captions_Select_Column {
  /** column name */
  BadLanguageDetected = 'bad_language_detected',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  InappropriateWords = 'inappropriate_words',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  LanguageApproved = 'language_approved',
  /** column name */
  Transcript = 'transcript',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "captions" */
export type Captions_Set_Input = {
  bad_language_detected?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  inappropriate_words?: InputMaybe<Scalars['_text']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  language_approved?: InputMaybe<Scalars['Boolean']>;
  transcript?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Captions_Stddev_Fields = {
  __typename?: 'captions_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "captions" */
export type Captions_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Captions_Stddev_Pop_Fields = {
  __typename?: 'captions_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "captions" */
export type Captions_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Captions_Stddev_Samp_Fields = {
  __typename?: 'captions_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "captions" */
export type Captions_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Captions_Sum_Fields = {
  __typename?: 'captions_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "captions" */
export type Captions_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "captions" */
export enum Captions_Update_Column {
  /** column name */
  BadLanguageDetected = 'bad_language_detected',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  InappropriateWords = 'inappropriate_words',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  LanguageApproved = 'language_approved',
  /** column name */
  Transcript = 'transcript',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Captions_Var_Pop_Fields = {
  __typename?: 'captions_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "captions" */
export type Captions_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Captions_Var_Samp_Fields = {
  __typename?: 'captions_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "captions" */
export type Captions_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Captions_Variance_Fields = {
  __typename?: 'captions_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "captions" */
export type Captions_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "cohorts" */
export type Cohorts = {
  __typename?: 'cohorts';
  description: Scalars['String'];
  id: Scalars['Int'];
  title: Scalars['String'];
};

/** aggregated selection of "cohorts" */
export type Cohorts_Aggregate = {
  __typename?: 'cohorts_aggregate';
  aggregate?: Maybe<Cohorts_Aggregate_Fields>;
  nodes: Array<Cohorts>;
};

/** aggregate fields of "cohorts" */
export type Cohorts_Aggregate_Fields = {
  __typename?: 'cohorts_aggregate_fields';
  avg?: Maybe<Cohorts_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Cohorts_Max_Fields>;
  min?: Maybe<Cohorts_Min_Fields>;
  stddev?: Maybe<Cohorts_Stddev_Fields>;
  stddev_pop?: Maybe<Cohorts_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Cohorts_Stddev_Samp_Fields>;
  sum?: Maybe<Cohorts_Sum_Fields>;
  var_pop?: Maybe<Cohorts_Var_Pop_Fields>;
  var_samp?: Maybe<Cohorts_Var_Samp_Fields>;
  variance?: Maybe<Cohorts_Variance_Fields>;
};


/** aggregate fields of "cohorts" */
export type Cohorts_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Cohorts_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "cohorts" */
export type Cohorts_Aggregate_Order_By = {
  avg?: InputMaybe<Cohorts_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Cohorts_Max_Order_By>;
  min?: InputMaybe<Cohorts_Min_Order_By>;
  stddev?: InputMaybe<Cohorts_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Cohorts_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Cohorts_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Cohorts_Sum_Order_By>;
  var_pop?: InputMaybe<Cohorts_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Cohorts_Var_Samp_Order_By>;
  variance?: InputMaybe<Cohorts_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "cohorts" */
export type Cohorts_Arr_Rel_Insert_Input = {
  data: Array<Cohorts_Insert_Input>;
  on_conflict?: InputMaybe<Cohorts_On_Conflict>;
};

/** aggregate avg on columns */
export type Cohorts_Avg_Fields = {
  __typename?: 'cohorts_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "cohorts" */
export type Cohorts_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "cohorts". All fields are combined with a logical 'AND'. */
export type Cohorts_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Cohorts_Bool_Exp>>>;
  _not?: InputMaybe<Cohorts_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Cohorts_Bool_Exp>>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "cohorts" */
export enum Cohorts_Constraint {
  /** unique or primary key constraint */
  CohortsPkey = 'cohorts_pkey'
}

/** input type for incrementing integer column in table "cohorts" */
export type Cohorts_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "cohorts" */
export type Cohorts_Insert_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Cohorts_Max_Fields = {
  __typename?: 'cohorts_max_fields';
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "cohorts" */
export type Cohorts_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Cohorts_Min_Fields = {
  __typename?: 'cohorts_min_fields';
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "cohorts" */
export type Cohorts_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "cohorts" */
export type Cohorts_Mutation_Response = {
  __typename?: 'cohorts_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Cohorts>;
};

/** input type for inserting object relation for remote table "cohorts" */
export type Cohorts_Obj_Rel_Insert_Input = {
  data: Cohorts_Insert_Input;
  on_conflict?: InputMaybe<Cohorts_On_Conflict>;
};

/** on conflict condition type for table "cohorts" */
export type Cohorts_On_Conflict = {
  constraint: Cohorts_Constraint;
  update_columns: Array<Cohorts_Update_Column>;
  where?: InputMaybe<Cohorts_Bool_Exp>;
};

/** ordering options when selecting data from "cohorts" */
export type Cohorts_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "cohorts" */
export type Cohorts_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "cohorts" */
export enum Cohorts_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Title = 'title'
}

/** input type for updating data in table "cohorts" */
export type Cohorts_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Cohorts_Stddev_Fields = {
  __typename?: 'cohorts_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "cohorts" */
export type Cohorts_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Cohorts_Stddev_Pop_Fields = {
  __typename?: 'cohorts_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "cohorts" */
export type Cohorts_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Cohorts_Stddev_Samp_Fields = {
  __typename?: 'cohorts_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "cohorts" */
export type Cohorts_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Cohorts_Sum_Fields = {
  __typename?: 'cohorts_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "cohorts" */
export type Cohorts_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "cohorts" */
export enum Cohorts_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Title = 'title'
}

/** aggregate var_pop on columns */
export type Cohorts_Var_Pop_Fields = {
  __typename?: 'cohorts_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "cohorts" */
export type Cohorts_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Cohorts_Var_Samp_Fields = {
  __typename?: 'cohorts_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "cohorts" */
export type Cohorts_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Cohorts_Variance_Fields = {
  __typename?: 'cohorts_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "cohorts" */
export type Cohorts_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "curriculum_documents" */
export type Curriculum_Documents = {
  __typename?: 'curriculum_documents';
  download_url_appendix?: Maybe<Scalars['String']>;
  download_url_docx: Scalars['String'];
  download_url_pdf: Scalars['String'];
  id: Scalars['uuid'];
  ingest_id: Scalars['String'];
  /** An array relationship */
  programme_of_studies: Array<Programme_Of_Study>;
  /** An aggregated array relationship */
  programme_of_studies_aggregate: Programme_Of_Study_Aggregate;
  title: Scalars['String'];
};


/** columns and relationships of "curriculum_documents" */
export type Curriculum_DocumentsProgramme_Of_StudiesArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Bool_Exp>;
};


/** columns and relationships of "curriculum_documents" */
export type Curriculum_DocumentsProgramme_Of_Studies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Bool_Exp>;
};

/** aggregated selection of "curriculum_documents" */
export type Curriculum_Documents_Aggregate = {
  __typename?: 'curriculum_documents_aggregate';
  aggregate?: Maybe<Curriculum_Documents_Aggregate_Fields>;
  nodes: Array<Curriculum_Documents>;
};

/** aggregate fields of "curriculum_documents" */
export type Curriculum_Documents_Aggregate_Fields = {
  __typename?: 'curriculum_documents_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Curriculum_Documents_Max_Fields>;
  min?: Maybe<Curriculum_Documents_Min_Fields>;
};


/** aggregate fields of "curriculum_documents" */
export type Curriculum_Documents_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Curriculum_Documents_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "curriculum_documents" */
export type Curriculum_Documents_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Curriculum_Documents_Max_Order_By>;
  min?: InputMaybe<Curriculum_Documents_Min_Order_By>;
};

/** input type for inserting array relation for remote table "curriculum_documents" */
export type Curriculum_Documents_Arr_Rel_Insert_Input = {
  data: Array<Curriculum_Documents_Insert_Input>;
  on_conflict?: InputMaybe<Curriculum_Documents_On_Conflict>;
};

/** Boolean expression to filter rows from the table "curriculum_documents". All fields are combined with a logical 'AND'. */
export type Curriculum_Documents_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Curriculum_Documents_Bool_Exp>>>;
  _not?: InputMaybe<Curriculum_Documents_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Curriculum_Documents_Bool_Exp>>>;
  download_url_appendix?: InputMaybe<String_Comparison_Exp>;
  download_url_docx?: InputMaybe<String_Comparison_Exp>;
  download_url_pdf?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  programme_of_studies?: InputMaybe<Programme_Of_Study_Bool_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "curriculum_documents" */
export enum Curriculum_Documents_Constraint {
  /** unique or primary key constraint */
  CurriculumDocumentsIngestIdKey = 'curriculum_documents_ingest_id_key',
  /** unique or primary key constraint */
  CurriculumDocumentsPkey = 'curriculum_documents_pkey'
}

/** input type for inserting data into table "curriculum_documents" */
export type Curriculum_Documents_Insert_Input = {
  download_url_appendix?: InputMaybe<Scalars['String']>;
  download_url_docx?: InputMaybe<Scalars['String']>;
  download_url_pdf?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  programme_of_studies?: InputMaybe<Programme_Of_Study_Arr_Rel_Insert_Input>;
  title?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Curriculum_Documents_Max_Fields = {
  __typename?: 'curriculum_documents_max_fields';
  download_url_appendix?: Maybe<Scalars['String']>;
  download_url_docx?: Maybe<Scalars['String']>;
  download_url_pdf?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  ingest_id?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "curriculum_documents" */
export type Curriculum_Documents_Max_Order_By = {
  download_url_appendix?: InputMaybe<Order_By>;
  download_url_docx?: InputMaybe<Order_By>;
  download_url_pdf?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Curriculum_Documents_Min_Fields = {
  __typename?: 'curriculum_documents_min_fields';
  download_url_appendix?: Maybe<Scalars['String']>;
  download_url_docx?: Maybe<Scalars['String']>;
  download_url_pdf?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  ingest_id?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "curriculum_documents" */
export type Curriculum_Documents_Min_Order_By = {
  download_url_appendix?: InputMaybe<Order_By>;
  download_url_docx?: InputMaybe<Order_By>;
  download_url_pdf?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "curriculum_documents" */
export type Curriculum_Documents_Mutation_Response = {
  __typename?: 'curriculum_documents_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Curriculum_Documents>;
};

/** input type for inserting object relation for remote table "curriculum_documents" */
export type Curriculum_Documents_Obj_Rel_Insert_Input = {
  data: Curriculum_Documents_Insert_Input;
  on_conflict?: InputMaybe<Curriculum_Documents_On_Conflict>;
};

/** on conflict condition type for table "curriculum_documents" */
export type Curriculum_Documents_On_Conflict = {
  constraint: Curriculum_Documents_Constraint;
  update_columns: Array<Curriculum_Documents_Update_Column>;
  where?: InputMaybe<Curriculum_Documents_Bool_Exp>;
};

/** ordering options when selecting data from "curriculum_documents" */
export type Curriculum_Documents_Order_By = {
  download_url_appendix?: InputMaybe<Order_By>;
  download_url_docx?: InputMaybe<Order_By>;
  download_url_pdf?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  programme_of_studies_aggregate?: InputMaybe<Programme_Of_Study_Aggregate_Order_By>;
  title?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "curriculum_documents" */
export type Curriculum_Documents_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "curriculum_documents" */
export enum Curriculum_Documents_Select_Column {
  /** column name */
  DownloadUrlAppendix = 'download_url_appendix',
  /** column name */
  DownloadUrlDocx = 'download_url_docx',
  /** column name */
  DownloadUrlPdf = 'download_url_pdf',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  Title = 'title'
}

/** input type for updating data in table "curriculum_documents" */
export type Curriculum_Documents_Set_Input = {
  download_url_appendix?: InputMaybe<Scalars['String']>;
  download_url_docx?: InputMaybe<Scalars['String']>;
  download_url_pdf?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
};

/** update columns of table "curriculum_documents" */
export enum Curriculum_Documents_Update_Column {
  /** column name */
  DownloadUrlAppendix = 'download_url_appendix',
  /** column name */
  DownloadUrlDocx = 'download_url_docx',
  /** column name */
  DownloadUrlPdf = 'download_url_pdf',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  Title = 'title'
}

/** columns and relationships of "curriculums" */
export type Curriculums = {
  __typename?: 'curriculums';
  created_at: Scalars['timestamptz'];
  /** An array relationship */
  curriculums_programme_of_studies: Array<Curriculums_Programme_Of_Study>;
  /** An aggregated array relationship */
  curriculums_programme_of_studies_aggregate: Curriculums_Programme_Of_Study_Aggregate;
  id: Scalars['Int'];
  slug: Scalars['String'];
  title: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "curriculums" */
export type CurriculumsCurriculums_Programme_Of_StudiesArgs = {
  distinct_on?: InputMaybe<Array<Curriculums_Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Curriculums_Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Curriculums_Programme_Of_Study_Bool_Exp>;
};


/** columns and relationships of "curriculums" */
export type CurriculumsCurriculums_Programme_Of_Studies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Curriculums_Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Curriculums_Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Curriculums_Programme_Of_Study_Bool_Exp>;
};

/** aggregated selection of "curriculums" */
export type Curriculums_Aggregate = {
  __typename?: 'curriculums_aggregate';
  aggregate?: Maybe<Curriculums_Aggregate_Fields>;
  nodes: Array<Curriculums>;
};

/** aggregate fields of "curriculums" */
export type Curriculums_Aggregate_Fields = {
  __typename?: 'curriculums_aggregate_fields';
  avg?: Maybe<Curriculums_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Curriculums_Max_Fields>;
  min?: Maybe<Curriculums_Min_Fields>;
  stddev?: Maybe<Curriculums_Stddev_Fields>;
  stddev_pop?: Maybe<Curriculums_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Curriculums_Stddev_Samp_Fields>;
  sum?: Maybe<Curriculums_Sum_Fields>;
  var_pop?: Maybe<Curriculums_Var_Pop_Fields>;
  var_samp?: Maybe<Curriculums_Var_Samp_Fields>;
  variance?: Maybe<Curriculums_Variance_Fields>;
};


/** aggregate fields of "curriculums" */
export type Curriculums_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Curriculums_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "curriculums" */
export type Curriculums_Aggregate_Order_By = {
  avg?: InputMaybe<Curriculums_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Curriculums_Max_Order_By>;
  min?: InputMaybe<Curriculums_Min_Order_By>;
  stddev?: InputMaybe<Curriculums_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Curriculums_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Curriculums_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Curriculums_Sum_Order_By>;
  var_pop?: InputMaybe<Curriculums_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Curriculums_Var_Samp_Order_By>;
  variance?: InputMaybe<Curriculums_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "curriculums" */
export type Curriculums_Arr_Rel_Insert_Input = {
  data: Array<Curriculums_Insert_Input>;
  on_conflict?: InputMaybe<Curriculums_On_Conflict>;
};

/** aggregate avg on columns */
export type Curriculums_Avg_Fields = {
  __typename?: 'curriculums_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "curriculums" */
export type Curriculums_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "curriculums". All fields are combined with a logical 'AND'. */
export type Curriculums_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Curriculums_Bool_Exp>>>;
  _not?: InputMaybe<Curriculums_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Curriculums_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  curriculums_programme_of_studies?: InputMaybe<Curriculums_Programme_Of_Study_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "curriculums" */
export enum Curriculums_Constraint {
  /** unique or primary key constraint */
  CurriculumsPkey = 'curriculums_pkey',
  /** unique or primary key constraint */
  CurriculumsSlugKey = 'curriculums_slug_key'
}

/** input type for incrementing integer column in table "curriculums" */
export type Curriculums_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "curriculums" */
export type Curriculums_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  curriculums_programme_of_studies?: InputMaybe<Curriculums_Programme_Of_Study_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Curriculums_Max_Fields = {
  __typename?: 'curriculums_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "curriculums" */
export type Curriculums_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Curriculums_Min_Fields = {
  __typename?: 'curriculums_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "curriculums" */
export type Curriculums_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "curriculums" */
export type Curriculums_Mutation_Response = {
  __typename?: 'curriculums_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Curriculums>;
};

/** input type for inserting object relation for remote table "curriculums" */
export type Curriculums_Obj_Rel_Insert_Input = {
  data: Curriculums_Insert_Input;
  on_conflict?: InputMaybe<Curriculums_On_Conflict>;
};

/** on conflict condition type for table "curriculums" */
export type Curriculums_On_Conflict = {
  constraint: Curriculums_Constraint;
  update_columns: Array<Curriculums_Update_Column>;
  where?: InputMaybe<Curriculums_Bool_Exp>;
};

/** ordering options when selecting data from "curriculums" */
export type Curriculums_Order_By = {
  created_at?: InputMaybe<Order_By>;
  curriculums_programme_of_studies_aggregate?: InputMaybe<Curriculums_Programme_Of_Study_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "curriculums" */
export type Curriculums_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** columns and relationships of "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study = {
  __typename?: 'curriculums_programme_of_study';
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  curriculum: Curriculums;
  curriculum_id: Scalars['Int'];
  id: Scalars['Int'];
  /** An object relationship */
  programme_of_study: Programme_Of_Study;
  programme_of_study_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Aggregate = {
  __typename?: 'curriculums_programme_of_study_aggregate';
  aggregate?: Maybe<Curriculums_Programme_Of_Study_Aggregate_Fields>;
  nodes: Array<Curriculums_Programme_Of_Study>;
};

/** aggregate fields of "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Aggregate_Fields = {
  __typename?: 'curriculums_programme_of_study_aggregate_fields';
  avg?: Maybe<Curriculums_Programme_Of_Study_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Curriculums_Programme_Of_Study_Max_Fields>;
  min?: Maybe<Curriculums_Programme_Of_Study_Min_Fields>;
  stddev?: Maybe<Curriculums_Programme_Of_Study_Stddev_Fields>;
  stddev_pop?: Maybe<Curriculums_Programme_Of_Study_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Curriculums_Programme_Of_Study_Stddev_Samp_Fields>;
  sum?: Maybe<Curriculums_Programme_Of_Study_Sum_Fields>;
  var_pop?: Maybe<Curriculums_Programme_Of_Study_Var_Pop_Fields>;
  var_samp?: Maybe<Curriculums_Programme_Of_Study_Var_Samp_Fields>;
  variance?: Maybe<Curriculums_Programme_Of_Study_Variance_Fields>;
};


/** aggregate fields of "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Curriculums_Programme_Of_Study_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Aggregate_Order_By = {
  avg?: InputMaybe<Curriculums_Programme_Of_Study_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Curriculums_Programme_Of_Study_Max_Order_By>;
  min?: InputMaybe<Curriculums_Programme_Of_Study_Min_Order_By>;
  stddev?: InputMaybe<Curriculums_Programme_Of_Study_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Curriculums_Programme_Of_Study_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Curriculums_Programme_Of_Study_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Curriculums_Programme_Of_Study_Sum_Order_By>;
  var_pop?: InputMaybe<Curriculums_Programme_Of_Study_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Curriculums_Programme_Of_Study_Var_Samp_Order_By>;
  variance?: InputMaybe<Curriculums_Programme_Of_Study_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Arr_Rel_Insert_Input = {
  data: Array<Curriculums_Programme_Of_Study_Insert_Input>;
  on_conflict?: InputMaybe<Curriculums_Programme_Of_Study_On_Conflict>;
};

/** aggregate avg on columns */
export type Curriculums_Programme_Of_Study_Avg_Fields = {
  __typename?: 'curriculums_programme_of_study_avg_fields';
  curriculum_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Avg_Order_By = {
  curriculum_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "curriculums_programme_of_study". All fields are combined with a logical 'AND'. */
export type Curriculums_Programme_Of_Study_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Curriculums_Programme_Of_Study_Bool_Exp>>>;
  _not?: InputMaybe<Curriculums_Programme_Of_Study_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Curriculums_Programme_Of_Study_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  curriculum?: InputMaybe<Curriculums_Bool_Exp>;
  curriculum_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  programme_of_study?: InputMaybe<Programme_Of_Study_Bool_Exp>;
  programme_of_study_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "curriculums_programme_of_study" */
export enum Curriculums_Programme_Of_Study_Constraint {
  /** unique or primary key constraint */
  CurriculumsProgrammeOfStudCurriculumIdProgrammeOfStKey = 'curriculums_programme_of_stud_curriculum_id_programme_of_st_key',
  /** unique or primary key constraint */
  CurriculumsProgrammeOfStudyPkey = 'curriculums_programme_of_study_pkey'
}

/** input type for incrementing integer column in table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Inc_Input = {
  curriculum_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  programme_of_study_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  curriculum?: InputMaybe<Curriculums_Obj_Rel_Insert_Input>;
  curriculum_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  programme_of_study?: InputMaybe<Programme_Of_Study_Obj_Rel_Insert_Input>;
  programme_of_study_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Curriculums_Programme_Of_Study_Max_Fields = {
  __typename?: 'curriculums_programme_of_study_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  curriculum_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  programme_of_study_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  curriculum_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Curriculums_Programme_Of_Study_Min_Fields = {
  __typename?: 'curriculums_programme_of_study_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  curriculum_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  programme_of_study_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  curriculum_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Mutation_Response = {
  __typename?: 'curriculums_programme_of_study_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Curriculums_Programme_Of_Study>;
};

/** input type for inserting object relation for remote table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Obj_Rel_Insert_Input = {
  data: Curriculums_Programme_Of_Study_Insert_Input;
  on_conflict?: InputMaybe<Curriculums_Programme_Of_Study_On_Conflict>;
};

/** on conflict condition type for table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_On_Conflict = {
  constraint: Curriculums_Programme_Of_Study_Constraint;
  update_columns: Array<Curriculums_Programme_Of_Study_Update_Column>;
  where?: InputMaybe<Curriculums_Programme_Of_Study_Bool_Exp>;
};

/** ordering options when selecting data from "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Order_By = {
  created_at?: InputMaybe<Order_By>;
  curriculum?: InputMaybe<Curriculums_Order_By>;
  curriculum_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  programme_of_study?: InputMaybe<Programme_Of_Study_Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "curriculums_programme_of_study" */
export enum Curriculums_Programme_Of_Study_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurriculumId = 'curriculum_id',
  /** column name */
  Id = 'id',
  /** column name */
  ProgrammeOfStudyId = 'programme_of_study_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  curriculum_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  programme_of_study_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Curriculums_Programme_Of_Study_Stddev_Fields = {
  __typename?: 'curriculums_programme_of_study_stddev_fields';
  curriculum_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Stddev_Order_By = {
  curriculum_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Curriculums_Programme_Of_Study_Stddev_Pop_Fields = {
  __typename?: 'curriculums_programme_of_study_stddev_pop_fields';
  curriculum_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Stddev_Pop_Order_By = {
  curriculum_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Curriculums_Programme_Of_Study_Stddev_Samp_Fields = {
  __typename?: 'curriculums_programme_of_study_stddev_samp_fields';
  curriculum_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Stddev_Samp_Order_By = {
  curriculum_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Curriculums_Programme_Of_Study_Sum_Fields = {
  __typename?: 'curriculums_programme_of_study_sum_fields';
  curriculum_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  programme_of_study_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Sum_Order_By = {
  curriculum_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
};

/** update columns of table "curriculums_programme_of_study" */
export enum Curriculums_Programme_Of_Study_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurriculumId = 'curriculum_id',
  /** column name */
  Id = 'id',
  /** column name */
  ProgrammeOfStudyId = 'programme_of_study_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Curriculums_Programme_Of_Study_Var_Pop_Fields = {
  __typename?: 'curriculums_programme_of_study_var_pop_fields';
  curriculum_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Var_Pop_Order_By = {
  curriculum_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Curriculums_Programme_Of_Study_Var_Samp_Fields = {
  __typename?: 'curriculums_programme_of_study_var_samp_fields';
  curriculum_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Var_Samp_Order_By = {
  curriculum_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Curriculums_Programme_Of_Study_Variance_Fields = {
  __typename?: 'curriculums_programme_of_study_variance_fields';
  curriculum_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "curriculums_programme_of_study" */
export type Curriculums_Programme_Of_Study_Variance_Order_By = {
  curriculum_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
};

/** select columns of table "curriculums" */
export enum Curriculums_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "curriculums" */
export type Curriculums_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Curriculums_Stddev_Fields = {
  __typename?: 'curriculums_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "curriculums" */
export type Curriculums_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Curriculums_Stddev_Pop_Fields = {
  __typename?: 'curriculums_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "curriculums" */
export type Curriculums_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Curriculums_Stddev_Samp_Fields = {
  __typename?: 'curriculums_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "curriculums" */
export type Curriculums_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Curriculums_Sum_Fields = {
  __typename?: 'curriculums_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "curriculums" */
export type Curriculums_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "curriculums" */
export enum Curriculums_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Curriculums_Var_Pop_Fields = {
  __typename?: 'curriculums_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "curriculums" */
export type Curriculums_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Curriculums_Var_Samp_Fields = {
  __typename?: 'curriculums_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "curriculums" */
export type Curriculums_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Curriculums_Variance_Fields = {
  __typename?: 'curriculums_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "curriculums" */
export type Curriculums_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** expression to compare columns of type date. All fields are combined with logical 'AND'. */
export type Date_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['date']>;
  _gt?: InputMaybe<Scalars['date']>;
  _gte?: InputMaybe<Scalars['date']>;
  _in?: InputMaybe<Array<Scalars['date']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['date']>;
  _lte?: InputMaybe<Scalars['date']>;
  _neq?: InputMaybe<Scalars['date']>;
  _nin?: InputMaybe<Array<Scalars['date']>>;
};

/** columns and relationships of "days" */
export type Days = {
  __typename?: 'days';
  created_at: Scalars['timestamptz'];
  day_date: Scalars['date'];
  day_of_the_week: Scalars['Int'];
  id: Scalars['uuid'];
  slug: Scalars['String'];
  /** An array relationship */
  timetabled_lessons: Array<Timetabled_Lessons>;
  /** An aggregated array relationship */
  timetabled_lessons_aggregate: Timetabled_Lessons_Aggregate;
  title: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  week: Weeks;
  week_id: Scalars['uuid'];
};


/** columns and relationships of "days" */
export type DaysTimetabled_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Lessons_Order_By>>;
  where?: InputMaybe<Timetabled_Lessons_Bool_Exp>;
};


/** columns and relationships of "days" */
export type DaysTimetabled_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Lessons_Order_By>>;
  where?: InputMaybe<Timetabled_Lessons_Bool_Exp>;
};

/** aggregated selection of "days" */
export type Days_Aggregate = {
  __typename?: 'days_aggregate';
  aggregate?: Maybe<Days_Aggregate_Fields>;
  nodes: Array<Days>;
};

/** aggregate fields of "days" */
export type Days_Aggregate_Fields = {
  __typename?: 'days_aggregate_fields';
  avg?: Maybe<Days_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Days_Max_Fields>;
  min?: Maybe<Days_Min_Fields>;
  stddev?: Maybe<Days_Stddev_Fields>;
  stddev_pop?: Maybe<Days_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Days_Stddev_Samp_Fields>;
  sum?: Maybe<Days_Sum_Fields>;
  var_pop?: Maybe<Days_Var_Pop_Fields>;
  var_samp?: Maybe<Days_Var_Samp_Fields>;
  variance?: Maybe<Days_Variance_Fields>;
};


/** aggregate fields of "days" */
export type Days_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Days_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "days" */
export type Days_Aggregate_Order_By = {
  avg?: InputMaybe<Days_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Days_Max_Order_By>;
  min?: InputMaybe<Days_Min_Order_By>;
  stddev?: InputMaybe<Days_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Days_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Days_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Days_Sum_Order_By>;
  var_pop?: InputMaybe<Days_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Days_Var_Samp_Order_By>;
  variance?: InputMaybe<Days_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "days" */
export type Days_Arr_Rel_Insert_Input = {
  data: Array<Days_Insert_Input>;
  on_conflict?: InputMaybe<Days_On_Conflict>;
};

/** aggregate avg on columns */
export type Days_Avg_Fields = {
  __typename?: 'days_avg_fields';
  day_of_the_week?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "days" */
export type Days_Avg_Order_By = {
  day_of_the_week?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "days". All fields are combined with a logical 'AND'. */
export type Days_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Days_Bool_Exp>>>;
  _not?: InputMaybe<Days_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Days_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  day_date?: InputMaybe<Date_Comparison_Exp>;
  day_of_the_week?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  timetabled_lessons?: InputMaybe<Timetabled_Lessons_Bool_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  week?: InputMaybe<Weeks_Bool_Exp>;
  week_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "days" */
export enum Days_Constraint {
  /** unique or primary key constraint */
  DaysDayDateKey = 'days_day_date_key',
  /** unique or primary key constraint */
  DaysPkey = 'days_pkey',
  /** unique or primary key constraint */
  DaysSlugKey = 'days_slug_key'
}

/** input type for incrementing integer column in table "days" */
export type Days_Inc_Input = {
  day_of_the_week?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "days" */
export type Days_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  day_date?: InputMaybe<Scalars['date']>;
  day_of_the_week?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['uuid']>;
  slug?: InputMaybe<Scalars['String']>;
  timetabled_lessons?: InputMaybe<Timetabled_Lessons_Arr_Rel_Insert_Input>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  week?: InputMaybe<Weeks_Obj_Rel_Insert_Input>;
  week_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Days_Max_Fields = {
  __typename?: 'days_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  day_date?: Maybe<Scalars['date']>;
  day_of_the_week?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['uuid']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "days" */
export type Days_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  day_date?: InputMaybe<Order_By>;
  day_of_the_week?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  week_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Days_Min_Fields = {
  __typename?: 'days_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  day_date?: Maybe<Scalars['date']>;
  day_of_the_week?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['uuid']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "days" */
export type Days_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  day_date?: InputMaybe<Order_By>;
  day_of_the_week?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  week_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "days" */
export type Days_Mutation_Response = {
  __typename?: 'days_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Days>;
};

/** input type for inserting object relation for remote table "days" */
export type Days_Obj_Rel_Insert_Input = {
  data: Days_Insert_Input;
  on_conflict?: InputMaybe<Days_On_Conflict>;
};

/** on conflict condition type for table "days" */
export type Days_On_Conflict = {
  constraint: Days_Constraint;
  update_columns: Array<Days_Update_Column>;
  where?: InputMaybe<Days_Bool_Exp>;
};

/** ordering options when selecting data from "days" */
export type Days_Order_By = {
  created_at?: InputMaybe<Order_By>;
  day_date?: InputMaybe<Order_By>;
  day_of_the_week?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  timetabled_lessons_aggregate?: InputMaybe<Timetabled_Lessons_Aggregate_Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  week?: InputMaybe<Weeks_Order_By>;
  week_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "days" */
export type Days_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "days" */
export enum Days_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DayDate = 'day_date',
  /** column name */
  DayOfTheWeek = 'day_of_the_week',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  WeekId = 'week_id'
}

/** input type for updating data in table "days" */
export type Days_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  day_date?: InputMaybe<Scalars['date']>;
  day_of_the_week?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['uuid']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  week_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Days_Stddev_Fields = {
  __typename?: 'days_stddev_fields';
  day_of_the_week?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "days" */
export type Days_Stddev_Order_By = {
  day_of_the_week?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Days_Stddev_Pop_Fields = {
  __typename?: 'days_stddev_pop_fields';
  day_of_the_week?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "days" */
export type Days_Stddev_Pop_Order_By = {
  day_of_the_week?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Days_Stddev_Samp_Fields = {
  __typename?: 'days_stddev_samp_fields';
  day_of_the_week?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "days" */
export type Days_Stddev_Samp_Order_By = {
  day_of_the_week?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Days_Sum_Fields = {
  __typename?: 'days_sum_fields';
  day_of_the_week?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "days" */
export type Days_Sum_Order_By = {
  day_of_the_week?: InputMaybe<Order_By>;
};

/** update columns of table "days" */
export enum Days_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DayDate = 'day_date',
  /** column name */
  DayOfTheWeek = 'day_of_the_week',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  WeekId = 'week_id'
}

/** aggregate var_pop on columns */
export type Days_Var_Pop_Fields = {
  __typename?: 'days_var_pop_fields';
  day_of_the_week?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "days" */
export type Days_Var_Pop_Order_By = {
  day_of_the_week?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Days_Var_Samp_Fields = {
  __typename?: 'days_var_samp_fields';
  day_of_the_week?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "days" */
export type Days_Var_Samp_Order_By = {
  day_of_the_week?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Days_Variance_Fields = {
  __typename?: 'days_variance_fields';
  day_of_the_week?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "days" */
export type Days_Variance_Order_By = {
  day_of_the_week?: InputMaybe<Order_By>;
};

/** columns and relationships of "field_of_study" */
export type Field_Of_Study = {
  __typename?: 'field_of_study';
  created_at?: Maybe<Scalars['timestamptz']>;
  description: Scalars['String'];
  id: Scalars['Int'];
  ingest_id: Scalars['String'];
  /** An object relationship */
  intro_video?: Maybe<Videos>;
  intro_video_id?: Maybe<Scalars['uuid']>;
  is_core_subject: Scalars['Boolean'];
  is_specialist_subject: Scalars['Boolean'];
  /** An array relationship */
  programme_of_study_units: Array<Programme_Of_Study>;
  /** An aggregated array relationship */
  programme_of_study_units_aggregate: Programme_Of_Study_Aggregate;
  slug?: Maybe<Scalars['String']>;
  subject_code: Scalars['String'];
  /** An array relationship */
  teacher_field_of_studies: Array<Teacher_Field_Of_Studies>;
  /** An aggregated array relationship */
  teacher_field_of_studies_aggregate: Teacher_Field_Of_Studies_Aggregate;
  theme_name: Scalars['String'];
  title: Scalars['String'];
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "field_of_study" */
export type Field_Of_StudyProgramme_Of_Study_UnitsArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Bool_Exp>;
};


/** columns and relationships of "field_of_study" */
export type Field_Of_StudyProgramme_Of_Study_Units_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Bool_Exp>;
};


/** columns and relationships of "field_of_study" */
export type Field_Of_StudyTeacher_Field_Of_StudiesArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Field_Of_Studies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Field_Of_Studies_Order_By>>;
  where?: InputMaybe<Teacher_Field_Of_Studies_Bool_Exp>;
};


/** columns and relationships of "field_of_study" */
export type Field_Of_StudyTeacher_Field_Of_Studies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Field_Of_Studies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Field_Of_Studies_Order_By>>;
  where?: InputMaybe<Teacher_Field_Of_Studies_Bool_Exp>;
};

/** aggregated selection of "field_of_study" */
export type Field_Of_Study_Aggregate = {
  __typename?: 'field_of_study_aggregate';
  aggregate?: Maybe<Field_Of_Study_Aggregate_Fields>;
  nodes: Array<Field_Of_Study>;
};

/** aggregate fields of "field_of_study" */
export type Field_Of_Study_Aggregate_Fields = {
  __typename?: 'field_of_study_aggregate_fields';
  avg?: Maybe<Field_Of_Study_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Field_Of_Study_Max_Fields>;
  min?: Maybe<Field_Of_Study_Min_Fields>;
  stddev?: Maybe<Field_Of_Study_Stddev_Fields>;
  stddev_pop?: Maybe<Field_Of_Study_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Field_Of_Study_Stddev_Samp_Fields>;
  sum?: Maybe<Field_Of_Study_Sum_Fields>;
  var_pop?: Maybe<Field_Of_Study_Var_Pop_Fields>;
  var_samp?: Maybe<Field_Of_Study_Var_Samp_Fields>;
  variance?: Maybe<Field_Of_Study_Variance_Fields>;
};


/** aggregate fields of "field_of_study" */
export type Field_Of_Study_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Field_Of_Study_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "field_of_study" */
export type Field_Of_Study_Aggregate_Order_By = {
  avg?: InputMaybe<Field_Of_Study_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Field_Of_Study_Max_Order_By>;
  min?: InputMaybe<Field_Of_Study_Min_Order_By>;
  stddev?: InputMaybe<Field_Of_Study_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Field_Of_Study_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Field_Of_Study_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Field_Of_Study_Sum_Order_By>;
  var_pop?: InputMaybe<Field_Of_Study_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Field_Of_Study_Var_Samp_Order_By>;
  variance?: InputMaybe<Field_Of_Study_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "field_of_study" */
export type Field_Of_Study_Arr_Rel_Insert_Input = {
  data: Array<Field_Of_Study_Insert_Input>;
  on_conflict?: InputMaybe<Field_Of_Study_On_Conflict>;
};

/** aggregate avg on columns */
export type Field_Of_Study_Avg_Fields = {
  __typename?: 'field_of_study_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "field_of_study" */
export type Field_Of_Study_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "field_of_study". All fields are combined with a logical 'AND'. */
export type Field_Of_Study_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Field_Of_Study_Bool_Exp>>>;
  _not?: InputMaybe<Field_Of_Study_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Field_Of_Study_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  intro_video?: InputMaybe<Videos_Bool_Exp>;
  intro_video_id?: InputMaybe<Uuid_Comparison_Exp>;
  is_core_subject?: InputMaybe<Boolean_Comparison_Exp>;
  is_specialist_subject?: InputMaybe<Boolean_Comparison_Exp>;
  programme_of_study_units?: InputMaybe<Programme_Of_Study_Bool_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  subject_code?: InputMaybe<String_Comparison_Exp>;
  teacher_field_of_studies?: InputMaybe<Teacher_Field_Of_Studies_Bool_Exp>;
  theme_name?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "field_of_study" */
export enum Field_Of_Study_Constraint {
  /** unique or primary key constraint */
  FieldOfStudyIngestIdKey = 'field_of_study_ingest_id_key',
  /** unique or primary key constraint */
  FieldOfStudyPkey = 'field_of_study_pkey',
  /** unique or primary key constraint */
  FieldOfStudySlugKey = 'field_of_study_slug_key'
}

/** input type for incrementing integer column in table "field_of_study" */
export type Field_Of_Study_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "field_of_study" */
export type Field_Of_Study_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  intro_video?: InputMaybe<Videos_Obj_Rel_Insert_Input>;
  intro_video_id?: InputMaybe<Scalars['uuid']>;
  is_core_subject?: InputMaybe<Scalars['Boolean']>;
  is_specialist_subject?: InputMaybe<Scalars['Boolean']>;
  programme_of_study_units?: InputMaybe<Programme_Of_Study_Arr_Rel_Insert_Input>;
  slug?: InputMaybe<Scalars['String']>;
  subject_code?: InputMaybe<Scalars['String']>;
  teacher_field_of_studies?: InputMaybe<Teacher_Field_Of_Studies_Arr_Rel_Insert_Input>;
  theme_name?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Field_Of_Study_Max_Fields = {
  __typename?: 'field_of_study_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  intro_video_id?: Maybe<Scalars['uuid']>;
  slug?: Maybe<Scalars['String']>;
  subject_code?: Maybe<Scalars['String']>;
  theme_name?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "field_of_study" */
export type Field_Of_Study_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  intro_video_id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_code?: InputMaybe<Order_By>;
  theme_name?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Field_Of_Study_Min_Fields = {
  __typename?: 'field_of_study_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  intro_video_id?: Maybe<Scalars['uuid']>;
  slug?: Maybe<Scalars['String']>;
  subject_code?: Maybe<Scalars['String']>;
  theme_name?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "field_of_study" */
export type Field_Of_Study_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  intro_video_id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_code?: InputMaybe<Order_By>;
  theme_name?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "field_of_study" */
export type Field_Of_Study_Mutation_Response = {
  __typename?: 'field_of_study_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Field_Of_Study>;
};

/** input type for inserting object relation for remote table "field_of_study" */
export type Field_Of_Study_Obj_Rel_Insert_Input = {
  data: Field_Of_Study_Insert_Input;
  on_conflict?: InputMaybe<Field_Of_Study_On_Conflict>;
};

/** on conflict condition type for table "field_of_study" */
export type Field_Of_Study_On_Conflict = {
  constraint: Field_Of_Study_Constraint;
  update_columns: Array<Field_Of_Study_Update_Column>;
  where?: InputMaybe<Field_Of_Study_Bool_Exp>;
};

/** ordering options when selecting data from "field_of_study" */
export type Field_Of_Study_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  intro_video?: InputMaybe<Videos_Order_By>;
  intro_video_id?: InputMaybe<Order_By>;
  is_core_subject?: InputMaybe<Order_By>;
  is_specialist_subject?: InputMaybe<Order_By>;
  programme_of_study_units_aggregate?: InputMaybe<Programme_Of_Study_Aggregate_Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_code?: InputMaybe<Order_By>;
  teacher_field_of_studies_aggregate?: InputMaybe<Teacher_Field_Of_Studies_Aggregate_Order_By>;
  theme_name?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "field_of_study" */
export type Field_Of_Study_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "field_of_study" */
export enum Field_Of_Study_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  IntroVideoId = 'intro_video_id',
  /** column name */
  IsCoreSubject = 'is_core_subject',
  /** column name */
  IsSpecialistSubject = 'is_specialist_subject',
  /** column name */
  Slug = 'slug',
  /** column name */
  SubjectCode = 'subject_code',
  /** column name */
  ThemeName = 'theme_name',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "field_of_study" */
export type Field_Of_Study_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  intro_video_id?: InputMaybe<Scalars['uuid']>;
  is_core_subject?: InputMaybe<Scalars['Boolean']>;
  is_specialist_subject?: InputMaybe<Scalars['Boolean']>;
  slug?: InputMaybe<Scalars['String']>;
  subject_code?: InputMaybe<Scalars['String']>;
  theme_name?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Field_Of_Study_Stddev_Fields = {
  __typename?: 'field_of_study_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "field_of_study" */
export type Field_Of_Study_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Field_Of_Study_Stddev_Pop_Fields = {
  __typename?: 'field_of_study_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "field_of_study" */
export type Field_Of_Study_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Field_Of_Study_Stddev_Samp_Fields = {
  __typename?: 'field_of_study_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "field_of_study" */
export type Field_Of_Study_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Field_Of_Study_Sum_Fields = {
  __typename?: 'field_of_study_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "field_of_study" */
export type Field_Of_Study_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "field_of_study" */
export enum Field_Of_Study_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  IntroVideoId = 'intro_video_id',
  /** column name */
  IsCoreSubject = 'is_core_subject',
  /** column name */
  IsSpecialistSubject = 'is_specialist_subject',
  /** column name */
  Slug = 'slug',
  /** column name */
  SubjectCode = 'subject_code',
  /** column name */
  ThemeName = 'theme_name',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Field_Of_Study_Var_Pop_Fields = {
  __typename?: 'field_of_study_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "field_of_study" */
export type Field_Of_Study_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Field_Of_Study_Var_Samp_Fields = {
  __typename?: 'field_of_study_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "field_of_study" */
export type Field_Of_Study_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Field_Of_Study_Variance_Fields = {
  __typename?: 'field_of_study_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "field_of_study" */
export type Field_Of_Study_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "ingest.asset_ingest" */
export type Ingest_Asset_Ingest = {
  __typename?: 'ingest_asset_ingest';
  asset_id: Scalars['String'];
  asset_type: Scalars['String'];
  created_at?: Maybe<Scalars['timestamptz']>;
  export_status?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  lesson_folder_id?: Maybe<Scalars['String']>;
  lesson_huid?: Maybe<Scalars['String']>;
  lesson_id: Scalars['Int'];
  lesson_uid?: Maybe<Scalars['String']>;
  permissions_status?: Maybe<Scalars['String']>;
  restricted_drive_status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Aggregate = {
  __typename?: 'ingest_asset_ingest_aggregate';
  aggregate?: Maybe<Ingest_Asset_Ingest_Aggregate_Fields>;
  nodes: Array<Ingest_Asset_Ingest>;
};

/** aggregate fields of "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Aggregate_Fields = {
  __typename?: 'ingest_asset_ingest_aggregate_fields';
  avg?: Maybe<Ingest_Asset_Ingest_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Ingest_Asset_Ingest_Max_Fields>;
  min?: Maybe<Ingest_Asset_Ingest_Min_Fields>;
  stddev?: Maybe<Ingest_Asset_Ingest_Stddev_Fields>;
  stddev_pop?: Maybe<Ingest_Asset_Ingest_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Ingest_Asset_Ingest_Stddev_Samp_Fields>;
  sum?: Maybe<Ingest_Asset_Ingest_Sum_Fields>;
  var_pop?: Maybe<Ingest_Asset_Ingest_Var_Pop_Fields>;
  var_samp?: Maybe<Ingest_Asset_Ingest_Var_Samp_Fields>;
  variance?: Maybe<Ingest_Asset_Ingest_Variance_Fields>;
};


/** aggregate fields of "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Ingest_Asset_Ingest_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Aggregate_Order_By = {
  avg?: InputMaybe<Ingest_Asset_Ingest_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Ingest_Asset_Ingest_Max_Order_By>;
  min?: InputMaybe<Ingest_Asset_Ingest_Min_Order_By>;
  stddev?: InputMaybe<Ingest_Asset_Ingest_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Ingest_Asset_Ingest_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Ingest_Asset_Ingest_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Ingest_Asset_Ingest_Sum_Order_By>;
  var_pop?: InputMaybe<Ingest_Asset_Ingest_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Ingest_Asset_Ingest_Var_Samp_Order_By>;
  variance?: InputMaybe<Ingest_Asset_Ingest_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Arr_Rel_Insert_Input = {
  data: Array<Ingest_Asset_Ingest_Insert_Input>;
  on_conflict?: InputMaybe<Ingest_Asset_Ingest_On_Conflict>;
};

/** aggregate avg on columns */
export type Ingest_Asset_Ingest_Avg_Fields = {
  __typename?: 'ingest_asset_ingest_avg_fields';
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Avg_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ingest.asset_ingest". All fields are combined with a logical 'AND'. */
export type Ingest_Asset_Ingest_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Ingest_Asset_Ingest_Bool_Exp>>>;
  _not?: InputMaybe<Ingest_Asset_Ingest_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Ingest_Asset_Ingest_Bool_Exp>>>;
  asset_id?: InputMaybe<String_Comparison_Exp>;
  asset_type?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  export_status?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  lesson_folder_id?: InputMaybe<String_Comparison_Exp>;
  lesson_huid?: InputMaybe<String_Comparison_Exp>;
  lesson_id?: InputMaybe<Int_Comparison_Exp>;
  lesson_uid?: InputMaybe<String_Comparison_Exp>;
  permissions_status?: InputMaybe<String_Comparison_Exp>;
  restricted_drive_status?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ingest.asset_ingest" */
export enum Ingest_Asset_Ingest_Constraint {
  /** unique or primary key constraint */
  AssetIngestLessonIdAssetIdAssetTypeKey = 'asset_ingest_lesson_id_asset_id_asset_type_key',
  /** unique or primary key constraint */
  AssetIngestPkey = 'asset_ingest_pkey'
}

/** input type for incrementing integer column in table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Inc_Input = {
  lesson_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Insert_Input = {
  asset_id?: InputMaybe<Scalars['String']>;
  asset_type?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  export_status?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  lesson_folder_id?: InputMaybe<Scalars['String']>;
  lesson_huid?: InputMaybe<Scalars['String']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  lesson_uid?: InputMaybe<Scalars['String']>;
  permissions_status?: InputMaybe<Scalars['String']>;
  restricted_drive_status?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Ingest_Asset_Ingest_Max_Fields = {
  __typename?: 'ingest_asset_ingest_max_fields';
  asset_id?: Maybe<Scalars['String']>;
  asset_type?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  export_status?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  lesson_folder_id?: Maybe<Scalars['String']>;
  lesson_huid?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['Int']>;
  lesson_uid?: Maybe<Scalars['String']>;
  permissions_status?: Maybe<Scalars['String']>;
  restricted_drive_status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Max_Order_By = {
  asset_id?: InputMaybe<Order_By>;
  asset_type?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  export_status?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_folder_id?: InputMaybe<Order_By>;
  lesson_huid?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_uid?: InputMaybe<Order_By>;
  permissions_status?: InputMaybe<Order_By>;
  restricted_drive_status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Ingest_Asset_Ingest_Min_Fields = {
  __typename?: 'ingest_asset_ingest_min_fields';
  asset_id?: Maybe<Scalars['String']>;
  asset_type?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  export_status?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  lesson_folder_id?: Maybe<Scalars['String']>;
  lesson_huid?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['Int']>;
  lesson_uid?: Maybe<Scalars['String']>;
  permissions_status?: Maybe<Scalars['String']>;
  restricted_drive_status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Min_Order_By = {
  asset_id?: InputMaybe<Order_By>;
  asset_type?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  export_status?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_folder_id?: InputMaybe<Order_By>;
  lesson_huid?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_uid?: InputMaybe<Order_By>;
  permissions_status?: InputMaybe<Order_By>;
  restricted_drive_status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Mutation_Response = {
  __typename?: 'ingest_asset_ingest_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Ingest_Asset_Ingest>;
};

/** input type for inserting object relation for remote table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Obj_Rel_Insert_Input = {
  data: Ingest_Asset_Ingest_Insert_Input;
  on_conflict?: InputMaybe<Ingest_Asset_Ingest_On_Conflict>;
};

/** on conflict condition type for table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_On_Conflict = {
  constraint: Ingest_Asset_Ingest_Constraint;
  update_columns: Array<Ingest_Asset_Ingest_Update_Column>;
  where?: InputMaybe<Ingest_Asset_Ingest_Bool_Exp>;
};

/** ordering options when selecting data from "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Order_By = {
  asset_id?: InputMaybe<Order_By>;
  asset_type?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  export_status?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_folder_id?: InputMaybe<Order_By>;
  lesson_huid?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_uid?: InputMaybe<Order_By>;
  permissions_status?: InputMaybe<Order_By>;
  restricted_drive_status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "ingest.asset_ingest" */
export enum Ingest_Asset_Ingest_Select_Column {
  /** column name */
  AssetId = 'asset_id',
  /** column name */
  AssetType = 'asset_type',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  ExportStatus = 'export_status',
  /** column name */
  Id = 'id',
  /** column name */
  LessonFolderId = 'lesson_folder_id',
  /** column name */
  LessonHuid = 'lesson_huid',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LessonUid = 'lesson_uid',
  /** column name */
  PermissionsStatus = 'permissions_status',
  /** column name */
  RestrictedDriveStatus = 'restricted_drive_status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Set_Input = {
  asset_id?: InputMaybe<Scalars['String']>;
  asset_type?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  export_status?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  lesson_folder_id?: InputMaybe<Scalars['String']>;
  lesson_huid?: InputMaybe<Scalars['String']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  lesson_uid?: InputMaybe<Scalars['String']>;
  permissions_status?: InputMaybe<Scalars['String']>;
  restricted_drive_status?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Ingest_Asset_Ingest_Stddev_Fields = {
  __typename?: 'ingest_asset_ingest_stddev_fields';
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Stddev_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Ingest_Asset_Ingest_Stddev_Pop_Fields = {
  __typename?: 'ingest_asset_ingest_stddev_pop_fields';
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Stddev_Pop_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Ingest_Asset_Ingest_Stddev_Samp_Fields = {
  __typename?: 'ingest_asset_ingest_stddev_samp_fields';
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Stddev_Samp_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Ingest_Asset_Ingest_Sum_Fields = {
  __typename?: 'ingest_asset_ingest_sum_fields';
  lesson_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Sum_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
};

/** update columns of table "ingest.asset_ingest" */
export enum Ingest_Asset_Ingest_Update_Column {
  /** column name */
  AssetId = 'asset_id',
  /** column name */
  AssetType = 'asset_type',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  ExportStatus = 'export_status',
  /** column name */
  Id = 'id',
  /** column name */
  LessonFolderId = 'lesson_folder_id',
  /** column name */
  LessonHuid = 'lesson_huid',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LessonUid = 'lesson_uid',
  /** column name */
  PermissionsStatus = 'permissions_status',
  /** column name */
  RestrictedDriveStatus = 'restricted_drive_status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Ingest_Asset_Ingest_Var_Pop_Fields = {
  __typename?: 'ingest_asset_ingest_var_pop_fields';
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Var_Pop_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Ingest_Asset_Ingest_Var_Samp_Fields = {
  __typename?: 'ingest_asset_ingest_var_samp_fields';
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Var_Samp_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Ingest_Asset_Ingest_Variance_Fields = {
  __typename?: 'ingest_asset_ingest_variance_fields';
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "ingest.asset_ingest" */
export type Ingest_Asset_Ingest_Variance_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive = {
  __typename?: 'ingest_forms_on_drive';
  created_at?: Maybe<Scalars['timestamptz']>;
  drive_id: Scalars['String'];
  drive_url?: Maybe<Scalars['String']>;
  file_name?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  is_a_copy: Scalars['Boolean'];
  public_id?: Maybe<Scalars['String']>;
  public_url?: Maybe<Scalars['String']>;
  response_sheet_id?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Aggregate = {
  __typename?: 'ingest_forms_on_drive_aggregate';
  aggregate?: Maybe<Ingest_Forms_On_Drive_Aggregate_Fields>;
  nodes: Array<Ingest_Forms_On_Drive>;
};

/** aggregate fields of "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Aggregate_Fields = {
  __typename?: 'ingest_forms_on_drive_aggregate_fields';
  avg?: Maybe<Ingest_Forms_On_Drive_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Ingest_Forms_On_Drive_Max_Fields>;
  min?: Maybe<Ingest_Forms_On_Drive_Min_Fields>;
  stddev?: Maybe<Ingest_Forms_On_Drive_Stddev_Fields>;
  stddev_pop?: Maybe<Ingest_Forms_On_Drive_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Ingest_Forms_On_Drive_Stddev_Samp_Fields>;
  sum?: Maybe<Ingest_Forms_On_Drive_Sum_Fields>;
  var_pop?: Maybe<Ingest_Forms_On_Drive_Var_Pop_Fields>;
  var_samp?: Maybe<Ingest_Forms_On_Drive_Var_Samp_Fields>;
  variance?: Maybe<Ingest_Forms_On_Drive_Variance_Fields>;
};


/** aggregate fields of "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Ingest_Forms_On_Drive_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Aggregate_Order_By = {
  avg?: InputMaybe<Ingest_Forms_On_Drive_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Ingest_Forms_On_Drive_Max_Order_By>;
  min?: InputMaybe<Ingest_Forms_On_Drive_Min_Order_By>;
  stddev?: InputMaybe<Ingest_Forms_On_Drive_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Ingest_Forms_On_Drive_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Ingest_Forms_On_Drive_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Ingest_Forms_On_Drive_Sum_Order_By>;
  var_pop?: InputMaybe<Ingest_Forms_On_Drive_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Ingest_Forms_On_Drive_Var_Samp_Order_By>;
  variance?: InputMaybe<Ingest_Forms_On_Drive_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Arr_Rel_Insert_Input = {
  data: Array<Ingest_Forms_On_Drive_Insert_Input>;
  on_conflict?: InputMaybe<Ingest_Forms_On_Drive_On_Conflict>;
};

/** aggregate avg on columns */
export type Ingest_Forms_On_Drive_Avg_Fields = {
  __typename?: 'ingest_forms_on_drive_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ingest.forms_on_drive". All fields are combined with a logical 'AND'. */
export type Ingest_Forms_On_Drive_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Ingest_Forms_On_Drive_Bool_Exp>>>;
  _not?: InputMaybe<Ingest_Forms_On_Drive_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Ingest_Forms_On_Drive_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  drive_id?: InputMaybe<String_Comparison_Exp>;
  drive_url?: InputMaybe<String_Comparison_Exp>;
  file_name?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_a_copy?: InputMaybe<Boolean_Comparison_Exp>;
  public_id?: InputMaybe<String_Comparison_Exp>;
  public_url?: InputMaybe<String_Comparison_Exp>;
  response_sheet_id?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ingest.forms_on_drive" */
export enum Ingest_Forms_On_Drive_Constraint {
  /** unique or primary key constraint */
  FormsOnDriveDriveIdKey = 'forms_on_drive_drive_id_key',
  /** unique or primary key constraint */
  FormsOnDrivePkey = 'forms_on_drive_pkey'
}

/** input type for incrementing integer column in table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  drive_id?: InputMaybe<Scalars['String']>;
  drive_url?: InputMaybe<Scalars['String']>;
  file_name?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  is_a_copy?: InputMaybe<Scalars['Boolean']>;
  public_id?: InputMaybe<Scalars['String']>;
  public_url?: InputMaybe<Scalars['String']>;
  response_sheet_id?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Ingest_Forms_On_Drive_Max_Fields = {
  __typename?: 'ingest_forms_on_drive_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  drive_id?: Maybe<Scalars['String']>;
  drive_url?: Maybe<Scalars['String']>;
  file_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  public_id?: Maybe<Scalars['String']>;
  public_url?: Maybe<Scalars['String']>;
  response_sheet_id?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  drive_id?: InputMaybe<Order_By>;
  drive_url?: InputMaybe<Order_By>;
  file_name?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  public_id?: InputMaybe<Order_By>;
  public_url?: InputMaybe<Order_By>;
  response_sheet_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Ingest_Forms_On_Drive_Min_Fields = {
  __typename?: 'ingest_forms_on_drive_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  drive_id?: Maybe<Scalars['String']>;
  drive_url?: Maybe<Scalars['String']>;
  file_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  public_id?: Maybe<Scalars['String']>;
  public_url?: Maybe<Scalars['String']>;
  response_sheet_id?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  drive_id?: InputMaybe<Order_By>;
  drive_url?: InputMaybe<Order_By>;
  file_name?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  public_id?: InputMaybe<Order_By>;
  public_url?: InputMaybe<Order_By>;
  response_sheet_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Mutation_Response = {
  __typename?: 'ingest_forms_on_drive_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Ingest_Forms_On_Drive>;
};

/** input type for inserting object relation for remote table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Obj_Rel_Insert_Input = {
  data: Ingest_Forms_On_Drive_Insert_Input;
  on_conflict?: InputMaybe<Ingest_Forms_On_Drive_On_Conflict>;
};

/** on conflict condition type for table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_On_Conflict = {
  constraint: Ingest_Forms_On_Drive_Constraint;
  update_columns: Array<Ingest_Forms_On_Drive_Update_Column>;
  where?: InputMaybe<Ingest_Forms_On_Drive_Bool_Exp>;
};

/** ordering options when selecting data from "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Order_By = {
  created_at?: InputMaybe<Order_By>;
  drive_id?: InputMaybe<Order_By>;
  drive_url?: InputMaybe<Order_By>;
  file_name?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_a_copy?: InputMaybe<Order_By>;
  public_id?: InputMaybe<Order_By>;
  public_url?: InputMaybe<Order_By>;
  response_sheet_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "ingest.forms_on_drive" */
export enum Ingest_Forms_On_Drive_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DriveId = 'drive_id',
  /** column name */
  DriveUrl = 'drive_url',
  /** column name */
  FileName = 'file_name',
  /** column name */
  Id = 'id',
  /** column name */
  IsACopy = 'is_a_copy',
  /** column name */
  PublicId = 'public_id',
  /** column name */
  PublicUrl = 'public_url',
  /** column name */
  ResponseSheetId = 'response_sheet_id',
  /** column name */
  Title = 'title',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  drive_id?: InputMaybe<Scalars['String']>;
  drive_url?: InputMaybe<Scalars['String']>;
  file_name?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  is_a_copy?: InputMaybe<Scalars['Boolean']>;
  public_id?: InputMaybe<Scalars['String']>;
  public_url?: InputMaybe<Scalars['String']>;
  response_sheet_id?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Ingest_Forms_On_Drive_Stddev_Fields = {
  __typename?: 'ingest_forms_on_drive_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Ingest_Forms_On_Drive_Stddev_Pop_Fields = {
  __typename?: 'ingest_forms_on_drive_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Ingest_Forms_On_Drive_Stddev_Samp_Fields = {
  __typename?: 'ingest_forms_on_drive_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Ingest_Forms_On_Drive_Sum_Fields = {
  __typename?: 'ingest_forms_on_drive_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "ingest.forms_on_drive" */
export enum Ingest_Forms_On_Drive_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DriveId = 'drive_id',
  /** column name */
  DriveUrl = 'drive_url',
  /** column name */
  FileName = 'file_name',
  /** column name */
  Id = 'id',
  /** column name */
  IsACopy = 'is_a_copy',
  /** column name */
  PublicId = 'public_id',
  /** column name */
  PublicUrl = 'public_url',
  /** column name */
  ResponseSheetId = 'response_sheet_id',
  /** column name */
  Title = 'title',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Ingest_Forms_On_Drive_Var_Pop_Fields = {
  __typename?: 'ingest_forms_on_drive_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Ingest_Forms_On_Drive_Var_Samp_Fields = {
  __typename?: 'ingest_forms_on_drive_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Ingest_Forms_On_Drive_Variance_Fields = {
  __typename?: 'ingest_forms_on_drive_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "ingest.forms_on_drive" */
export type Ingest_Forms_On_Drive_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest = {
  __typename?: 'ingest_intro_quiz_ingest';
  exit_quiz_drive_id?: Maybe<Scalars['String']>;
  exit_quiz_url: Scalars['String'];
  id: Scalars['Int'];
  intro_quiz_directory?: Maybe<Scalars['String']>;
  intro_quiz_drive_id?: Maybe<Scalars['String']>;
  intro_quiz_filename: Scalars['String'];
  unit_lesson_id: Scalars['Int'];
};

/** aggregated selection of "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Aggregate = {
  __typename?: 'ingest_intro_quiz_ingest_aggregate';
  aggregate?: Maybe<Ingest_Intro_Quiz_Ingest_Aggregate_Fields>;
  nodes: Array<Ingest_Intro_Quiz_Ingest>;
};

/** aggregate fields of "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Aggregate_Fields = {
  __typename?: 'ingest_intro_quiz_ingest_aggregate_fields';
  avg?: Maybe<Ingest_Intro_Quiz_Ingest_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Ingest_Intro_Quiz_Ingest_Max_Fields>;
  min?: Maybe<Ingest_Intro_Quiz_Ingest_Min_Fields>;
  stddev?: Maybe<Ingest_Intro_Quiz_Ingest_Stddev_Fields>;
  stddev_pop?: Maybe<Ingest_Intro_Quiz_Ingest_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Ingest_Intro_Quiz_Ingest_Stddev_Samp_Fields>;
  sum?: Maybe<Ingest_Intro_Quiz_Ingest_Sum_Fields>;
  var_pop?: Maybe<Ingest_Intro_Quiz_Ingest_Var_Pop_Fields>;
  var_samp?: Maybe<Ingest_Intro_Quiz_Ingest_Var_Samp_Fields>;
  variance?: Maybe<Ingest_Intro_Quiz_Ingest_Variance_Fields>;
};


/** aggregate fields of "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Ingest_Intro_Quiz_Ingest_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Aggregate_Order_By = {
  avg?: InputMaybe<Ingest_Intro_Quiz_Ingest_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Ingest_Intro_Quiz_Ingest_Max_Order_By>;
  min?: InputMaybe<Ingest_Intro_Quiz_Ingest_Min_Order_By>;
  stddev?: InputMaybe<Ingest_Intro_Quiz_Ingest_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Ingest_Intro_Quiz_Ingest_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Ingest_Intro_Quiz_Ingest_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Ingest_Intro_Quiz_Ingest_Sum_Order_By>;
  var_pop?: InputMaybe<Ingest_Intro_Quiz_Ingest_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Ingest_Intro_Quiz_Ingest_Var_Samp_Order_By>;
  variance?: InputMaybe<Ingest_Intro_Quiz_Ingest_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Arr_Rel_Insert_Input = {
  data: Array<Ingest_Intro_Quiz_Ingest_Insert_Input>;
  on_conflict?: InputMaybe<Ingest_Intro_Quiz_Ingest_On_Conflict>;
};

/** aggregate avg on columns */
export type Ingest_Intro_Quiz_Ingest_Avg_Fields = {
  __typename?: 'ingest_intro_quiz_ingest_avg_fields';
  id?: Maybe<Scalars['Float']>;
  unit_lesson_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  unit_lesson_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ingest.intro_quiz_ingest". All fields are combined with a logical 'AND'. */
export type Ingest_Intro_Quiz_Ingest_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Ingest_Intro_Quiz_Ingest_Bool_Exp>>>;
  _not?: InputMaybe<Ingest_Intro_Quiz_Ingest_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Ingest_Intro_Quiz_Ingest_Bool_Exp>>>;
  exit_quiz_drive_id?: InputMaybe<String_Comparison_Exp>;
  exit_quiz_url?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  intro_quiz_directory?: InputMaybe<String_Comparison_Exp>;
  intro_quiz_drive_id?: InputMaybe<String_Comparison_Exp>;
  intro_quiz_filename?: InputMaybe<String_Comparison_Exp>;
  unit_lesson_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "ingest.intro_quiz_ingest" */
export enum Ingest_Intro_Quiz_Ingest_Constraint {
  /** unique or primary key constraint */
  IntroQuizIngestPkey = 'intro_quiz_ingest_pkey'
}

/** input type for incrementing integer column in table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  unit_lesson_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Insert_Input = {
  exit_quiz_drive_id?: InputMaybe<Scalars['String']>;
  exit_quiz_url?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  intro_quiz_directory?: InputMaybe<Scalars['String']>;
  intro_quiz_drive_id?: InputMaybe<Scalars['String']>;
  intro_quiz_filename?: InputMaybe<Scalars['String']>;
  unit_lesson_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Ingest_Intro_Quiz_Ingest_Max_Fields = {
  __typename?: 'ingest_intro_quiz_ingest_max_fields';
  exit_quiz_drive_id?: Maybe<Scalars['String']>;
  exit_quiz_url?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  intro_quiz_directory?: Maybe<Scalars['String']>;
  intro_quiz_drive_id?: Maybe<Scalars['String']>;
  intro_quiz_filename?: Maybe<Scalars['String']>;
  unit_lesson_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Max_Order_By = {
  exit_quiz_drive_id?: InputMaybe<Order_By>;
  exit_quiz_url?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  intro_quiz_directory?: InputMaybe<Order_By>;
  intro_quiz_drive_id?: InputMaybe<Order_By>;
  intro_quiz_filename?: InputMaybe<Order_By>;
  unit_lesson_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Ingest_Intro_Quiz_Ingest_Min_Fields = {
  __typename?: 'ingest_intro_quiz_ingest_min_fields';
  exit_quiz_drive_id?: Maybe<Scalars['String']>;
  exit_quiz_url?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  intro_quiz_directory?: Maybe<Scalars['String']>;
  intro_quiz_drive_id?: Maybe<Scalars['String']>;
  intro_quiz_filename?: Maybe<Scalars['String']>;
  unit_lesson_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Min_Order_By = {
  exit_quiz_drive_id?: InputMaybe<Order_By>;
  exit_quiz_url?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  intro_quiz_directory?: InputMaybe<Order_By>;
  intro_quiz_drive_id?: InputMaybe<Order_By>;
  intro_quiz_filename?: InputMaybe<Order_By>;
  unit_lesson_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Mutation_Response = {
  __typename?: 'ingest_intro_quiz_ingest_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Ingest_Intro_Quiz_Ingest>;
};

/** input type for inserting object relation for remote table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Obj_Rel_Insert_Input = {
  data: Ingest_Intro_Quiz_Ingest_Insert_Input;
  on_conflict?: InputMaybe<Ingest_Intro_Quiz_Ingest_On_Conflict>;
};

/** on conflict condition type for table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_On_Conflict = {
  constraint: Ingest_Intro_Quiz_Ingest_Constraint;
  update_columns: Array<Ingest_Intro_Quiz_Ingest_Update_Column>;
  where?: InputMaybe<Ingest_Intro_Quiz_Ingest_Bool_Exp>;
};

/** ordering options when selecting data from "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Order_By = {
  exit_quiz_drive_id?: InputMaybe<Order_By>;
  exit_quiz_url?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  intro_quiz_directory?: InputMaybe<Order_By>;
  intro_quiz_drive_id?: InputMaybe<Order_By>;
  intro_quiz_filename?: InputMaybe<Order_By>;
  unit_lesson_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "ingest.intro_quiz_ingest" */
export enum Ingest_Intro_Quiz_Ingest_Select_Column {
  /** column name */
  ExitQuizDriveId = 'exit_quiz_drive_id',
  /** column name */
  ExitQuizUrl = 'exit_quiz_url',
  /** column name */
  Id = 'id',
  /** column name */
  IntroQuizDirectory = 'intro_quiz_directory',
  /** column name */
  IntroQuizDriveId = 'intro_quiz_drive_id',
  /** column name */
  IntroQuizFilename = 'intro_quiz_filename',
  /** column name */
  UnitLessonId = 'unit_lesson_id'
}

/** input type for updating data in table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Set_Input = {
  exit_quiz_drive_id?: InputMaybe<Scalars['String']>;
  exit_quiz_url?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  intro_quiz_directory?: InputMaybe<Scalars['String']>;
  intro_quiz_drive_id?: InputMaybe<Scalars['String']>;
  intro_quiz_filename?: InputMaybe<Scalars['String']>;
  unit_lesson_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Ingest_Intro_Quiz_Ingest_Stddev_Fields = {
  __typename?: 'ingest_intro_quiz_ingest_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  unit_lesson_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  unit_lesson_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Ingest_Intro_Quiz_Ingest_Stddev_Pop_Fields = {
  __typename?: 'ingest_intro_quiz_ingest_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  unit_lesson_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  unit_lesson_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Ingest_Intro_Quiz_Ingest_Stddev_Samp_Fields = {
  __typename?: 'ingest_intro_quiz_ingest_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  unit_lesson_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  unit_lesson_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Ingest_Intro_Quiz_Ingest_Sum_Fields = {
  __typename?: 'ingest_intro_quiz_ingest_sum_fields';
  id?: Maybe<Scalars['Int']>;
  unit_lesson_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  unit_lesson_id?: InputMaybe<Order_By>;
};

/** update columns of table "ingest.intro_quiz_ingest" */
export enum Ingest_Intro_Quiz_Ingest_Update_Column {
  /** column name */
  ExitQuizDriveId = 'exit_quiz_drive_id',
  /** column name */
  ExitQuizUrl = 'exit_quiz_url',
  /** column name */
  Id = 'id',
  /** column name */
  IntroQuizDirectory = 'intro_quiz_directory',
  /** column name */
  IntroQuizDriveId = 'intro_quiz_drive_id',
  /** column name */
  IntroQuizFilename = 'intro_quiz_filename',
  /** column name */
  UnitLessonId = 'unit_lesson_id'
}

/** aggregate var_pop on columns */
export type Ingest_Intro_Quiz_Ingest_Var_Pop_Fields = {
  __typename?: 'ingest_intro_quiz_ingest_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  unit_lesson_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  unit_lesson_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Ingest_Intro_Quiz_Ingest_Var_Samp_Fields = {
  __typename?: 'ingest_intro_quiz_ingest_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  unit_lesson_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  unit_lesson_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Ingest_Intro_Quiz_Ingest_Variance_Fields = {
  __typename?: 'ingest_intro_quiz_ingest_variance_fields';
  id?: Maybe<Scalars['Float']>;
  unit_lesson_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "ingest.intro_quiz_ingest" */
export type Ingest_Intro_Quiz_Ingest_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  unit_lesson_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids = {
  __typename?: 'ingest_lesson_video_ids';
  created_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['Int'];
  lesson_ingest_id: Scalars['String'];
  signed: Scalars['Boolean'];
  updated_at?: Maybe<Scalars['timestamptz']>;
  video_file_id: Scalars['String'];
};

/** aggregated selection of "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Aggregate = {
  __typename?: 'ingest_lesson_video_ids_aggregate';
  aggregate?: Maybe<Ingest_Lesson_Video_Ids_Aggregate_Fields>;
  nodes: Array<Ingest_Lesson_Video_Ids>;
};

/** aggregate fields of "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Aggregate_Fields = {
  __typename?: 'ingest_lesson_video_ids_aggregate_fields';
  avg?: Maybe<Ingest_Lesson_Video_Ids_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Ingest_Lesson_Video_Ids_Max_Fields>;
  min?: Maybe<Ingest_Lesson_Video_Ids_Min_Fields>;
  stddev?: Maybe<Ingest_Lesson_Video_Ids_Stddev_Fields>;
  stddev_pop?: Maybe<Ingest_Lesson_Video_Ids_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Ingest_Lesson_Video_Ids_Stddev_Samp_Fields>;
  sum?: Maybe<Ingest_Lesson_Video_Ids_Sum_Fields>;
  var_pop?: Maybe<Ingest_Lesson_Video_Ids_Var_Pop_Fields>;
  var_samp?: Maybe<Ingest_Lesson_Video_Ids_Var_Samp_Fields>;
  variance?: Maybe<Ingest_Lesson_Video_Ids_Variance_Fields>;
};


/** aggregate fields of "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Ingest_Lesson_Video_Ids_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Aggregate_Order_By = {
  avg?: InputMaybe<Ingest_Lesson_Video_Ids_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Ingest_Lesson_Video_Ids_Max_Order_By>;
  min?: InputMaybe<Ingest_Lesson_Video_Ids_Min_Order_By>;
  stddev?: InputMaybe<Ingest_Lesson_Video_Ids_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Ingest_Lesson_Video_Ids_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Ingest_Lesson_Video_Ids_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Ingest_Lesson_Video_Ids_Sum_Order_By>;
  var_pop?: InputMaybe<Ingest_Lesson_Video_Ids_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Ingest_Lesson_Video_Ids_Var_Samp_Order_By>;
  variance?: InputMaybe<Ingest_Lesson_Video_Ids_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Arr_Rel_Insert_Input = {
  data: Array<Ingest_Lesson_Video_Ids_Insert_Input>;
  on_conflict?: InputMaybe<Ingest_Lesson_Video_Ids_On_Conflict>;
};

/** aggregate avg on columns */
export type Ingest_Lesson_Video_Ids_Avg_Fields = {
  __typename?: 'ingest_lesson_video_ids_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ingest.lesson_video_ids". All fields are combined with a logical 'AND'. */
export type Ingest_Lesson_Video_Ids_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Ingest_Lesson_Video_Ids_Bool_Exp>>>;
  _not?: InputMaybe<Ingest_Lesson_Video_Ids_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Ingest_Lesson_Video_Ids_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  lesson_ingest_id?: InputMaybe<String_Comparison_Exp>;
  signed?: InputMaybe<Boolean_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  video_file_id?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "ingest.lesson_video_ids" */
export enum Ingest_Lesson_Video_Ids_Constraint {
  /** unique or primary key constraint */
  LessonVideoIdsPkey = 'lesson_video_ids_pkey',
  /** unique or primary key constraint */
  LessonVideoIdsVideoFileIdLessonIngestIdKey = 'lesson_video_ids_video_file_id_lesson_ingest_id_key'
}

/** input type for incrementing integer column in table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  lesson_ingest_id?: InputMaybe<Scalars['String']>;
  signed?: InputMaybe<Scalars['Boolean']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  video_file_id?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Ingest_Lesson_Video_Ids_Max_Fields = {
  __typename?: 'ingest_lesson_video_ids_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  lesson_ingest_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  video_file_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_ingest_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  video_file_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Ingest_Lesson_Video_Ids_Min_Fields = {
  __typename?: 'ingest_lesson_video_ids_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  lesson_ingest_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  video_file_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_ingest_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  video_file_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Mutation_Response = {
  __typename?: 'ingest_lesson_video_ids_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Ingest_Lesson_Video_Ids>;
};

/** input type for inserting object relation for remote table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Obj_Rel_Insert_Input = {
  data: Ingest_Lesson_Video_Ids_Insert_Input;
  on_conflict?: InputMaybe<Ingest_Lesson_Video_Ids_On_Conflict>;
};

/** on conflict condition type for table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_On_Conflict = {
  constraint: Ingest_Lesson_Video_Ids_Constraint;
  update_columns: Array<Ingest_Lesson_Video_Ids_Update_Column>;
  where?: InputMaybe<Ingest_Lesson_Video_Ids_Bool_Exp>;
};

/** ordering options when selecting data from "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_ingest_id?: InputMaybe<Order_By>;
  signed?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  video_file_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "ingest.lesson_video_ids" */
export enum Ingest_Lesson_Video_Ids_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  LessonIngestId = 'lesson_ingest_id',
  /** column name */
  Signed = 'signed',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  VideoFileId = 'video_file_id'
}

/** input type for updating data in table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  lesson_ingest_id?: InputMaybe<Scalars['String']>;
  signed?: InputMaybe<Scalars['Boolean']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  video_file_id?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Ingest_Lesson_Video_Ids_Stddev_Fields = {
  __typename?: 'ingest_lesson_video_ids_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Ingest_Lesson_Video_Ids_Stddev_Pop_Fields = {
  __typename?: 'ingest_lesson_video_ids_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Ingest_Lesson_Video_Ids_Stddev_Samp_Fields = {
  __typename?: 'ingest_lesson_video_ids_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Ingest_Lesson_Video_Ids_Sum_Fields = {
  __typename?: 'ingest_lesson_video_ids_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "ingest.lesson_video_ids" */
export enum Ingest_Lesson_Video_Ids_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  LessonIngestId = 'lesson_ingest_id',
  /** column name */
  Signed = 'signed',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  VideoFileId = 'video_file_id'
}

/** aggregate var_pop on columns */
export type Ingest_Lesson_Video_Ids_Var_Pop_Fields = {
  __typename?: 'ingest_lesson_video_ids_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Ingest_Lesson_Video_Ids_Var_Samp_Fields = {
  __typename?: 'ingest_lesson_video_ids_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Ingest_Lesson_Video_Ids_Variance_Fields = {
  __typename?: 'ingest_lesson_video_ids_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "ingest.lesson_video_ids" */
export type Ingest_Lesson_Video_Ids_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest = {
  __typename?: 'ingest_quiz_ingest';
  created_at?: Maybe<Scalars['timestamptz']>;
  generate_from_quiz_url?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  ingest_status?: Maybe<Scalars['String']>;
  lesson_folder_id?: Maybe<Scalars['String']>;
  lesson_huid?: Maybe<Scalars['String']>;
  lesson_id: Scalars['Int'];
  lesson_uid?: Maybe<Scalars['String']>;
  non_restricted_parent_id?: Maybe<Scalars['String']>;
  permissions_status?: Maybe<Scalars['String']>;
  quiz_file_name?: Maybe<Scalars['String']>;
  quiz_id?: Maybe<Scalars['String']>;
  quiz_public_id?: Maybe<Scalars['String']>;
  quiz_type: Scalars['String'];
  quiz_url?: Maybe<Scalars['String']>;
  restricted_drive_status?: Maybe<Scalars['String']>;
  unit_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Aggregate = {
  __typename?: 'ingest_quiz_ingest_aggregate';
  aggregate?: Maybe<Ingest_Quiz_Ingest_Aggregate_Fields>;
  nodes: Array<Ingest_Quiz_Ingest>;
};

/** aggregate fields of "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Aggregate_Fields = {
  __typename?: 'ingest_quiz_ingest_aggregate_fields';
  avg?: Maybe<Ingest_Quiz_Ingest_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Ingest_Quiz_Ingest_Max_Fields>;
  min?: Maybe<Ingest_Quiz_Ingest_Min_Fields>;
  stddev?: Maybe<Ingest_Quiz_Ingest_Stddev_Fields>;
  stddev_pop?: Maybe<Ingest_Quiz_Ingest_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Ingest_Quiz_Ingest_Stddev_Samp_Fields>;
  sum?: Maybe<Ingest_Quiz_Ingest_Sum_Fields>;
  var_pop?: Maybe<Ingest_Quiz_Ingest_Var_Pop_Fields>;
  var_samp?: Maybe<Ingest_Quiz_Ingest_Var_Samp_Fields>;
  variance?: Maybe<Ingest_Quiz_Ingest_Variance_Fields>;
};


/** aggregate fields of "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Ingest_Quiz_Ingest_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Aggregate_Order_By = {
  avg?: InputMaybe<Ingest_Quiz_Ingest_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Ingest_Quiz_Ingest_Max_Order_By>;
  min?: InputMaybe<Ingest_Quiz_Ingest_Min_Order_By>;
  stddev?: InputMaybe<Ingest_Quiz_Ingest_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Ingest_Quiz_Ingest_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Ingest_Quiz_Ingest_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Ingest_Quiz_Ingest_Sum_Order_By>;
  var_pop?: InputMaybe<Ingest_Quiz_Ingest_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Ingest_Quiz_Ingest_Var_Samp_Order_By>;
  variance?: InputMaybe<Ingest_Quiz_Ingest_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Arr_Rel_Insert_Input = {
  data: Array<Ingest_Quiz_Ingest_Insert_Input>;
  on_conflict?: InputMaybe<Ingest_Quiz_Ingest_On_Conflict>;
};

/** aggregate avg on columns */
export type Ingest_Quiz_Ingest_Avg_Fields = {
  __typename?: 'ingest_quiz_ingest_avg_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Avg_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ingest.quiz_ingest". All fields are combined with a logical 'AND'. */
export type Ingest_Quiz_Ingest_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Ingest_Quiz_Ingest_Bool_Exp>>>;
  _not?: InputMaybe<Ingest_Quiz_Ingest_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Ingest_Quiz_Ingest_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  generate_from_quiz_url?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  ingest_status?: InputMaybe<String_Comparison_Exp>;
  lesson_folder_id?: InputMaybe<String_Comparison_Exp>;
  lesson_huid?: InputMaybe<String_Comparison_Exp>;
  lesson_id?: InputMaybe<Int_Comparison_Exp>;
  lesson_uid?: InputMaybe<String_Comparison_Exp>;
  non_restricted_parent_id?: InputMaybe<String_Comparison_Exp>;
  permissions_status?: InputMaybe<String_Comparison_Exp>;
  quiz_file_name?: InputMaybe<String_Comparison_Exp>;
  quiz_id?: InputMaybe<String_Comparison_Exp>;
  quiz_public_id?: InputMaybe<String_Comparison_Exp>;
  quiz_type?: InputMaybe<String_Comparison_Exp>;
  quiz_url?: InputMaybe<String_Comparison_Exp>;
  restricted_drive_status?: InputMaybe<String_Comparison_Exp>;
  unit_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ingest.quiz_ingest" */
export enum Ingest_Quiz_Ingest_Constraint {
  /** unique or primary key constraint */
  QuizIngestLessonIdQuizUrlKey = 'quiz_ingest_lesson_id_quiz_url_key',
  /** unique or primary key constraint */
  QuizIngestPkey = 'quiz_ingest_pkey',
  /** unique or primary key constraint */
  QuizLessonUnitTypeGenerateUrlKeyNotNull = 'quiz_lesson_unit_type_generate_url_key_not_null',
  /** unique or primary key constraint */
  QuizLessonUnitTypeGenerateUrlKeyNull = 'quiz_lesson_unit_type_generate_url_key_null'
}

/** input type for incrementing integer column in table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Inc_Input = {
  lesson_id?: InputMaybe<Scalars['Int']>;
  unit_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  generate_from_quiz_url?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  ingest_status?: InputMaybe<Scalars['String']>;
  lesson_folder_id?: InputMaybe<Scalars['String']>;
  lesson_huid?: InputMaybe<Scalars['String']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  lesson_uid?: InputMaybe<Scalars['String']>;
  non_restricted_parent_id?: InputMaybe<Scalars['String']>;
  permissions_status?: InputMaybe<Scalars['String']>;
  quiz_file_name?: InputMaybe<Scalars['String']>;
  quiz_id?: InputMaybe<Scalars['String']>;
  quiz_public_id?: InputMaybe<Scalars['String']>;
  quiz_type?: InputMaybe<Scalars['String']>;
  quiz_url?: InputMaybe<Scalars['String']>;
  restricted_drive_status?: InputMaybe<Scalars['String']>;
  unit_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Ingest_Quiz_Ingest_Max_Fields = {
  __typename?: 'ingest_quiz_ingest_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  generate_from_quiz_url?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  ingest_status?: Maybe<Scalars['String']>;
  lesson_folder_id?: Maybe<Scalars['String']>;
  lesson_huid?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['Int']>;
  lesson_uid?: Maybe<Scalars['String']>;
  non_restricted_parent_id?: Maybe<Scalars['String']>;
  permissions_status?: Maybe<Scalars['String']>;
  quiz_file_name?: Maybe<Scalars['String']>;
  quiz_id?: Maybe<Scalars['String']>;
  quiz_public_id?: Maybe<Scalars['String']>;
  quiz_type?: Maybe<Scalars['String']>;
  quiz_url?: Maybe<Scalars['String']>;
  restricted_drive_status?: Maybe<Scalars['String']>;
  unit_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  generate_from_quiz_url?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_status?: InputMaybe<Order_By>;
  lesson_folder_id?: InputMaybe<Order_By>;
  lesson_huid?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_uid?: InputMaybe<Order_By>;
  non_restricted_parent_id?: InputMaybe<Order_By>;
  permissions_status?: InputMaybe<Order_By>;
  quiz_file_name?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  quiz_public_id?: InputMaybe<Order_By>;
  quiz_type?: InputMaybe<Order_By>;
  quiz_url?: InputMaybe<Order_By>;
  restricted_drive_status?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Ingest_Quiz_Ingest_Min_Fields = {
  __typename?: 'ingest_quiz_ingest_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  generate_from_quiz_url?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  ingest_status?: Maybe<Scalars['String']>;
  lesson_folder_id?: Maybe<Scalars['String']>;
  lesson_huid?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['Int']>;
  lesson_uid?: Maybe<Scalars['String']>;
  non_restricted_parent_id?: Maybe<Scalars['String']>;
  permissions_status?: Maybe<Scalars['String']>;
  quiz_file_name?: Maybe<Scalars['String']>;
  quiz_id?: Maybe<Scalars['String']>;
  quiz_public_id?: Maybe<Scalars['String']>;
  quiz_type?: Maybe<Scalars['String']>;
  quiz_url?: Maybe<Scalars['String']>;
  restricted_drive_status?: Maybe<Scalars['String']>;
  unit_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  generate_from_quiz_url?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_status?: InputMaybe<Order_By>;
  lesson_folder_id?: InputMaybe<Order_By>;
  lesson_huid?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_uid?: InputMaybe<Order_By>;
  non_restricted_parent_id?: InputMaybe<Order_By>;
  permissions_status?: InputMaybe<Order_By>;
  quiz_file_name?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  quiz_public_id?: InputMaybe<Order_By>;
  quiz_type?: InputMaybe<Order_By>;
  quiz_url?: InputMaybe<Order_By>;
  restricted_drive_status?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Mutation_Response = {
  __typename?: 'ingest_quiz_ingest_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Ingest_Quiz_Ingest>;
};

/** input type for inserting object relation for remote table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Obj_Rel_Insert_Input = {
  data: Ingest_Quiz_Ingest_Insert_Input;
  on_conflict?: InputMaybe<Ingest_Quiz_Ingest_On_Conflict>;
};

/** on conflict condition type for table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_On_Conflict = {
  constraint: Ingest_Quiz_Ingest_Constraint;
  update_columns: Array<Ingest_Quiz_Ingest_Update_Column>;
  where?: InputMaybe<Ingest_Quiz_Ingest_Bool_Exp>;
};

/** ordering options when selecting data from "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Order_By = {
  created_at?: InputMaybe<Order_By>;
  generate_from_quiz_url?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_status?: InputMaybe<Order_By>;
  lesson_folder_id?: InputMaybe<Order_By>;
  lesson_huid?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_uid?: InputMaybe<Order_By>;
  non_restricted_parent_id?: InputMaybe<Order_By>;
  permissions_status?: InputMaybe<Order_By>;
  quiz_file_name?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  quiz_public_id?: InputMaybe<Order_By>;
  quiz_type?: InputMaybe<Order_By>;
  quiz_url?: InputMaybe<Order_By>;
  restricted_drive_status?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "ingest.quiz_ingest" */
export enum Ingest_Quiz_Ingest_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  GenerateFromQuizUrl = 'generate_from_quiz_url',
  /** column name */
  Id = 'id',
  /** column name */
  IngestStatus = 'ingest_status',
  /** column name */
  LessonFolderId = 'lesson_folder_id',
  /** column name */
  LessonHuid = 'lesson_huid',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LessonUid = 'lesson_uid',
  /** column name */
  NonRestrictedParentId = 'non_restricted_parent_id',
  /** column name */
  PermissionsStatus = 'permissions_status',
  /** column name */
  QuizFileName = 'quiz_file_name',
  /** column name */
  QuizId = 'quiz_id',
  /** column name */
  QuizPublicId = 'quiz_public_id',
  /** column name */
  QuizType = 'quiz_type',
  /** column name */
  QuizUrl = 'quiz_url',
  /** column name */
  RestrictedDriveStatus = 'restricted_drive_status',
  /** column name */
  UnitId = 'unit_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  generate_from_quiz_url?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  ingest_status?: InputMaybe<Scalars['String']>;
  lesson_folder_id?: InputMaybe<Scalars['String']>;
  lesson_huid?: InputMaybe<Scalars['String']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  lesson_uid?: InputMaybe<Scalars['String']>;
  non_restricted_parent_id?: InputMaybe<Scalars['String']>;
  permissions_status?: InputMaybe<Scalars['String']>;
  quiz_file_name?: InputMaybe<Scalars['String']>;
  quiz_id?: InputMaybe<Scalars['String']>;
  quiz_public_id?: InputMaybe<Scalars['String']>;
  quiz_type?: InputMaybe<Scalars['String']>;
  quiz_url?: InputMaybe<Scalars['String']>;
  restricted_drive_status?: InputMaybe<Scalars['String']>;
  unit_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Ingest_Quiz_Ingest_Stddev_Fields = {
  __typename?: 'ingest_quiz_ingest_stddev_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Stddev_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Ingest_Quiz_Ingest_Stddev_Pop_Fields = {
  __typename?: 'ingest_quiz_ingest_stddev_pop_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Stddev_Pop_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Ingest_Quiz_Ingest_Stddev_Samp_Fields = {
  __typename?: 'ingest_quiz_ingest_stddev_samp_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Stddev_Samp_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Ingest_Quiz_Ingest_Sum_Fields = {
  __typename?: 'ingest_quiz_ingest_sum_fields';
  lesson_id?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Sum_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** update columns of table "ingest.quiz_ingest" */
export enum Ingest_Quiz_Ingest_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  GenerateFromQuizUrl = 'generate_from_quiz_url',
  /** column name */
  Id = 'id',
  /** column name */
  IngestStatus = 'ingest_status',
  /** column name */
  LessonFolderId = 'lesson_folder_id',
  /** column name */
  LessonHuid = 'lesson_huid',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LessonUid = 'lesson_uid',
  /** column name */
  NonRestrictedParentId = 'non_restricted_parent_id',
  /** column name */
  PermissionsStatus = 'permissions_status',
  /** column name */
  QuizFileName = 'quiz_file_name',
  /** column name */
  QuizId = 'quiz_id',
  /** column name */
  QuizPublicId = 'quiz_public_id',
  /** column name */
  QuizType = 'quiz_type',
  /** column name */
  QuizUrl = 'quiz_url',
  /** column name */
  RestrictedDriveStatus = 'restricted_drive_status',
  /** column name */
  UnitId = 'unit_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Ingest_Quiz_Ingest_Var_Pop_Fields = {
  __typename?: 'ingest_quiz_ingest_var_pop_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Var_Pop_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Ingest_Quiz_Ingest_Var_Samp_Fields = {
  __typename?: 'ingest_quiz_ingest_var_samp_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Var_Samp_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Ingest_Quiz_Ingest_Variance_Fields = {
  __typename?: 'ingest_quiz_ingest_variance_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "ingest.quiz_ingest" */
export type Ingest_Quiz_Ingest_Variance_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "ingest.video_ingest" */
export type Ingest_Video_Ingest = {
  __typename?: 'ingest_video_ingest';
  aspect_ratio?: Maybe<Scalars['String']>;
  bucket_location?: Maybe<Scalars['String']>;
  bucket_status: Scalars['String'];
  caption_bucket_location?: Maybe<Scalars['String']>;
  caption_provider?: Maybe<Scalars['String']>;
  caption_provider_error?: Maybe<Scalars['String']>;
  caption_provider_error_code?: Maybe<Scalars['String']>;
  caption_provider_job_id?: Maybe<Scalars['String']>;
  caption_provider_job_result?: Maybe<Scalars['String']>;
  caption_provider_our_id?: Maybe<Scalars['String']>;
  caption_provider_status?: Maybe<Scalars['String']>;
  caption_provider_uri?: Maybe<Scalars['String']>;
  caption_submitted_url?: Maybe<Scalars['String']>;
  captions?: Maybe<Scalars['jsonb']>;
  captions_json_url?: Maybe<Scalars['String']>;
  captions_required: Scalars['Boolean'];
  captions_vtt?: Maybe<Scalars['String']>;
  captions_vtt_url?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  embedded_in_resource_id?: Maybe<Scalars['String']>;
  embedded_in_resource_type?: Maybe<Resource_Types_Enum>;
  file_checksum?: Maybe<Scalars['String']>;
  file_checksum_algorithm?: Maybe<Scalars['String']>;
  file_status?: Maybe<Scalars['String']>;
  gdrive_file?: Maybe<Scalars['String']>;
  gdrive_file_id: Scalars['String'];
  gdrive_file_is_public?: Maybe<Scalars['Boolean']>;
  id: Scalars['uuid'];
  ingest_completed_at?: Maybe<Scalars['timestamptz']>;
  ingest_provider?: Maybe<Scalars['String']>;
  ingest_provider_asset_id?: Maybe<Scalars['String']>;
  ingest_provider_caption_status?: Maybe<Scalars['String']>;
  ingest_provider_error?: Maybe<Scalars['String']>;
  ingest_provider_playback_id?: Maybe<Scalars['String']>;
  ingest_provider_public_playback_id?: Maybe<Scalars['String']>;
  ingest_provider_status?: Maybe<Scalars['String']>;
  ingest_provider_text_track_id?: Maybe<Scalars['String']>;
  ingest_submitted_at?: Maybe<Scalars['timestamptz']>;
  inherit_captions_from_gdrive_file_id?: Maybe<Scalars['String']>;
  intro_video_for_field_of_study_id?: Maybe<Scalars['Int']>;
  is_embedded_in_resource: Scalars['Boolean'];
  is_sign_language_video: Scalars['Boolean'];
  lesson_id?: Maybe<Scalars['Int']>;
  lesson_ingest_uid?: Maybe<Scalars['String']>;
  max_resolution?: Maybe<Scalars['String']>;
  mp4_status?: Maybe<Scalars['String']>;
  original_height?: Maybe<Scalars['Int']>;
  original_width?: Maybe<Scalars['Int']>;
  overall_status: Scalars['String'];
  permissions_status?: Maybe<Scalars['String']>;
  ready_to_import: Scalars['Boolean'];
  restricted_drive_status?: Maybe<Scalars['String']>;
  transcript?: Maybe<Scalars['String']>;
  transcript_url?: Maybe<Scalars['String']>;
  unsigned_bucket_url?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  url_to_ingest?: Maybe<Scalars['String']>;
  video_duration?: Maybe<Scalars['String']>;
};


/** columns and relationships of "ingest.video_ingest" */
export type Ingest_Video_IngestCaptionsArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "ingest.video_ingest" */
export type Ingest_Video_Ingest_Aggregate = {
  __typename?: 'ingest_video_ingest_aggregate';
  aggregate?: Maybe<Ingest_Video_Ingest_Aggregate_Fields>;
  nodes: Array<Ingest_Video_Ingest>;
};

/** aggregate fields of "ingest.video_ingest" */
export type Ingest_Video_Ingest_Aggregate_Fields = {
  __typename?: 'ingest_video_ingest_aggregate_fields';
  avg?: Maybe<Ingest_Video_Ingest_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Ingest_Video_Ingest_Max_Fields>;
  min?: Maybe<Ingest_Video_Ingest_Min_Fields>;
  stddev?: Maybe<Ingest_Video_Ingest_Stddev_Fields>;
  stddev_pop?: Maybe<Ingest_Video_Ingest_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Ingest_Video_Ingest_Stddev_Samp_Fields>;
  sum?: Maybe<Ingest_Video_Ingest_Sum_Fields>;
  var_pop?: Maybe<Ingest_Video_Ingest_Var_Pop_Fields>;
  var_samp?: Maybe<Ingest_Video_Ingest_Var_Samp_Fields>;
  variance?: Maybe<Ingest_Video_Ingest_Variance_Fields>;
};


/** aggregate fields of "ingest.video_ingest" */
export type Ingest_Video_Ingest_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Ingest_Video_Ingest_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ingest.video_ingest" */
export type Ingest_Video_Ingest_Aggregate_Order_By = {
  avg?: InputMaybe<Ingest_Video_Ingest_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Ingest_Video_Ingest_Max_Order_By>;
  min?: InputMaybe<Ingest_Video_Ingest_Min_Order_By>;
  stddev?: InputMaybe<Ingest_Video_Ingest_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Ingest_Video_Ingest_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Ingest_Video_Ingest_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Ingest_Video_Ingest_Sum_Order_By>;
  var_pop?: InputMaybe<Ingest_Video_Ingest_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Ingest_Video_Ingest_Var_Samp_Order_By>;
  variance?: InputMaybe<Ingest_Video_Ingest_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Ingest_Video_Ingest_Append_Input = {
  captions?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "ingest.video_ingest" */
export type Ingest_Video_Ingest_Arr_Rel_Insert_Input = {
  data: Array<Ingest_Video_Ingest_Insert_Input>;
  on_conflict?: InputMaybe<Ingest_Video_Ingest_On_Conflict>;
};

/** aggregate avg on columns */
export type Ingest_Video_Ingest_Avg_Fields = {
  __typename?: 'ingest_video_ingest_avg_fields';
  intro_video_for_field_of_study_id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  original_height?: Maybe<Scalars['Float']>;
  original_width?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "ingest.video_ingest" */
export type Ingest_Video_Ingest_Avg_Order_By = {
  intro_video_for_field_of_study_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  original_height?: InputMaybe<Order_By>;
  original_width?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ingest.video_ingest". All fields are combined with a logical 'AND'. */
export type Ingest_Video_Ingest_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Ingest_Video_Ingest_Bool_Exp>>>;
  _not?: InputMaybe<Ingest_Video_Ingest_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Ingest_Video_Ingest_Bool_Exp>>>;
  aspect_ratio?: InputMaybe<String_Comparison_Exp>;
  bucket_location?: InputMaybe<String_Comparison_Exp>;
  bucket_status?: InputMaybe<String_Comparison_Exp>;
  caption_bucket_location?: InputMaybe<String_Comparison_Exp>;
  caption_provider?: InputMaybe<String_Comparison_Exp>;
  caption_provider_error?: InputMaybe<String_Comparison_Exp>;
  caption_provider_error_code?: InputMaybe<String_Comparison_Exp>;
  caption_provider_job_id?: InputMaybe<String_Comparison_Exp>;
  caption_provider_job_result?: InputMaybe<String_Comparison_Exp>;
  caption_provider_our_id?: InputMaybe<String_Comparison_Exp>;
  caption_provider_status?: InputMaybe<String_Comparison_Exp>;
  caption_provider_uri?: InputMaybe<String_Comparison_Exp>;
  caption_submitted_url?: InputMaybe<String_Comparison_Exp>;
  captions?: InputMaybe<Jsonb_Comparison_Exp>;
  captions_json_url?: InputMaybe<String_Comparison_Exp>;
  captions_required?: InputMaybe<Boolean_Comparison_Exp>;
  captions_vtt?: InputMaybe<String_Comparison_Exp>;
  captions_vtt_url?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  embedded_in_resource_id?: InputMaybe<String_Comparison_Exp>;
  embedded_in_resource_type?: InputMaybe<Resource_Types_Enum_Comparison_Exp>;
  file_checksum?: InputMaybe<String_Comparison_Exp>;
  file_checksum_algorithm?: InputMaybe<String_Comparison_Exp>;
  file_status?: InputMaybe<String_Comparison_Exp>;
  gdrive_file?: InputMaybe<String_Comparison_Exp>;
  gdrive_file_id?: InputMaybe<String_Comparison_Exp>;
  gdrive_file_is_public?: InputMaybe<Boolean_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  ingest_completed_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  ingest_provider?: InputMaybe<String_Comparison_Exp>;
  ingest_provider_asset_id?: InputMaybe<String_Comparison_Exp>;
  ingest_provider_caption_status?: InputMaybe<String_Comparison_Exp>;
  ingest_provider_error?: InputMaybe<String_Comparison_Exp>;
  ingest_provider_playback_id?: InputMaybe<String_Comparison_Exp>;
  ingest_provider_public_playback_id?: InputMaybe<String_Comparison_Exp>;
  ingest_provider_status?: InputMaybe<String_Comparison_Exp>;
  ingest_provider_text_track_id?: InputMaybe<String_Comparison_Exp>;
  ingest_submitted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  inherit_captions_from_gdrive_file_id?: InputMaybe<String_Comparison_Exp>;
  intro_video_for_field_of_study_id?: InputMaybe<Int_Comparison_Exp>;
  is_embedded_in_resource?: InputMaybe<Boolean_Comparison_Exp>;
  is_sign_language_video?: InputMaybe<Boolean_Comparison_Exp>;
  lesson_id?: InputMaybe<Int_Comparison_Exp>;
  lesson_ingest_uid?: InputMaybe<String_Comparison_Exp>;
  max_resolution?: InputMaybe<String_Comparison_Exp>;
  mp4_status?: InputMaybe<String_Comparison_Exp>;
  original_height?: InputMaybe<Int_Comparison_Exp>;
  original_width?: InputMaybe<Int_Comparison_Exp>;
  overall_status?: InputMaybe<String_Comparison_Exp>;
  permissions_status?: InputMaybe<String_Comparison_Exp>;
  ready_to_import?: InputMaybe<Boolean_Comparison_Exp>;
  restricted_drive_status?: InputMaybe<String_Comparison_Exp>;
  transcript?: InputMaybe<String_Comparison_Exp>;
  transcript_url?: InputMaybe<String_Comparison_Exp>;
  unsigned_bucket_url?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  url_to_ingest?: InputMaybe<String_Comparison_Exp>;
  video_duration?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "ingest.video_ingest" */
export enum Ingest_Video_Ingest_Constraint {
  /** unique or primary key constraint */
  VideoIngestGdriveFileIdKey = 'video_ingest_gdrive_file_id_key',
  /** unique or primary key constraint */
  VideoIngestGdriveFileKey = 'video_ingest_gdrive_file_key',
  /** unique or primary key constraint */
  VideoIngestIdKey = 'video_ingest_id_key',
  /** unique or primary key constraint */
  VideoIngestPkey = 'video_ingest_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Ingest_Video_Ingest_Delete_At_Path_Input = {
  captions?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Ingest_Video_Ingest_Delete_Elem_Input = {
  captions?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Ingest_Video_Ingest_Delete_Key_Input = {
  captions?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "ingest.video_ingest" */
export type Ingest_Video_Ingest_Inc_Input = {
  intro_video_for_field_of_study_id?: InputMaybe<Scalars['Int']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  original_height?: InputMaybe<Scalars['Int']>;
  original_width?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "ingest.video_ingest" */
export type Ingest_Video_Ingest_Insert_Input = {
  aspect_ratio?: InputMaybe<Scalars['String']>;
  bucket_location?: InputMaybe<Scalars['String']>;
  bucket_status?: InputMaybe<Scalars['String']>;
  caption_bucket_location?: InputMaybe<Scalars['String']>;
  caption_provider?: InputMaybe<Scalars['String']>;
  caption_provider_error?: InputMaybe<Scalars['String']>;
  caption_provider_error_code?: InputMaybe<Scalars['String']>;
  caption_provider_job_id?: InputMaybe<Scalars['String']>;
  caption_provider_job_result?: InputMaybe<Scalars['String']>;
  caption_provider_our_id?: InputMaybe<Scalars['String']>;
  caption_provider_status?: InputMaybe<Scalars['String']>;
  caption_provider_uri?: InputMaybe<Scalars['String']>;
  caption_submitted_url?: InputMaybe<Scalars['String']>;
  captions?: InputMaybe<Scalars['jsonb']>;
  captions_json_url?: InputMaybe<Scalars['String']>;
  captions_required?: InputMaybe<Scalars['Boolean']>;
  captions_vtt?: InputMaybe<Scalars['String']>;
  captions_vtt_url?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  embedded_in_resource_id?: InputMaybe<Scalars['String']>;
  embedded_in_resource_type?: InputMaybe<Resource_Types_Enum>;
  file_checksum?: InputMaybe<Scalars['String']>;
  file_checksum_algorithm?: InputMaybe<Scalars['String']>;
  file_status?: InputMaybe<Scalars['String']>;
  gdrive_file?: InputMaybe<Scalars['String']>;
  gdrive_file_id?: InputMaybe<Scalars['String']>;
  gdrive_file_is_public?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['uuid']>;
  ingest_completed_at?: InputMaybe<Scalars['timestamptz']>;
  ingest_provider?: InputMaybe<Scalars['String']>;
  ingest_provider_asset_id?: InputMaybe<Scalars['String']>;
  ingest_provider_caption_status?: InputMaybe<Scalars['String']>;
  ingest_provider_error?: InputMaybe<Scalars['String']>;
  ingest_provider_playback_id?: InputMaybe<Scalars['String']>;
  ingest_provider_public_playback_id?: InputMaybe<Scalars['String']>;
  ingest_provider_status?: InputMaybe<Scalars['String']>;
  ingest_provider_text_track_id?: InputMaybe<Scalars['String']>;
  ingest_submitted_at?: InputMaybe<Scalars['timestamptz']>;
  inherit_captions_from_gdrive_file_id?: InputMaybe<Scalars['String']>;
  intro_video_for_field_of_study_id?: InputMaybe<Scalars['Int']>;
  is_embedded_in_resource?: InputMaybe<Scalars['Boolean']>;
  is_sign_language_video?: InputMaybe<Scalars['Boolean']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  lesson_ingest_uid?: InputMaybe<Scalars['String']>;
  max_resolution?: InputMaybe<Scalars['String']>;
  mp4_status?: InputMaybe<Scalars['String']>;
  original_height?: InputMaybe<Scalars['Int']>;
  original_width?: InputMaybe<Scalars['Int']>;
  overall_status?: InputMaybe<Scalars['String']>;
  permissions_status?: InputMaybe<Scalars['String']>;
  ready_to_import?: InputMaybe<Scalars['Boolean']>;
  restricted_drive_status?: InputMaybe<Scalars['String']>;
  transcript?: InputMaybe<Scalars['String']>;
  transcript_url?: InputMaybe<Scalars['String']>;
  unsigned_bucket_url?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  url_to_ingest?: InputMaybe<Scalars['String']>;
  video_duration?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Ingest_Video_Ingest_Max_Fields = {
  __typename?: 'ingest_video_ingest_max_fields';
  aspect_ratio?: Maybe<Scalars['String']>;
  bucket_location?: Maybe<Scalars['String']>;
  bucket_status?: Maybe<Scalars['String']>;
  caption_bucket_location?: Maybe<Scalars['String']>;
  caption_provider?: Maybe<Scalars['String']>;
  caption_provider_error?: Maybe<Scalars['String']>;
  caption_provider_error_code?: Maybe<Scalars['String']>;
  caption_provider_job_id?: Maybe<Scalars['String']>;
  caption_provider_job_result?: Maybe<Scalars['String']>;
  caption_provider_our_id?: Maybe<Scalars['String']>;
  caption_provider_status?: Maybe<Scalars['String']>;
  caption_provider_uri?: Maybe<Scalars['String']>;
  caption_submitted_url?: Maybe<Scalars['String']>;
  captions_json_url?: Maybe<Scalars['String']>;
  captions_vtt?: Maybe<Scalars['String']>;
  captions_vtt_url?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  embedded_in_resource_id?: Maybe<Scalars['String']>;
  file_checksum?: Maybe<Scalars['String']>;
  file_checksum_algorithm?: Maybe<Scalars['String']>;
  file_status?: Maybe<Scalars['String']>;
  gdrive_file?: Maybe<Scalars['String']>;
  gdrive_file_id?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  ingest_completed_at?: Maybe<Scalars['timestamptz']>;
  ingest_provider?: Maybe<Scalars['String']>;
  ingest_provider_asset_id?: Maybe<Scalars['String']>;
  ingest_provider_caption_status?: Maybe<Scalars['String']>;
  ingest_provider_error?: Maybe<Scalars['String']>;
  ingest_provider_playback_id?: Maybe<Scalars['String']>;
  ingest_provider_public_playback_id?: Maybe<Scalars['String']>;
  ingest_provider_status?: Maybe<Scalars['String']>;
  ingest_provider_text_track_id?: Maybe<Scalars['String']>;
  ingest_submitted_at?: Maybe<Scalars['timestamptz']>;
  inherit_captions_from_gdrive_file_id?: Maybe<Scalars['String']>;
  intro_video_for_field_of_study_id?: Maybe<Scalars['Int']>;
  lesson_id?: Maybe<Scalars['Int']>;
  lesson_ingest_uid?: Maybe<Scalars['String']>;
  max_resolution?: Maybe<Scalars['String']>;
  mp4_status?: Maybe<Scalars['String']>;
  original_height?: Maybe<Scalars['Int']>;
  original_width?: Maybe<Scalars['Int']>;
  overall_status?: Maybe<Scalars['String']>;
  permissions_status?: Maybe<Scalars['String']>;
  restricted_drive_status?: Maybe<Scalars['String']>;
  transcript?: Maybe<Scalars['String']>;
  transcript_url?: Maybe<Scalars['String']>;
  unsigned_bucket_url?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  url_to_ingest?: Maybe<Scalars['String']>;
  video_duration?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "ingest.video_ingest" */
export type Ingest_Video_Ingest_Max_Order_By = {
  aspect_ratio?: InputMaybe<Order_By>;
  bucket_location?: InputMaybe<Order_By>;
  bucket_status?: InputMaybe<Order_By>;
  caption_bucket_location?: InputMaybe<Order_By>;
  caption_provider?: InputMaybe<Order_By>;
  caption_provider_error?: InputMaybe<Order_By>;
  caption_provider_error_code?: InputMaybe<Order_By>;
  caption_provider_job_id?: InputMaybe<Order_By>;
  caption_provider_job_result?: InputMaybe<Order_By>;
  caption_provider_our_id?: InputMaybe<Order_By>;
  caption_provider_status?: InputMaybe<Order_By>;
  caption_provider_uri?: InputMaybe<Order_By>;
  caption_submitted_url?: InputMaybe<Order_By>;
  captions_json_url?: InputMaybe<Order_By>;
  captions_vtt?: InputMaybe<Order_By>;
  captions_vtt_url?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  embedded_in_resource_id?: InputMaybe<Order_By>;
  file_checksum?: InputMaybe<Order_By>;
  file_checksum_algorithm?: InputMaybe<Order_By>;
  file_status?: InputMaybe<Order_By>;
  gdrive_file?: InputMaybe<Order_By>;
  gdrive_file_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_completed_at?: InputMaybe<Order_By>;
  ingest_provider?: InputMaybe<Order_By>;
  ingest_provider_asset_id?: InputMaybe<Order_By>;
  ingest_provider_caption_status?: InputMaybe<Order_By>;
  ingest_provider_error?: InputMaybe<Order_By>;
  ingest_provider_playback_id?: InputMaybe<Order_By>;
  ingest_provider_public_playback_id?: InputMaybe<Order_By>;
  ingest_provider_status?: InputMaybe<Order_By>;
  ingest_provider_text_track_id?: InputMaybe<Order_By>;
  ingest_submitted_at?: InputMaybe<Order_By>;
  inherit_captions_from_gdrive_file_id?: InputMaybe<Order_By>;
  intro_video_for_field_of_study_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_ingest_uid?: InputMaybe<Order_By>;
  max_resolution?: InputMaybe<Order_By>;
  mp4_status?: InputMaybe<Order_By>;
  original_height?: InputMaybe<Order_By>;
  original_width?: InputMaybe<Order_By>;
  overall_status?: InputMaybe<Order_By>;
  permissions_status?: InputMaybe<Order_By>;
  restricted_drive_status?: InputMaybe<Order_By>;
  transcript?: InputMaybe<Order_By>;
  transcript_url?: InputMaybe<Order_By>;
  unsigned_bucket_url?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  url_to_ingest?: InputMaybe<Order_By>;
  video_duration?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Ingest_Video_Ingest_Min_Fields = {
  __typename?: 'ingest_video_ingest_min_fields';
  aspect_ratio?: Maybe<Scalars['String']>;
  bucket_location?: Maybe<Scalars['String']>;
  bucket_status?: Maybe<Scalars['String']>;
  caption_bucket_location?: Maybe<Scalars['String']>;
  caption_provider?: Maybe<Scalars['String']>;
  caption_provider_error?: Maybe<Scalars['String']>;
  caption_provider_error_code?: Maybe<Scalars['String']>;
  caption_provider_job_id?: Maybe<Scalars['String']>;
  caption_provider_job_result?: Maybe<Scalars['String']>;
  caption_provider_our_id?: Maybe<Scalars['String']>;
  caption_provider_status?: Maybe<Scalars['String']>;
  caption_provider_uri?: Maybe<Scalars['String']>;
  caption_submitted_url?: Maybe<Scalars['String']>;
  captions_json_url?: Maybe<Scalars['String']>;
  captions_vtt?: Maybe<Scalars['String']>;
  captions_vtt_url?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  embedded_in_resource_id?: Maybe<Scalars['String']>;
  file_checksum?: Maybe<Scalars['String']>;
  file_checksum_algorithm?: Maybe<Scalars['String']>;
  file_status?: Maybe<Scalars['String']>;
  gdrive_file?: Maybe<Scalars['String']>;
  gdrive_file_id?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  ingest_completed_at?: Maybe<Scalars['timestamptz']>;
  ingest_provider?: Maybe<Scalars['String']>;
  ingest_provider_asset_id?: Maybe<Scalars['String']>;
  ingest_provider_caption_status?: Maybe<Scalars['String']>;
  ingest_provider_error?: Maybe<Scalars['String']>;
  ingest_provider_playback_id?: Maybe<Scalars['String']>;
  ingest_provider_public_playback_id?: Maybe<Scalars['String']>;
  ingest_provider_status?: Maybe<Scalars['String']>;
  ingest_provider_text_track_id?: Maybe<Scalars['String']>;
  ingest_submitted_at?: Maybe<Scalars['timestamptz']>;
  inherit_captions_from_gdrive_file_id?: Maybe<Scalars['String']>;
  intro_video_for_field_of_study_id?: Maybe<Scalars['Int']>;
  lesson_id?: Maybe<Scalars['Int']>;
  lesson_ingest_uid?: Maybe<Scalars['String']>;
  max_resolution?: Maybe<Scalars['String']>;
  mp4_status?: Maybe<Scalars['String']>;
  original_height?: Maybe<Scalars['Int']>;
  original_width?: Maybe<Scalars['Int']>;
  overall_status?: Maybe<Scalars['String']>;
  permissions_status?: Maybe<Scalars['String']>;
  restricted_drive_status?: Maybe<Scalars['String']>;
  transcript?: Maybe<Scalars['String']>;
  transcript_url?: Maybe<Scalars['String']>;
  unsigned_bucket_url?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  url_to_ingest?: Maybe<Scalars['String']>;
  video_duration?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "ingest.video_ingest" */
export type Ingest_Video_Ingest_Min_Order_By = {
  aspect_ratio?: InputMaybe<Order_By>;
  bucket_location?: InputMaybe<Order_By>;
  bucket_status?: InputMaybe<Order_By>;
  caption_bucket_location?: InputMaybe<Order_By>;
  caption_provider?: InputMaybe<Order_By>;
  caption_provider_error?: InputMaybe<Order_By>;
  caption_provider_error_code?: InputMaybe<Order_By>;
  caption_provider_job_id?: InputMaybe<Order_By>;
  caption_provider_job_result?: InputMaybe<Order_By>;
  caption_provider_our_id?: InputMaybe<Order_By>;
  caption_provider_status?: InputMaybe<Order_By>;
  caption_provider_uri?: InputMaybe<Order_By>;
  caption_submitted_url?: InputMaybe<Order_By>;
  captions_json_url?: InputMaybe<Order_By>;
  captions_vtt?: InputMaybe<Order_By>;
  captions_vtt_url?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  embedded_in_resource_id?: InputMaybe<Order_By>;
  file_checksum?: InputMaybe<Order_By>;
  file_checksum_algorithm?: InputMaybe<Order_By>;
  file_status?: InputMaybe<Order_By>;
  gdrive_file?: InputMaybe<Order_By>;
  gdrive_file_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_completed_at?: InputMaybe<Order_By>;
  ingest_provider?: InputMaybe<Order_By>;
  ingest_provider_asset_id?: InputMaybe<Order_By>;
  ingest_provider_caption_status?: InputMaybe<Order_By>;
  ingest_provider_error?: InputMaybe<Order_By>;
  ingest_provider_playback_id?: InputMaybe<Order_By>;
  ingest_provider_public_playback_id?: InputMaybe<Order_By>;
  ingest_provider_status?: InputMaybe<Order_By>;
  ingest_provider_text_track_id?: InputMaybe<Order_By>;
  ingest_submitted_at?: InputMaybe<Order_By>;
  inherit_captions_from_gdrive_file_id?: InputMaybe<Order_By>;
  intro_video_for_field_of_study_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_ingest_uid?: InputMaybe<Order_By>;
  max_resolution?: InputMaybe<Order_By>;
  mp4_status?: InputMaybe<Order_By>;
  original_height?: InputMaybe<Order_By>;
  original_width?: InputMaybe<Order_By>;
  overall_status?: InputMaybe<Order_By>;
  permissions_status?: InputMaybe<Order_By>;
  restricted_drive_status?: InputMaybe<Order_By>;
  transcript?: InputMaybe<Order_By>;
  transcript_url?: InputMaybe<Order_By>;
  unsigned_bucket_url?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  url_to_ingest?: InputMaybe<Order_By>;
  video_duration?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ingest.video_ingest" */
export type Ingest_Video_Ingest_Mutation_Response = {
  __typename?: 'ingest_video_ingest_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Ingest_Video_Ingest>;
};

/** input type for inserting object relation for remote table "ingest.video_ingest" */
export type Ingest_Video_Ingest_Obj_Rel_Insert_Input = {
  data: Ingest_Video_Ingest_Insert_Input;
  on_conflict?: InputMaybe<Ingest_Video_Ingest_On_Conflict>;
};

/** on conflict condition type for table "ingest.video_ingest" */
export type Ingest_Video_Ingest_On_Conflict = {
  constraint: Ingest_Video_Ingest_Constraint;
  update_columns: Array<Ingest_Video_Ingest_Update_Column>;
  where?: InputMaybe<Ingest_Video_Ingest_Bool_Exp>;
};

/** ordering options when selecting data from "ingest.video_ingest" */
export type Ingest_Video_Ingest_Order_By = {
  aspect_ratio?: InputMaybe<Order_By>;
  bucket_location?: InputMaybe<Order_By>;
  bucket_status?: InputMaybe<Order_By>;
  caption_bucket_location?: InputMaybe<Order_By>;
  caption_provider?: InputMaybe<Order_By>;
  caption_provider_error?: InputMaybe<Order_By>;
  caption_provider_error_code?: InputMaybe<Order_By>;
  caption_provider_job_id?: InputMaybe<Order_By>;
  caption_provider_job_result?: InputMaybe<Order_By>;
  caption_provider_our_id?: InputMaybe<Order_By>;
  caption_provider_status?: InputMaybe<Order_By>;
  caption_provider_uri?: InputMaybe<Order_By>;
  caption_submitted_url?: InputMaybe<Order_By>;
  captions?: InputMaybe<Order_By>;
  captions_json_url?: InputMaybe<Order_By>;
  captions_required?: InputMaybe<Order_By>;
  captions_vtt?: InputMaybe<Order_By>;
  captions_vtt_url?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  embedded_in_resource_id?: InputMaybe<Order_By>;
  embedded_in_resource_type?: InputMaybe<Order_By>;
  file_checksum?: InputMaybe<Order_By>;
  file_checksum_algorithm?: InputMaybe<Order_By>;
  file_status?: InputMaybe<Order_By>;
  gdrive_file?: InputMaybe<Order_By>;
  gdrive_file_id?: InputMaybe<Order_By>;
  gdrive_file_is_public?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_completed_at?: InputMaybe<Order_By>;
  ingest_provider?: InputMaybe<Order_By>;
  ingest_provider_asset_id?: InputMaybe<Order_By>;
  ingest_provider_caption_status?: InputMaybe<Order_By>;
  ingest_provider_error?: InputMaybe<Order_By>;
  ingest_provider_playback_id?: InputMaybe<Order_By>;
  ingest_provider_public_playback_id?: InputMaybe<Order_By>;
  ingest_provider_status?: InputMaybe<Order_By>;
  ingest_provider_text_track_id?: InputMaybe<Order_By>;
  ingest_submitted_at?: InputMaybe<Order_By>;
  inherit_captions_from_gdrive_file_id?: InputMaybe<Order_By>;
  intro_video_for_field_of_study_id?: InputMaybe<Order_By>;
  is_embedded_in_resource?: InputMaybe<Order_By>;
  is_sign_language_video?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_ingest_uid?: InputMaybe<Order_By>;
  max_resolution?: InputMaybe<Order_By>;
  mp4_status?: InputMaybe<Order_By>;
  original_height?: InputMaybe<Order_By>;
  original_width?: InputMaybe<Order_By>;
  overall_status?: InputMaybe<Order_By>;
  permissions_status?: InputMaybe<Order_By>;
  ready_to_import?: InputMaybe<Order_By>;
  restricted_drive_status?: InputMaybe<Order_By>;
  transcript?: InputMaybe<Order_By>;
  transcript_url?: InputMaybe<Order_By>;
  unsigned_bucket_url?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  url_to_ingest?: InputMaybe<Order_By>;
  video_duration?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "ingest.video_ingest" */
export type Ingest_Video_Ingest_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Ingest_Video_Ingest_Prepend_Input = {
  captions?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "ingest.video_ingest" */
export enum Ingest_Video_Ingest_Select_Column {
  /** column name */
  AspectRatio = 'aspect_ratio',
  /** column name */
  BucketLocation = 'bucket_location',
  /** column name */
  BucketStatus = 'bucket_status',
  /** column name */
  CaptionBucketLocation = 'caption_bucket_location',
  /** column name */
  CaptionProvider = 'caption_provider',
  /** column name */
  CaptionProviderError = 'caption_provider_error',
  /** column name */
  CaptionProviderErrorCode = 'caption_provider_error_code',
  /** column name */
  CaptionProviderJobId = 'caption_provider_job_id',
  /** column name */
  CaptionProviderJobResult = 'caption_provider_job_result',
  /** column name */
  CaptionProviderOurId = 'caption_provider_our_id',
  /** column name */
  CaptionProviderStatus = 'caption_provider_status',
  /** column name */
  CaptionProviderUri = 'caption_provider_uri',
  /** column name */
  CaptionSubmittedUrl = 'caption_submitted_url',
  /** column name */
  Captions = 'captions',
  /** column name */
  CaptionsJsonUrl = 'captions_json_url',
  /** column name */
  CaptionsRequired = 'captions_required',
  /** column name */
  CaptionsVtt = 'captions_vtt',
  /** column name */
  CaptionsVttUrl = 'captions_vtt_url',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EmbeddedInResourceId = 'embedded_in_resource_id',
  /** column name */
  EmbeddedInResourceType = 'embedded_in_resource_type',
  /** column name */
  FileChecksum = 'file_checksum',
  /** column name */
  FileChecksumAlgorithm = 'file_checksum_algorithm',
  /** column name */
  FileStatus = 'file_status',
  /** column name */
  GdriveFile = 'gdrive_file',
  /** column name */
  GdriveFileId = 'gdrive_file_id',
  /** column name */
  GdriveFileIsPublic = 'gdrive_file_is_public',
  /** column name */
  Id = 'id',
  /** column name */
  IngestCompletedAt = 'ingest_completed_at',
  /** column name */
  IngestProvider = 'ingest_provider',
  /** column name */
  IngestProviderAssetId = 'ingest_provider_asset_id',
  /** column name */
  IngestProviderCaptionStatus = 'ingest_provider_caption_status',
  /** column name */
  IngestProviderError = 'ingest_provider_error',
  /** column name */
  IngestProviderPlaybackId = 'ingest_provider_playback_id',
  /** column name */
  IngestProviderPublicPlaybackId = 'ingest_provider_public_playback_id',
  /** column name */
  IngestProviderStatus = 'ingest_provider_status',
  /** column name */
  IngestProviderTextTrackId = 'ingest_provider_text_track_id',
  /** column name */
  IngestSubmittedAt = 'ingest_submitted_at',
  /** column name */
  InheritCaptionsFromGdriveFileId = 'inherit_captions_from_gdrive_file_id',
  /** column name */
  IntroVideoForFieldOfStudyId = 'intro_video_for_field_of_study_id',
  /** column name */
  IsEmbeddedInResource = 'is_embedded_in_resource',
  /** column name */
  IsSignLanguageVideo = 'is_sign_language_video',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LessonIngestUid = 'lesson_ingest_uid',
  /** column name */
  MaxResolution = 'max_resolution',
  /** column name */
  Mp4Status = 'mp4_status',
  /** column name */
  OriginalHeight = 'original_height',
  /** column name */
  OriginalWidth = 'original_width',
  /** column name */
  OverallStatus = 'overall_status',
  /** column name */
  PermissionsStatus = 'permissions_status',
  /** column name */
  ReadyToImport = 'ready_to_import',
  /** column name */
  RestrictedDriveStatus = 'restricted_drive_status',
  /** column name */
  Transcript = 'transcript',
  /** column name */
  TranscriptUrl = 'transcript_url',
  /** column name */
  UnsignedBucketUrl = 'unsigned_bucket_url',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UrlToIngest = 'url_to_ingest',
  /** column name */
  VideoDuration = 'video_duration'
}

/** input type for updating data in table "ingest.video_ingest" */
export type Ingest_Video_Ingest_Set_Input = {
  aspect_ratio?: InputMaybe<Scalars['String']>;
  bucket_location?: InputMaybe<Scalars['String']>;
  bucket_status?: InputMaybe<Scalars['String']>;
  caption_bucket_location?: InputMaybe<Scalars['String']>;
  caption_provider?: InputMaybe<Scalars['String']>;
  caption_provider_error?: InputMaybe<Scalars['String']>;
  caption_provider_error_code?: InputMaybe<Scalars['String']>;
  caption_provider_job_id?: InputMaybe<Scalars['String']>;
  caption_provider_job_result?: InputMaybe<Scalars['String']>;
  caption_provider_our_id?: InputMaybe<Scalars['String']>;
  caption_provider_status?: InputMaybe<Scalars['String']>;
  caption_provider_uri?: InputMaybe<Scalars['String']>;
  caption_submitted_url?: InputMaybe<Scalars['String']>;
  captions?: InputMaybe<Scalars['jsonb']>;
  captions_json_url?: InputMaybe<Scalars['String']>;
  captions_required?: InputMaybe<Scalars['Boolean']>;
  captions_vtt?: InputMaybe<Scalars['String']>;
  captions_vtt_url?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  embedded_in_resource_id?: InputMaybe<Scalars['String']>;
  embedded_in_resource_type?: InputMaybe<Resource_Types_Enum>;
  file_checksum?: InputMaybe<Scalars['String']>;
  file_checksum_algorithm?: InputMaybe<Scalars['String']>;
  file_status?: InputMaybe<Scalars['String']>;
  gdrive_file?: InputMaybe<Scalars['String']>;
  gdrive_file_id?: InputMaybe<Scalars['String']>;
  gdrive_file_is_public?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['uuid']>;
  ingest_completed_at?: InputMaybe<Scalars['timestamptz']>;
  ingest_provider?: InputMaybe<Scalars['String']>;
  ingest_provider_asset_id?: InputMaybe<Scalars['String']>;
  ingest_provider_caption_status?: InputMaybe<Scalars['String']>;
  ingest_provider_error?: InputMaybe<Scalars['String']>;
  ingest_provider_playback_id?: InputMaybe<Scalars['String']>;
  ingest_provider_public_playback_id?: InputMaybe<Scalars['String']>;
  ingest_provider_status?: InputMaybe<Scalars['String']>;
  ingest_provider_text_track_id?: InputMaybe<Scalars['String']>;
  ingest_submitted_at?: InputMaybe<Scalars['timestamptz']>;
  inherit_captions_from_gdrive_file_id?: InputMaybe<Scalars['String']>;
  intro_video_for_field_of_study_id?: InputMaybe<Scalars['Int']>;
  is_embedded_in_resource?: InputMaybe<Scalars['Boolean']>;
  is_sign_language_video?: InputMaybe<Scalars['Boolean']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  lesson_ingest_uid?: InputMaybe<Scalars['String']>;
  max_resolution?: InputMaybe<Scalars['String']>;
  mp4_status?: InputMaybe<Scalars['String']>;
  original_height?: InputMaybe<Scalars['Int']>;
  original_width?: InputMaybe<Scalars['Int']>;
  overall_status?: InputMaybe<Scalars['String']>;
  permissions_status?: InputMaybe<Scalars['String']>;
  ready_to_import?: InputMaybe<Scalars['Boolean']>;
  restricted_drive_status?: InputMaybe<Scalars['String']>;
  transcript?: InputMaybe<Scalars['String']>;
  transcript_url?: InputMaybe<Scalars['String']>;
  unsigned_bucket_url?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  url_to_ingest?: InputMaybe<Scalars['String']>;
  video_duration?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Ingest_Video_Ingest_Stddev_Fields = {
  __typename?: 'ingest_video_ingest_stddev_fields';
  intro_video_for_field_of_study_id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  original_height?: Maybe<Scalars['Float']>;
  original_width?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "ingest.video_ingest" */
export type Ingest_Video_Ingest_Stddev_Order_By = {
  intro_video_for_field_of_study_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  original_height?: InputMaybe<Order_By>;
  original_width?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Ingest_Video_Ingest_Stddev_Pop_Fields = {
  __typename?: 'ingest_video_ingest_stddev_pop_fields';
  intro_video_for_field_of_study_id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  original_height?: Maybe<Scalars['Float']>;
  original_width?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "ingest.video_ingest" */
export type Ingest_Video_Ingest_Stddev_Pop_Order_By = {
  intro_video_for_field_of_study_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  original_height?: InputMaybe<Order_By>;
  original_width?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Ingest_Video_Ingest_Stddev_Samp_Fields = {
  __typename?: 'ingest_video_ingest_stddev_samp_fields';
  intro_video_for_field_of_study_id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  original_height?: Maybe<Scalars['Float']>;
  original_width?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "ingest.video_ingest" */
export type Ingest_Video_Ingest_Stddev_Samp_Order_By = {
  intro_video_for_field_of_study_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  original_height?: InputMaybe<Order_By>;
  original_width?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Ingest_Video_Ingest_Sum_Fields = {
  __typename?: 'ingest_video_ingest_sum_fields';
  intro_video_for_field_of_study_id?: Maybe<Scalars['Int']>;
  lesson_id?: Maybe<Scalars['Int']>;
  original_height?: Maybe<Scalars['Int']>;
  original_width?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "ingest.video_ingest" */
export type Ingest_Video_Ingest_Sum_Order_By = {
  intro_video_for_field_of_study_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  original_height?: InputMaybe<Order_By>;
  original_width?: InputMaybe<Order_By>;
};

/** update columns of table "ingest.video_ingest" */
export enum Ingest_Video_Ingest_Update_Column {
  /** column name */
  AspectRatio = 'aspect_ratio',
  /** column name */
  BucketLocation = 'bucket_location',
  /** column name */
  BucketStatus = 'bucket_status',
  /** column name */
  CaptionBucketLocation = 'caption_bucket_location',
  /** column name */
  CaptionProvider = 'caption_provider',
  /** column name */
  CaptionProviderError = 'caption_provider_error',
  /** column name */
  CaptionProviderErrorCode = 'caption_provider_error_code',
  /** column name */
  CaptionProviderJobId = 'caption_provider_job_id',
  /** column name */
  CaptionProviderJobResult = 'caption_provider_job_result',
  /** column name */
  CaptionProviderOurId = 'caption_provider_our_id',
  /** column name */
  CaptionProviderStatus = 'caption_provider_status',
  /** column name */
  CaptionProviderUri = 'caption_provider_uri',
  /** column name */
  CaptionSubmittedUrl = 'caption_submitted_url',
  /** column name */
  Captions = 'captions',
  /** column name */
  CaptionsJsonUrl = 'captions_json_url',
  /** column name */
  CaptionsRequired = 'captions_required',
  /** column name */
  CaptionsVtt = 'captions_vtt',
  /** column name */
  CaptionsVttUrl = 'captions_vtt_url',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EmbeddedInResourceId = 'embedded_in_resource_id',
  /** column name */
  EmbeddedInResourceType = 'embedded_in_resource_type',
  /** column name */
  FileChecksum = 'file_checksum',
  /** column name */
  FileChecksumAlgorithm = 'file_checksum_algorithm',
  /** column name */
  FileStatus = 'file_status',
  /** column name */
  GdriveFile = 'gdrive_file',
  /** column name */
  GdriveFileId = 'gdrive_file_id',
  /** column name */
  GdriveFileIsPublic = 'gdrive_file_is_public',
  /** column name */
  Id = 'id',
  /** column name */
  IngestCompletedAt = 'ingest_completed_at',
  /** column name */
  IngestProvider = 'ingest_provider',
  /** column name */
  IngestProviderAssetId = 'ingest_provider_asset_id',
  /** column name */
  IngestProviderCaptionStatus = 'ingest_provider_caption_status',
  /** column name */
  IngestProviderError = 'ingest_provider_error',
  /** column name */
  IngestProviderPlaybackId = 'ingest_provider_playback_id',
  /** column name */
  IngestProviderPublicPlaybackId = 'ingest_provider_public_playback_id',
  /** column name */
  IngestProviderStatus = 'ingest_provider_status',
  /** column name */
  IngestProviderTextTrackId = 'ingest_provider_text_track_id',
  /** column name */
  IngestSubmittedAt = 'ingest_submitted_at',
  /** column name */
  InheritCaptionsFromGdriveFileId = 'inherit_captions_from_gdrive_file_id',
  /** column name */
  IntroVideoForFieldOfStudyId = 'intro_video_for_field_of_study_id',
  /** column name */
  IsEmbeddedInResource = 'is_embedded_in_resource',
  /** column name */
  IsSignLanguageVideo = 'is_sign_language_video',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LessonIngestUid = 'lesson_ingest_uid',
  /** column name */
  MaxResolution = 'max_resolution',
  /** column name */
  Mp4Status = 'mp4_status',
  /** column name */
  OriginalHeight = 'original_height',
  /** column name */
  OriginalWidth = 'original_width',
  /** column name */
  OverallStatus = 'overall_status',
  /** column name */
  PermissionsStatus = 'permissions_status',
  /** column name */
  ReadyToImport = 'ready_to_import',
  /** column name */
  RestrictedDriveStatus = 'restricted_drive_status',
  /** column name */
  Transcript = 'transcript',
  /** column name */
  TranscriptUrl = 'transcript_url',
  /** column name */
  UnsignedBucketUrl = 'unsigned_bucket_url',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UrlToIngest = 'url_to_ingest',
  /** column name */
  VideoDuration = 'video_duration'
}

/** aggregate var_pop on columns */
export type Ingest_Video_Ingest_Var_Pop_Fields = {
  __typename?: 'ingest_video_ingest_var_pop_fields';
  intro_video_for_field_of_study_id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  original_height?: Maybe<Scalars['Float']>;
  original_width?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "ingest.video_ingest" */
export type Ingest_Video_Ingest_Var_Pop_Order_By = {
  intro_video_for_field_of_study_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  original_height?: InputMaybe<Order_By>;
  original_width?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Ingest_Video_Ingest_Var_Samp_Fields = {
  __typename?: 'ingest_video_ingest_var_samp_fields';
  intro_video_for_field_of_study_id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  original_height?: Maybe<Scalars['Float']>;
  original_width?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "ingest.video_ingest" */
export type Ingest_Video_Ingest_Var_Samp_Order_By = {
  intro_video_for_field_of_study_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  original_height?: InputMaybe<Order_By>;
  original_width?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Ingest_Video_Ingest_Variance_Fields = {
  __typename?: 'ingest_video_ingest_variance_fields';
  intro_video_for_field_of_study_id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  original_height?: Maybe<Scalars['Float']>;
  original_width?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "ingest.video_ingest" */
export type Ingest_Video_Ingest_Variance_Order_By = {
  intro_video_for_field_of_study_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  original_height?: InputMaybe<Order_By>;
  original_width?: InputMaybe<Order_By>;
};

/** expression to compare columns of type json. All fields are combined with logical 'AND'. */
export type Json_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['json']>;
  _gt?: InputMaybe<Scalars['json']>;
  _gte?: InputMaybe<Scalars['json']>;
  _in?: InputMaybe<Array<Scalars['json']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['json']>;
  _lte?: InputMaybe<Scalars['json']>;
  _neq?: InputMaybe<Scalars['json']>;
  _nin?: InputMaybe<Array<Scalars['json']>>;
};

/** expression to compare columns of type jsonb. All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
  /** is the column contained in the given json value */
  _contained_in?: InputMaybe<Scalars['jsonb']>;
  /** does the column contain the given json value at the top level */
  _contains?: InputMaybe<Scalars['jsonb']>;
  _eq?: InputMaybe<Scalars['jsonb']>;
  _gt?: InputMaybe<Scalars['jsonb']>;
  _gte?: InputMaybe<Scalars['jsonb']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: InputMaybe<Scalars['String']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: InputMaybe<Array<Scalars['String']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: InputMaybe<Array<Scalars['String']>>;
  _in?: InputMaybe<Array<Scalars['jsonb']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['jsonb']>;
  _lte?: InputMaybe<Scalars['jsonb']>;
  _neq?: InputMaybe<Scalars['jsonb']>;
  _nin?: InputMaybe<Array<Scalars['jsonb']>>;
};

/** columns and relationships of "key_stages" */
export type Key_Stages = {
  __typename?: 'key_stages';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  ingest_id: Scalars['String'];
  /** An object relationship */
  phase?: Maybe<Phases>;
  phase_id?: Maybe<Scalars['Int']>;
  short_code: Scalars['String'];
  slug?: Maybe<Scalars['String']>;
  /** An array relationship */
  teacher_key_stages: Array<Teacher_Key_Stages>;
  /** An aggregated array relationship */
  teacher_key_stages_aggregate: Teacher_Key_Stages_Aggregate;
  title: Scalars['String'];
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  years: Array<Years>;
  /** An aggregated array relationship */
  years_aggregate: Years_Aggregate;
};


/** columns and relationships of "key_stages" */
export type Key_StagesTeacher_Key_StagesArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Key_Stages_Order_By>>;
  where?: InputMaybe<Teacher_Key_Stages_Bool_Exp>;
};


/** columns and relationships of "key_stages" */
export type Key_StagesTeacher_Key_Stages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Key_Stages_Order_By>>;
  where?: InputMaybe<Teacher_Key_Stages_Bool_Exp>;
};


/** columns and relationships of "key_stages" */
export type Key_StagesYearsArgs = {
  distinct_on?: InputMaybe<Array<Years_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Years_Order_By>>;
  where?: InputMaybe<Years_Bool_Exp>;
};


/** columns and relationships of "key_stages" */
export type Key_StagesYears_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Years_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Years_Order_By>>;
  where?: InputMaybe<Years_Bool_Exp>;
};

/** aggregated selection of "key_stages" */
export type Key_Stages_Aggregate = {
  __typename?: 'key_stages_aggregate';
  aggregate?: Maybe<Key_Stages_Aggregate_Fields>;
  nodes: Array<Key_Stages>;
};

/** aggregate fields of "key_stages" */
export type Key_Stages_Aggregate_Fields = {
  __typename?: 'key_stages_aggregate_fields';
  avg?: Maybe<Key_Stages_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Key_Stages_Max_Fields>;
  min?: Maybe<Key_Stages_Min_Fields>;
  stddev?: Maybe<Key_Stages_Stddev_Fields>;
  stddev_pop?: Maybe<Key_Stages_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Key_Stages_Stddev_Samp_Fields>;
  sum?: Maybe<Key_Stages_Sum_Fields>;
  var_pop?: Maybe<Key_Stages_Var_Pop_Fields>;
  var_samp?: Maybe<Key_Stages_Var_Samp_Fields>;
  variance?: Maybe<Key_Stages_Variance_Fields>;
};


/** aggregate fields of "key_stages" */
export type Key_Stages_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Key_Stages_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "key_stages" */
export type Key_Stages_Aggregate_Order_By = {
  avg?: InputMaybe<Key_Stages_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Key_Stages_Max_Order_By>;
  min?: InputMaybe<Key_Stages_Min_Order_By>;
  stddev?: InputMaybe<Key_Stages_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Key_Stages_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Key_Stages_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Key_Stages_Sum_Order_By>;
  var_pop?: InputMaybe<Key_Stages_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Key_Stages_Var_Samp_Order_By>;
  variance?: InputMaybe<Key_Stages_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "key_stages" */
export type Key_Stages_Arr_Rel_Insert_Input = {
  data: Array<Key_Stages_Insert_Input>;
  on_conflict?: InputMaybe<Key_Stages_On_Conflict>;
};

/** aggregate avg on columns */
export type Key_Stages_Avg_Fields = {
  __typename?: 'key_stages_avg_fields';
  id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "key_stages" */
export type Key_Stages_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "key_stages". All fields are combined with a logical 'AND'. */
export type Key_Stages_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Key_Stages_Bool_Exp>>>;
  _not?: InputMaybe<Key_Stages_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Key_Stages_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  phase?: InputMaybe<Phases_Bool_Exp>;
  phase_id?: InputMaybe<Int_Comparison_Exp>;
  short_code?: InputMaybe<String_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  teacher_key_stages?: InputMaybe<Teacher_Key_Stages_Bool_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  years?: InputMaybe<Years_Bool_Exp>;
};

/** unique or primary key constraints on table "key_stages" */
export enum Key_Stages_Constraint {
  /** unique or primary key constraint */
  KeyStageIngestIdKey = 'key_stage_ingest_id_key',
  /** unique or primary key constraint */
  KeyStagePkey = 'key_stage_pkey',
  /** unique or primary key constraint */
  KeyStageSlugKey = 'key_stage_slug_key'
}

/** input type for incrementing integer column in table "key_stages" */
export type Key_Stages_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  phase_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "key_stages" */
export type Key_Stages_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  phase?: InputMaybe<Phases_Obj_Rel_Insert_Input>;
  phase_id?: InputMaybe<Scalars['Int']>;
  short_code?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  teacher_key_stages?: InputMaybe<Teacher_Key_Stages_Arr_Rel_Insert_Input>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  years?: InputMaybe<Years_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Key_Stages_Max_Fields = {
  __typename?: 'key_stages_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  phase_id?: Maybe<Scalars['Int']>;
  short_code?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "key_stages" */
export type Key_Stages_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  short_code?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Key_Stages_Min_Fields = {
  __typename?: 'key_stages_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  phase_id?: Maybe<Scalars['Int']>;
  short_code?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "key_stages" */
export type Key_Stages_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  short_code?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "key_stages" */
export type Key_Stages_Mutation_Response = {
  __typename?: 'key_stages_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Key_Stages>;
};

/** input type for inserting object relation for remote table "key_stages" */
export type Key_Stages_Obj_Rel_Insert_Input = {
  data: Key_Stages_Insert_Input;
  on_conflict?: InputMaybe<Key_Stages_On_Conflict>;
};

/** on conflict condition type for table "key_stages" */
export type Key_Stages_On_Conflict = {
  constraint: Key_Stages_Constraint;
  update_columns: Array<Key_Stages_Update_Column>;
  where?: InputMaybe<Key_Stages_Bool_Exp>;
};

/** ordering options when selecting data from "key_stages" */
export type Key_Stages_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  phase?: InputMaybe<Phases_Order_By>;
  phase_id?: InputMaybe<Order_By>;
  short_code?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  teacher_key_stages_aggregate?: InputMaybe<Teacher_Key_Stages_Aggregate_Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  years_aggregate?: InputMaybe<Years_Aggregate_Order_By>;
};

/** primary key columns input for table: "key_stages" */
export type Key_Stages_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "key_stages" */
export enum Key_Stages_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  PhaseId = 'phase_id',
  /** column name */
  ShortCode = 'short_code',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "key_stages" */
export type Key_Stages_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  phase_id?: InputMaybe<Scalars['Int']>;
  short_code?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Key_Stages_Stddev_Fields = {
  __typename?: 'key_stages_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "key_stages" */
export type Key_Stages_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Key_Stages_Stddev_Pop_Fields = {
  __typename?: 'key_stages_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "key_stages" */
export type Key_Stages_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Key_Stages_Stddev_Samp_Fields = {
  __typename?: 'key_stages_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "key_stages" */
export type Key_Stages_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Key_Stages_Sum_Fields = {
  __typename?: 'key_stages_sum_fields';
  id?: Maybe<Scalars['Int']>;
  phase_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "key_stages" */
export type Key_Stages_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
};

/** update columns of table "key_stages" */
export enum Key_Stages_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  PhaseId = 'phase_id',
  /** column name */
  ShortCode = 'short_code',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Key_Stages_Var_Pop_Fields = {
  __typename?: 'key_stages_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "key_stages" */
export type Key_Stages_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Key_Stages_Var_Samp_Fields = {
  __typename?: 'key_stages_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "key_stages" */
export type Key_Stages_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Key_Stages_Variance_Fields = {
  __typename?: 'key_stages_variance_fields';
  id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "key_stages" */
export type Key_Stages_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "lesson_quizzes" */
export type Lesson_Quizzes = {
  __typename?: 'lesson_quizzes';
  /** An object relationship */
  lesson?: Maybe<Lessons>;
  lesson_id: Scalars['Int'];
  /** An object relationship */
  quiz?: Maybe<Quizzes>;
  quiz_id: Scalars['Int'];
  /** Should be "intro" or "exit" */
  type: Scalars['String'];
  /** An object relationship */
  unit?: Maybe<Units>;
  unit_id: Scalars['Int'];
};

/** aggregated selection of "lesson_quizzes" */
export type Lesson_Quizzes_Aggregate = {
  __typename?: 'lesson_quizzes_aggregate';
  aggregate?: Maybe<Lesson_Quizzes_Aggregate_Fields>;
  nodes: Array<Lesson_Quizzes>;
};

/** aggregate fields of "lesson_quizzes" */
export type Lesson_Quizzes_Aggregate_Fields = {
  __typename?: 'lesson_quizzes_aggregate_fields';
  avg?: Maybe<Lesson_Quizzes_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lesson_Quizzes_Max_Fields>;
  min?: Maybe<Lesson_Quizzes_Min_Fields>;
  stddev?: Maybe<Lesson_Quizzes_Stddev_Fields>;
  stddev_pop?: Maybe<Lesson_Quizzes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Lesson_Quizzes_Stddev_Samp_Fields>;
  sum?: Maybe<Lesson_Quizzes_Sum_Fields>;
  var_pop?: Maybe<Lesson_Quizzes_Var_Pop_Fields>;
  var_samp?: Maybe<Lesson_Quizzes_Var_Samp_Fields>;
  variance?: Maybe<Lesson_Quizzes_Variance_Fields>;
};


/** aggregate fields of "lesson_quizzes" */
export type Lesson_Quizzes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Lesson_Quizzes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lesson_quizzes" */
export type Lesson_Quizzes_Aggregate_Order_By = {
  avg?: InputMaybe<Lesson_Quizzes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Lesson_Quizzes_Max_Order_By>;
  min?: InputMaybe<Lesson_Quizzes_Min_Order_By>;
  stddev?: InputMaybe<Lesson_Quizzes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Lesson_Quizzes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Lesson_Quizzes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Lesson_Quizzes_Sum_Order_By>;
  var_pop?: InputMaybe<Lesson_Quizzes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Lesson_Quizzes_Var_Samp_Order_By>;
  variance?: InputMaybe<Lesson_Quizzes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "lesson_quizzes" */
export type Lesson_Quizzes_Arr_Rel_Insert_Input = {
  data: Array<Lesson_Quizzes_Insert_Input>;
  on_conflict?: InputMaybe<Lesson_Quizzes_On_Conflict>;
};

/** aggregate avg on columns */
export type Lesson_Quizzes_Avg_Fields = {
  __typename?: 'lesson_quizzes_avg_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "lesson_quizzes" */
export type Lesson_Quizzes_Avg_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "lesson_quizzes". All fields are combined with a logical 'AND'. */
export type Lesson_Quizzes_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Lesson_Quizzes_Bool_Exp>>>;
  _not?: InputMaybe<Lesson_Quizzes_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Lesson_Quizzes_Bool_Exp>>>;
  lesson?: InputMaybe<Lessons_Bool_Exp>;
  lesson_id?: InputMaybe<Int_Comparison_Exp>;
  quiz?: InputMaybe<Quizzes_Bool_Exp>;
  quiz_id?: InputMaybe<Int_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  unit?: InputMaybe<Units_Bool_Exp>;
  unit_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "lesson_quizzes" */
export enum Lesson_Quizzes_Constraint {
  /** unique or primary key constraint */
  LessonQuizzesPkey = 'lesson_quizzes_pkey'
}

/** input type for incrementing integer column in table "lesson_quizzes" */
export type Lesson_Quizzes_Inc_Input = {
  lesson_id?: InputMaybe<Scalars['Int']>;
  quiz_id?: InputMaybe<Scalars['Int']>;
  unit_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "lesson_quizzes" */
export type Lesson_Quizzes_Insert_Input = {
  lesson?: InputMaybe<Lessons_Obj_Rel_Insert_Input>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  quiz?: InputMaybe<Quizzes_Obj_Rel_Insert_Input>;
  quiz_id?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Units_Obj_Rel_Insert_Input>;
  unit_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Lesson_Quizzes_Max_Fields = {
  __typename?: 'lesson_quizzes_max_fields';
  lesson_id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  unit_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "lesson_quizzes" */
export type Lesson_Quizzes_Max_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Lesson_Quizzes_Min_Fields = {
  __typename?: 'lesson_quizzes_min_fields';
  lesson_id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  unit_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "lesson_quizzes" */
export type Lesson_Quizzes_Min_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "lesson_quizzes" */
export type Lesson_Quizzes_Mutation_Response = {
  __typename?: 'lesson_quizzes_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lesson_Quizzes>;
};

/** input type for inserting object relation for remote table "lesson_quizzes" */
export type Lesson_Quizzes_Obj_Rel_Insert_Input = {
  data: Lesson_Quizzes_Insert_Input;
  on_conflict?: InputMaybe<Lesson_Quizzes_On_Conflict>;
};

/** on conflict condition type for table "lesson_quizzes" */
export type Lesson_Quizzes_On_Conflict = {
  constraint: Lesson_Quizzes_Constraint;
  update_columns: Array<Lesson_Quizzes_Update_Column>;
  where?: InputMaybe<Lesson_Quizzes_Bool_Exp>;
};

/** ordering options when selecting data from "lesson_quizzes" */
export type Lesson_Quizzes_Order_By = {
  lesson?: InputMaybe<Lessons_Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  quiz?: InputMaybe<Quizzes_Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  unit?: InputMaybe<Units_Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "lesson_quizzes" */
export type Lesson_Quizzes_Pk_Columns_Input = {
  lesson_id: Scalars['Int'];
  quiz_id: Scalars['Int'];
  /** Should be "intro" or "exit" */
  type: Scalars['String'];
  unit_id: Scalars['Int'];
};

/** select columns of table "lesson_quizzes" */
export enum Lesson_Quizzes_Select_Column {
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  QuizId = 'quiz_id',
  /** column name */
  Type = 'type',
  /** column name */
  UnitId = 'unit_id'
}

/** input type for updating data in table "lesson_quizzes" */
export type Lesson_Quizzes_Set_Input = {
  lesson_id?: InputMaybe<Scalars['Int']>;
  quiz_id?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<Scalars['String']>;
  unit_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Lesson_Quizzes_Stddev_Fields = {
  __typename?: 'lesson_quizzes_stddev_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "lesson_quizzes" */
export type Lesson_Quizzes_Stddev_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Lesson_Quizzes_Stddev_Pop_Fields = {
  __typename?: 'lesson_quizzes_stddev_pop_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "lesson_quizzes" */
export type Lesson_Quizzes_Stddev_Pop_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Lesson_Quizzes_Stddev_Samp_Fields = {
  __typename?: 'lesson_quizzes_stddev_samp_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "lesson_quizzes" */
export type Lesson_Quizzes_Stddev_Samp_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Lesson_Quizzes_Sum_Fields = {
  __typename?: 'lesson_quizzes_sum_fields';
  lesson_id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "lesson_quizzes" */
export type Lesson_Quizzes_Sum_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** update columns of table "lesson_quizzes" */
export enum Lesson_Quizzes_Update_Column {
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  QuizId = 'quiz_id',
  /** column name */
  Type = 'type',
  /** column name */
  UnitId = 'unit_id'
}

/** aggregate var_pop on columns */
export type Lesson_Quizzes_Var_Pop_Fields = {
  __typename?: 'lesson_quizzes_var_pop_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "lesson_quizzes" */
export type Lesson_Quizzes_Var_Pop_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Lesson_Quizzes_Var_Samp_Fields = {
  __typename?: 'lesson_quizzes_var_samp_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "lesson_quizzes" */
export type Lesson_Quizzes_Var_Samp_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Lesson_Quizzes_Variance_Fields = {
  __typename?: 'lesson_quizzes_variance_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "lesson_quizzes" */
export type Lesson_Quizzes_Variance_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "lessons" */
export type Lessons = {
  __typename?: 'lessons';
  additional_subject_info?: Maybe<Scalars['String']>;
  /** Manually controlled by sequelize afterUpdate hook on asset-ingest model. Used for invalidating stale download zips */
  assets_updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  cohort: Cohorts;
  cohort_id: Scalars['Int'];
  content_guidance?: Maybe<Scalars['String']>;
  core_content1?: Maybe<Scalars['String']>;
  core_content2?: Maybe<Scalars['String']>;
  core_content3?: Maybe<Scalars['String']>;
  core_content4?: Maybe<Scalars['String']>;
  core_content5?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  disciplinary_knowledge?: Maybe<Scalars['String']>;
  equipment?: Maybe<Scalars['String']>;
  exit_quiz_url?: Maybe<Scalars['String']>;
  expired?: Maybe<Scalars['Boolean']>;
  guidance_details?: Maybe<Scalars['String']>;
  has_copyright_material: Scalars['Boolean'];
  id: Scalars['Int'];
  ingest_id: Scalars['String'];
  is_sensitive: Scalars['Boolean'];
  lesson_description?: Maybe<Scalars['String']>;
  lesson_vocabulary?: Maybe<Scalars['String']>;
  /** An array relationship */
  quizzes: Array<Lesson_Quizzes>;
  /** An aggregated array relationship */
  quizzes_aggregate: Lesson_Quizzes_Aggregate;
  /** An object relationship */
  signed_video?: Maybe<Videos>;
  signed_video_id?: Maybe<Scalars['uuid']>;
  slides_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  substantive_knowledge?: Maybe<Scalars['String']>;
  supervision_level?: Maybe<Scalars['String']>;
  /** An object relationship */
  teacher?: Maybe<Teachers>;
  teacher_id?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  /** An array relationship */
  unit_lessons: Array<Unit_Lessons>;
  /** An aggregated array relationship */
  unit_lessons_aggregate: Unit_Lessons_Aggregate;
  unsigned_video_id?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  video?: Maybe<Videos>;
  worksheet_download_url?: Maybe<Scalars['String']>;
  worksheet_has_embedded_media: Scalars['Boolean'];
  worksheet_is_landscape: Scalars['Boolean'];
  worksheet_url?: Maybe<Scalars['String']>;
};


/** columns and relationships of "lessons" */
export type LessonsQuizzesArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Quizzes_Order_By>>;
  where?: InputMaybe<Lesson_Quizzes_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsQuizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Quizzes_Order_By>>;
  where?: InputMaybe<Lesson_Quizzes_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsUnit_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Unit_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Unit_Lessons_Order_By>>;
  where?: InputMaybe<Unit_Lessons_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsUnit_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Unit_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Unit_Lessons_Order_By>>;
  where?: InputMaybe<Unit_Lessons_Bool_Exp>;
};

/** aggregated selection of "lessons" */
export type Lessons_Aggregate = {
  __typename?: 'lessons_aggregate';
  aggregate?: Maybe<Lessons_Aggregate_Fields>;
  nodes: Array<Lessons>;
};

/** aggregate fields of "lessons" */
export type Lessons_Aggregate_Fields = {
  __typename?: 'lessons_aggregate_fields';
  avg?: Maybe<Lessons_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lessons_Max_Fields>;
  min?: Maybe<Lessons_Min_Fields>;
  stddev?: Maybe<Lessons_Stddev_Fields>;
  stddev_pop?: Maybe<Lessons_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Lessons_Stddev_Samp_Fields>;
  sum?: Maybe<Lessons_Sum_Fields>;
  var_pop?: Maybe<Lessons_Var_Pop_Fields>;
  var_samp?: Maybe<Lessons_Var_Samp_Fields>;
  variance?: Maybe<Lessons_Variance_Fields>;
};


/** aggregate fields of "lessons" */
export type Lessons_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Lessons_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lessons" */
export type Lessons_Aggregate_Order_By = {
  avg?: InputMaybe<Lessons_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Lessons_Max_Order_By>;
  min?: InputMaybe<Lessons_Min_Order_By>;
  stddev?: InputMaybe<Lessons_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Lessons_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Lessons_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Lessons_Sum_Order_By>;
  var_pop?: InputMaybe<Lessons_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Lessons_Var_Samp_Order_By>;
  variance?: InputMaybe<Lessons_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "lessons" */
export type Lessons_Arr_Rel_Insert_Input = {
  data: Array<Lessons_Insert_Input>;
  on_conflict?: InputMaybe<Lessons_On_Conflict>;
};

/** aggregate avg on columns */
export type Lessons_Avg_Fields = {
  __typename?: 'lessons_avg_fields';
  cohort_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "lessons" */
export type Lessons_Avg_Order_By = {
  cohort_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "lessons". All fields are combined with a logical 'AND'. */
export type Lessons_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Lessons_Bool_Exp>>>;
  _not?: InputMaybe<Lessons_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Lessons_Bool_Exp>>>;
  additional_subject_info?: InputMaybe<String_Comparison_Exp>;
  assets_updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  cohort?: InputMaybe<Cohorts_Bool_Exp>;
  cohort_id?: InputMaybe<Int_Comparison_Exp>;
  content_guidance?: InputMaybe<String_Comparison_Exp>;
  core_content1?: InputMaybe<String_Comparison_Exp>;
  core_content2?: InputMaybe<String_Comparison_Exp>;
  core_content3?: InputMaybe<String_Comparison_Exp>;
  core_content4?: InputMaybe<String_Comparison_Exp>;
  core_content5?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  disciplinary_knowledge?: InputMaybe<String_Comparison_Exp>;
  equipment?: InputMaybe<String_Comparison_Exp>;
  exit_quiz_url?: InputMaybe<String_Comparison_Exp>;
  expired?: InputMaybe<Boolean_Comparison_Exp>;
  guidance_details?: InputMaybe<String_Comparison_Exp>;
  has_copyright_material?: InputMaybe<Boolean_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  is_sensitive?: InputMaybe<Boolean_Comparison_Exp>;
  lesson_description?: InputMaybe<String_Comparison_Exp>;
  lesson_vocabulary?: InputMaybe<String_Comparison_Exp>;
  quizzes?: InputMaybe<Lesson_Quizzes_Bool_Exp>;
  signed_video?: InputMaybe<Videos_Bool_Exp>;
  signed_video_id?: InputMaybe<Uuid_Comparison_Exp>;
  slides_url?: InputMaybe<String_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  substantive_knowledge?: InputMaybe<String_Comparison_Exp>;
  supervision_level?: InputMaybe<String_Comparison_Exp>;
  teacher?: InputMaybe<Teachers_Bool_Exp>;
  teacher_id?: InputMaybe<Int_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  unit_lessons?: InputMaybe<Unit_Lessons_Bool_Exp>;
  unsigned_video_id?: InputMaybe<Uuid_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  video?: InputMaybe<Videos_Bool_Exp>;
  worksheet_download_url?: InputMaybe<String_Comparison_Exp>;
  worksheet_has_embedded_media?: InputMaybe<Boolean_Comparison_Exp>;
  worksheet_is_landscape?: InputMaybe<Boolean_Comparison_Exp>;
  worksheet_url?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "lessons" */
export enum Lessons_Constraint {
  /** unique or primary key constraint */
  LessonsIngestIdKey = 'lessons_ingest_id_key',
  /** unique or primary key constraint */
  LessonsPkey = 'lessons_pkey',
  /** unique or primary key constraint */
  LessonsSlugKey = 'lessons_slug_key'
}

/** columns and relationships of "lessons_expanded" */
export type Lessons_Expanded = {
  __typename?: 'lessons_expanded';
  intro_text?: Maybe<Scalars['String']>;
  is_specialist?: Maybe<Scalars['Boolean']>;
  key_stage?: Maybe<Scalars['String']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  lesson?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['Int']>;
  lesson_slug?: Maybe<Scalars['String']>;
  lesson_uuid?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  theme?: Maybe<Scalars['String']>;
  transcript?: Maybe<Scalars['String']>;
  unit?: Maybe<Scalars['String']>;
  unit_slug?: Maybe<Scalars['String']>;
  year?: Maybe<Scalars['String']>;
  year_slug?: Maybe<Scalars['String']>;
};

/** aggregated selection of "lessons_expanded" */
export type Lessons_Expanded_Aggregate = {
  __typename?: 'lessons_expanded_aggregate';
  aggregate?: Maybe<Lessons_Expanded_Aggregate_Fields>;
  nodes: Array<Lessons_Expanded>;
};

/** aggregate fields of "lessons_expanded" */
export type Lessons_Expanded_Aggregate_Fields = {
  __typename?: 'lessons_expanded_aggregate_fields';
  avg?: Maybe<Lessons_Expanded_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lessons_Expanded_Max_Fields>;
  min?: Maybe<Lessons_Expanded_Min_Fields>;
  stddev?: Maybe<Lessons_Expanded_Stddev_Fields>;
  stddev_pop?: Maybe<Lessons_Expanded_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Lessons_Expanded_Stddev_Samp_Fields>;
  sum?: Maybe<Lessons_Expanded_Sum_Fields>;
  var_pop?: Maybe<Lessons_Expanded_Var_Pop_Fields>;
  var_samp?: Maybe<Lessons_Expanded_Var_Samp_Fields>;
  variance?: Maybe<Lessons_Expanded_Variance_Fields>;
};


/** aggregate fields of "lessons_expanded" */
export type Lessons_Expanded_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Lessons_Expanded_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lessons_expanded" */
export type Lessons_Expanded_Aggregate_Order_By = {
  avg?: InputMaybe<Lessons_Expanded_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Lessons_Expanded_Max_Order_By>;
  min?: InputMaybe<Lessons_Expanded_Min_Order_By>;
  stddev?: InputMaybe<Lessons_Expanded_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Lessons_Expanded_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Lessons_Expanded_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Lessons_Expanded_Sum_Order_By>;
  var_pop?: InputMaybe<Lessons_Expanded_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Lessons_Expanded_Var_Samp_Order_By>;
  variance?: InputMaybe<Lessons_Expanded_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Lessons_Expanded_Avg_Fields = {
  __typename?: 'lessons_expanded_avg_fields';
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "lessons_expanded" */
export type Lessons_Expanded_Avg_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "lessons_expanded". All fields are combined with a logical 'AND'. */
export type Lessons_Expanded_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Lessons_Expanded_Bool_Exp>>>;
  _not?: InputMaybe<Lessons_Expanded_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Lessons_Expanded_Bool_Exp>>>;
  intro_text?: InputMaybe<String_Comparison_Exp>;
  is_specialist?: InputMaybe<Boolean_Comparison_Exp>;
  key_stage?: InputMaybe<String_Comparison_Exp>;
  key_stage_slug?: InputMaybe<String_Comparison_Exp>;
  lesson?: InputMaybe<String_Comparison_Exp>;
  lesson_id?: InputMaybe<Int_Comparison_Exp>;
  lesson_slug?: InputMaybe<String_Comparison_Exp>;
  lesson_uuid?: InputMaybe<String_Comparison_Exp>;
  subject?: InputMaybe<String_Comparison_Exp>;
  subject_slug?: InputMaybe<String_Comparison_Exp>;
  theme?: InputMaybe<String_Comparison_Exp>;
  transcript?: InputMaybe<String_Comparison_Exp>;
  unit?: InputMaybe<String_Comparison_Exp>;
  unit_slug?: InputMaybe<String_Comparison_Exp>;
  year?: InputMaybe<String_Comparison_Exp>;
  year_slug?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Lessons_Expanded_Max_Fields = {
  __typename?: 'lessons_expanded_max_fields';
  intro_text?: Maybe<Scalars['String']>;
  key_stage?: Maybe<Scalars['String']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  lesson?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['Int']>;
  lesson_slug?: Maybe<Scalars['String']>;
  lesson_uuid?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  theme?: Maybe<Scalars['String']>;
  transcript?: Maybe<Scalars['String']>;
  unit?: Maybe<Scalars['String']>;
  unit_slug?: Maybe<Scalars['String']>;
  year?: Maybe<Scalars['String']>;
  year_slug?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "lessons_expanded" */
export type Lessons_Expanded_Max_Order_By = {
  intro_text?: InputMaybe<Order_By>;
  key_stage?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  lesson?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_slug?: InputMaybe<Order_By>;
  lesson_uuid?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  theme?: InputMaybe<Order_By>;
  transcript?: InputMaybe<Order_By>;
  unit?: InputMaybe<Order_By>;
  unit_slug?: InputMaybe<Order_By>;
  year?: InputMaybe<Order_By>;
  year_slug?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Lessons_Expanded_Min_Fields = {
  __typename?: 'lessons_expanded_min_fields';
  intro_text?: Maybe<Scalars['String']>;
  key_stage?: Maybe<Scalars['String']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  lesson?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['Int']>;
  lesson_slug?: Maybe<Scalars['String']>;
  lesson_uuid?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  theme?: Maybe<Scalars['String']>;
  transcript?: Maybe<Scalars['String']>;
  unit?: Maybe<Scalars['String']>;
  unit_slug?: Maybe<Scalars['String']>;
  year?: Maybe<Scalars['String']>;
  year_slug?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "lessons_expanded" */
export type Lessons_Expanded_Min_Order_By = {
  intro_text?: InputMaybe<Order_By>;
  key_stage?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  lesson?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_slug?: InputMaybe<Order_By>;
  lesson_uuid?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  theme?: InputMaybe<Order_By>;
  transcript?: InputMaybe<Order_By>;
  unit?: InputMaybe<Order_By>;
  unit_slug?: InputMaybe<Order_By>;
  year?: InputMaybe<Order_By>;
  year_slug?: InputMaybe<Order_By>;
};

/** ordering options when selecting data from "lessons_expanded" */
export type Lessons_Expanded_Order_By = {
  intro_text?: InputMaybe<Order_By>;
  is_specialist?: InputMaybe<Order_By>;
  key_stage?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  lesson?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_slug?: InputMaybe<Order_By>;
  lesson_uuid?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  theme?: InputMaybe<Order_By>;
  transcript?: InputMaybe<Order_By>;
  unit?: InputMaybe<Order_By>;
  unit_slug?: InputMaybe<Order_By>;
  year?: InputMaybe<Order_By>;
  year_slug?: InputMaybe<Order_By>;
};

/** select columns of table "lessons_expanded" */
export enum Lessons_Expanded_Select_Column {
  /** column name */
  IntroText = 'intro_text',
  /** column name */
  IsSpecialist = 'is_specialist',
  /** column name */
  KeyStage = 'key_stage',
  /** column name */
  KeyStageSlug = 'key_stage_slug',
  /** column name */
  Lesson = 'lesson',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LessonSlug = 'lesson_slug',
  /** column name */
  LessonUuid = 'lesson_uuid',
  /** column name */
  Subject = 'subject',
  /** column name */
  SubjectSlug = 'subject_slug',
  /** column name */
  Theme = 'theme',
  /** column name */
  Transcript = 'transcript',
  /** column name */
  Unit = 'unit',
  /** column name */
  UnitSlug = 'unit_slug',
  /** column name */
  Year = 'year',
  /** column name */
  YearSlug = 'year_slug'
}

/** aggregate stddev on columns */
export type Lessons_Expanded_Stddev_Fields = {
  __typename?: 'lessons_expanded_stddev_fields';
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "lessons_expanded" */
export type Lessons_Expanded_Stddev_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Lessons_Expanded_Stddev_Pop_Fields = {
  __typename?: 'lessons_expanded_stddev_pop_fields';
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "lessons_expanded" */
export type Lessons_Expanded_Stddev_Pop_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Lessons_Expanded_Stddev_Samp_Fields = {
  __typename?: 'lessons_expanded_stddev_samp_fields';
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "lessons_expanded" */
export type Lessons_Expanded_Stddev_Samp_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Lessons_Expanded_Sum_Fields = {
  __typename?: 'lessons_expanded_sum_fields';
  lesson_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "lessons_expanded" */
export type Lessons_Expanded_Sum_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Lessons_Expanded_Var_Pop_Fields = {
  __typename?: 'lessons_expanded_var_pop_fields';
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "lessons_expanded" */
export type Lessons_Expanded_Var_Pop_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Lessons_Expanded_Var_Samp_Fields = {
  __typename?: 'lessons_expanded_var_samp_fields';
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "lessons_expanded" */
export type Lessons_Expanded_Var_Samp_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Lessons_Expanded_Variance_Fields = {
  __typename?: 'lessons_expanded_variance_fields';
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "lessons_expanded" */
export type Lessons_Expanded_Variance_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
};

/** input type for incrementing integer column in table "lessons" */
export type Lessons_Inc_Input = {
  cohort_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  teacher_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "lessons" */
export type Lessons_Insert_Input = {
  additional_subject_info?: InputMaybe<Scalars['String']>;
  assets_updated_at?: InputMaybe<Scalars['timestamptz']>;
  cohort?: InputMaybe<Cohorts_Obj_Rel_Insert_Input>;
  cohort_id?: InputMaybe<Scalars['Int']>;
  content_guidance?: InputMaybe<Scalars['String']>;
  core_content1?: InputMaybe<Scalars['String']>;
  core_content2?: InputMaybe<Scalars['String']>;
  core_content3?: InputMaybe<Scalars['String']>;
  core_content4?: InputMaybe<Scalars['String']>;
  core_content5?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  disciplinary_knowledge?: InputMaybe<Scalars['String']>;
  equipment?: InputMaybe<Scalars['String']>;
  exit_quiz_url?: InputMaybe<Scalars['String']>;
  expired?: InputMaybe<Scalars['Boolean']>;
  guidance_details?: InputMaybe<Scalars['String']>;
  has_copyright_material?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  is_sensitive?: InputMaybe<Scalars['Boolean']>;
  lesson_description?: InputMaybe<Scalars['String']>;
  lesson_vocabulary?: InputMaybe<Scalars['String']>;
  quizzes?: InputMaybe<Lesson_Quizzes_Arr_Rel_Insert_Input>;
  signed_video?: InputMaybe<Videos_Obj_Rel_Insert_Input>;
  signed_video_id?: InputMaybe<Scalars['uuid']>;
  slides_url?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  substantive_knowledge?: InputMaybe<Scalars['String']>;
  supervision_level?: InputMaybe<Scalars['String']>;
  teacher?: InputMaybe<Teachers_Obj_Rel_Insert_Input>;
  teacher_id?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Scalars['String']>;
  unit_lessons?: InputMaybe<Unit_Lessons_Arr_Rel_Insert_Input>;
  unsigned_video_id?: InputMaybe<Scalars['uuid']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  video?: InputMaybe<Videos_Obj_Rel_Insert_Input>;
  worksheet_download_url?: InputMaybe<Scalars['String']>;
  worksheet_has_embedded_media?: InputMaybe<Scalars['Boolean']>;
  worksheet_is_landscape?: InputMaybe<Scalars['Boolean']>;
  worksheet_url?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Lessons_Max_Fields = {
  __typename?: 'lessons_max_fields';
  additional_subject_info?: Maybe<Scalars['String']>;
  assets_updated_at?: Maybe<Scalars['timestamptz']>;
  cohort_id?: Maybe<Scalars['Int']>;
  content_guidance?: Maybe<Scalars['String']>;
  core_content1?: Maybe<Scalars['String']>;
  core_content2?: Maybe<Scalars['String']>;
  core_content3?: Maybe<Scalars['String']>;
  core_content4?: Maybe<Scalars['String']>;
  core_content5?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  disciplinary_knowledge?: Maybe<Scalars['String']>;
  equipment?: Maybe<Scalars['String']>;
  exit_quiz_url?: Maybe<Scalars['String']>;
  guidance_details?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  lesson_description?: Maybe<Scalars['String']>;
  lesson_vocabulary?: Maybe<Scalars['String']>;
  signed_video_id?: Maybe<Scalars['uuid']>;
  slides_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  substantive_knowledge?: Maybe<Scalars['String']>;
  supervision_level?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  unsigned_video_id?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  worksheet_download_url?: Maybe<Scalars['String']>;
  worksheet_url?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "lessons" */
export type Lessons_Max_Order_By = {
  additional_subject_info?: InputMaybe<Order_By>;
  assets_updated_at?: InputMaybe<Order_By>;
  cohort_id?: InputMaybe<Order_By>;
  content_guidance?: InputMaybe<Order_By>;
  core_content1?: InputMaybe<Order_By>;
  core_content2?: InputMaybe<Order_By>;
  core_content3?: InputMaybe<Order_By>;
  core_content4?: InputMaybe<Order_By>;
  core_content5?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  disciplinary_knowledge?: InputMaybe<Order_By>;
  equipment?: InputMaybe<Order_By>;
  exit_quiz_url?: InputMaybe<Order_By>;
  guidance_details?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  lesson_description?: InputMaybe<Order_By>;
  lesson_vocabulary?: InputMaybe<Order_By>;
  signed_video_id?: InputMaybe<Order_By>;
  slides_url?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  substantive_knowledge?: InputMaybe<Order_By>;
  supervision_level?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unsigned_video_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  worksheet_download_url?: InputMaybe<Order_By>;
  worksheet_url?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Lessons_Min_Fields = {
  __typename?: 'lessons_min_fields';
  additional_subject_info?: Maybe<Scalars['String']>;
  assets_updated_at?: Maybe<Scalars['timestamptz']>;
  cohort_id?: Maybe<Scalars['Int']>;
  content_guidance?: Maybe<Scalars['String']>;
  core_content1?: Maybe<Scalars['String']>;
  core_content2?: Maybe<Scalars['String']>;
  core_content3?: Maybe<Scalars['String']>;
  core_content4?: Maybe<Scalars['String']>;
  core_content5?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  disciplinary_knowledge?: Maybe<Scalars['String']>;
  equipment?: Maybe<Scalars['String']>;
  exit_quiz_url?: Maybe<Scalars['String']>;
  guidance_details?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  lesson_description?: Maybe<Scalars['String']>;
  lesson_vocabulary?: Maybe<Scalars['String']>;
  signed_video_id?: Maybe<Scalars['uuid']>;
  slides_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  substantive_knowledge?: Maybe<Scalars['String']>;
  supervision_level?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  unsigned_video_id?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  worksheet_download_url?: Maybe<Scalars['String']>;
  worksheet_url?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "lessons" */
export type Lessons_Min_Order_By = {
  additional_subject_info?: InputMaybe<Order_By>;
  assets_updated_at?: InputMaybe<Order_By>;
  cohort_id?: InputMaybe<Order_By>;
  content_guidance?: InputMaybe<Order_By>;
  core_content1?: InputMaybe<Order_By>;
  core_content2?: InputMaybe<Order_By>;
  core_content3?: InputMaybe<Order_By>;
  core_content4?: InputMaybe<Order_By>;
  core_content5?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  disciplinary_knowledge?: InputMaybe<Order_By>;
  equipment?: InputMaybe<Order_By>;
  exit_quiz_url?: InputMaybe<Order_By>;
  guidance_details?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  lesson_description?: InputMaybe<Order_By>;
  lesson_vocabulary?: InputMaybe<Order_By>;
  signed_video_id?: InputMaybe<Order_By>;
  slides_url?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  substantive_knowledge?: InputMaybe<Order_By>;
  supervision_level?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unsigned_video_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  worksheet_download_url?: InputMaybe<Order_By>;
  worksheet_url?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "lessons" */
export type Lessons_Mutation_Response = {
  __typename?: 'lessons_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lessons>;
};

/** input type for inserting object relation for remote table "lessons" */
export type Lessons_Obj_Rel_Insert_Input = {
  data: Lessons_Insert_Input;
  on_conflict?: InputMaybe<Lessons_On_Conflict>;
};

/** on conflict condition type for table "lessons" */
export type Lessons_On_Conflict = {
  constraint: Lessons_Constraint;
  update_columns: Array<Lessons_Update_Column>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};

/** ordering options when selecting data from "lessons" */
export type Lessons_Order_By = {
  additional_subject_info?: InputMaybe<Order_By>;
  assets_updated_at?: InputMaybe<Order_By>;
  cohort?: InputMaybe<Cohorts_Order_By>;
  cohort_id?: InputMaybe<Order_By>;
  content_guidance?: InputMaybe<Order_By>;
  core_content1?: InputMaybe<Order_By>;
  core_content2?: InputMaybe<Order_By>;
  core_content3?: InputMaybe<Order_By>;
  core_content4?: InputMaybe<Order_By>;
  core_content5?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  disciplinary_knowledge?: InputMaybe<Order_By>;
  equipment?: InputMaybe<Order_By>;
  exit_quiz_url?: InputMaybe<Order_By>;
  expired?: InputMaybe<Order_By>;
  guidance_details?: InputMaybe<Order_By>;
  has_copyright_material?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  is_sensitive?: InputMaybe<Order_By>;
  lesson_description?: InputMaybe<Order_By>;
  lesson_vocabulary?: InputMaybe<Order_By>;
  quizzes_aggregate?: InputMaybe<Lesson_Quizzes_Aggregate_Order_By>;
  signed_video?: InputMaybe<Videos_Order_By>;
  signed_video_id?: InputMaybe<Order_By>;
  slides_url?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  substantive_knowledge?: InputMaybe<Order_By>;
  supervision_level?: InputMaybe<Order_By>;
  teacher?: InputMaybe<Teachers_Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unit_lessons_aggregate?: InputMaybe<Unit_Lessons_Aggregate_Order_By>;
  unsigned_video_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  video?: InputMaybe<Videos_Order_By>;
  worksheet_download_url?: InputMaybe<Order_By>;
  worksheet_has_embedded_media?: InputMaybe<Order_By>;
  worksheet_is_landscape?: InputMaybe<Order_By>;
  worksheet_url?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "lessons" */
export type Lessons_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "lessons" */
export enum Lessons_Select_Column {
  /** column name */
  AdditionalSubjectInfo = 'additional_subject_info',
  /** column name */
  AssetsUpdatedAt = 'assets_updated_at',
  /** column name */
  CohortId = 'cohort_id',
  /** column name */
  ContentGuidance = 'content_guidance',
  /** column name */
  CoreContent1 = 'core_content1',
  /** column name */
  CoreContent2 = 'core_content2',
  /** column name */
  CoreContent3 = 'core_content3',
  /** column name */
  CoreContent4 = 'core_content4',
  /** column name */
  CoreContent5 = 'core_content5',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DisciplinaryKnowledge = 'disciplinary_knowledge',
  /** column name */
  Equipment = 'equipment',
  /** column name */
  ExitQuizUrl = 'exit_quiz_url',
  /** column name */
  Expired = 'expired',
  /** column name */
  GuidanceDetails = 'guidance_details',
  /** column name */
  HasCopyrightMaterial = 'has_copyright_material',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  IsSensitive = 'is_sensitive',
  /** column name */
  LessonDescription = 'lesson_description',
  /** column name */
  LessonVocabulary = 'lesson_vocabulary',
  /** column name */
  SignedVideoId = 'signed_video_id',
  /** column name */
  SlidesUrl = 'slides_url',
  /** column name */
  Slug = 'slug',
  /** column name */
  SubstantiveKnowledge = 'substantive_knowledge',
  /** column name */
  SupervisionLevel = 'supervision_level',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  Title = 'title',
  /** column name */
  UnsignedVideoId = 'unsigned_video_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  WorksheetDownloadUrl = 'worksheet_download_url',
  /** column name */
  WorksheetHasEmbeddedMedia = 'worksheet_has_embedded_media',
  /** column name */
  WorksheetIsLandscape = 'worksheet_is_landscape',
  /** column name */
  WorksheetUrl = 'worksheet_url'
}

/** input type for updating data in table "lessons" */
export type Lessons_Set_Input = {
  additional_subject_info?: InputMaybe<Scalars['String']>;
  assets_updated_at?: InputMaybe<Scalars['timestamptz']>;
  cohort_id?: InputMaybe<Scalars['Int']>;
  content_guidance?: InputMaybe<Scalars['String']>;
  core_content1?: InputMaybe<Scalars['String']>;
  core_content2?: InputMaybe<Scalars['String']>;
  core_content3?: InputMaybe<Scalars['String']>;
  core_content4?: InputMaybe<Scalars['String']>;
  core_content5?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  disciplinary_knowledge?: InputMaybe<Scalars['String']>;
  equipment?: InputMaybe<Scalars['String']>;
  exit_quiz_url?: InputMaybe<Scalars['String']>;
  expired?: InputMaybe<Scalars['Boolean']>;
  guidance_details?: InputMaybe<Scalars['String']>;
  has_copyright_material?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  is_sensitive?: InputMaybe<Scalars['Boolean']>;
  lesson_description?: InputMaybe<Scalars['String']>;
  lesson_vocabulary?: InputMaybe<Scalars['String']>;
  signed_video_id?: InputMaybe<Scalars['uuid']>;
  slides_url?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  substantive_knowledge?: InputMaybe<Scalars['String']>;
  supervision_level?: InputMaybe<Scalars['String']>;
  teacher_id?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Scalars['String']>;
  unsigned_video_id?: InputMaybe<Scalars['uuid']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  worksheet_download_url?: InputMaybe<Scalars['String']>;
  worksheet_has_embedded_media?: InputMaybe<Scalars['Boolean']>;
  worksheet_is_landscape?: InputMaybe<Scalars['Boolean']>;
  worksheet_url?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Lessons_Stddev_Fields = {
  __typename?: 'lessons_stddev_fields';
  cohort_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "lessons" */
export type Lessons_Stddev_Order_By = {
  cohort_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Lessons_Stddev_Pop_Fields = {
  __typename?: 'lessons_stddev_pop_fields';
  cohort_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "lessons" */
export type Lessons_Stddev_Pop_Order_By = {
  cohort_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Lessons_Stddev_Samp_Fields = {
  __typename?: 'lessons_stddev_samp_fields';
  cohort_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "lessons" */
export type Lessons_Stddev_Samp_Order_By = {
  cohort_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Lessons_Sum_Fields = {
  __typename?: 'lessons_sum_fields';
  cohort_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "lessons" */
export type Lessons_Sum_Order_By = {
  cohort_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** update columns of table "lessons" */
export enum Lessons_Update_Column {
  /** column name */
  AdditionalSubjectInfo = 'additional_subject_info',
  /** column name */
  AssetsUpdatedAt = 'assets_updated_at',
  /** column name */
  CohortId = 'cohort_id',
  /** column name */
  ContentGuidance = 'content_guidance',
  /** column name */
  CoreContent1 = 'core_content1',
  /** column name */
  CoreContent2 = 'core_content2',
  /** column name */
  CoreContent3 = 'core_content3',
  /** column name */
  CoreContent4 = 'core_content4',
  /** column name */
  CoreContent5 = 'core_content5',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DisciplinaryKnowledge = 'disciplinary_knowledge',
  /** column name */
  Equipment = 'equipment',
  /** column name */
  ExitQuizUrl = 'exit_quiz_url',
  /** column name */
  Expired = 'expired',
  /** column name */
  GuidanceDetails = 'guidance_details',
  /** column name */
  HasCopyrightMaterial = 'has_copyright_material',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  IsSensitive = 'is_sensitive',
  /** column name */
  LessonDescription = 'lesson_description',
  /** column name */
  LessonVocabulary = 'lesson_vocabulary',
  /** column name */
  SignedVideoId = 'signed_video_id',
  /** column name */
  SlidesUrl = 'slides_url',
  /** column name */
  Slug = 'slug',
  /** column name */
  SubstantiveKnowledge = 'substantive_knowledge',
  /** column name */
  SupervisionLevel = 'supervision_level',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  Title = 'title',
  /** column name */
  UnsignedVideoId = 'unsigned_video_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  WorksheetDownloadUrl = 'worksheet_download_url',
  /** column name */
  WorksheetHasEmbeddedMedia = 'worksheet_has_embedded_media',
  /** column name */
  WorksheetIsLandscape = 'worksheet_is_landscape',
  /** column name */
  WorksheetUrl = 'worksheet_url'
}

/** aggregate var_pop on columns */
export type Lessons_Var_Pop_Fields = {
  __typename?: 'lessons_var_pop_fields';
  cohort_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "lessons" */
export type Lessons_Var_Pop_Order_By = {
  cohort_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Lessons_Var_Samp_Fields = {
  __typename?: 'lessons_var_samp_fields';
  cohort_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "lessons" */
export type Lessons_Var_Samp_Order_By = {
  cohort_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Lessons_Variance_Fields = {
  __typename?: 'lessons_variance_fields';
  cohort_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "lessons" */
export type Lessons_Variance_Order_By = {
  cohort_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "management.asset_reviews" */
export type Management_Asset_Reviews = {
  __typename?: 'management_asset_reviews';
  /** An object relationship */
  asset: Management_Assets;
  asset_id: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  /** An object relationship */
  review: Management_Reviews;
  review_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "management.asset_reviews" */
export type Management_Asset_Reviews_Aggregate = {
  __typename?: 'management_asset_reviews_aggregate';
  aggregate?: Maybe<Management_Asset_Reviews_Aggregate_Fields>;
  nodes: Array<Management_Asset_Reviews>;
};

/** aggregate fields of "management.asset_reviews" */
export type Management_Asset_Reviews_Aggregate_Fields = {
  __typename?: 'management_asset_reviews_aggregate_fields';
  avg?: Maybe<Management_Asset_Reviews_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Management_Asset_Reviews_Max_Fields>;
  min?: Maybe<Management_Asset_Reviews_Min_Fields>;
  stddev?: Maybe<Management_Asset_Reviews_Stddev_Fields>;
  stddev_pop?: Maybe<Management_Asset_Reviews_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Management_Asset_Reviews_Stddev_Samp_Fields>;
  sum?: Maybe<Management_Asset_Reviews_Sum_Fields>;
  var_pop?: Maybe<Management_Asset_Reviews_Var_Pop_Fields>;
  var_samp?: Maybe<Management_Asset_Reviews_Var_Samp_Fields>;
  variance?: Maybe<Management_Asset_Reviews_Variance_Fields>;
};


/** aggregate fields of "management.asset_reviews" */
export type Management_Asset_Reviews_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Management_Asset_Reviews_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "management.asset_reviews" */
export type Management_Asset_Reviews_Aggregate_Order_By = {
  avg?: InputMaybe<Management_Asset_Reviews_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Management_Asset_Reviews_Max_Order_By>;
  min?: InputMaybe<Management_Asset_Reviews_Min_Order_By>;
  stddev?: InputMaybe<Management_Asset_Reviews_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Management_Asset_Reviews_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Management_Asset_Reviews_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Management_Asset_Reviews_Sum_Order_By>;
  var_pop?: InputMaybe<Management_Asset_Reviews_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Management_Asset_Reviews_Var_Samp_Order_By>;
  variance?: InputMaybe<Management_Asset_Reviews_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "management.asset_reviews" */
export type Management_Asset_Reviews_Arr_Rel_Insert_Input = {
  data: Array<Management_Asset_Reviews_Insert_Input>;
  on_conflict?: InputMaybe<Management_Asset_Reviews_On_Conflict>;
};

/** aggregate avg on columns */
export type Management_Asset_Reviews_Avg_Fields = {
  __typename?: 'management_asset_reviews_avg_fields';
  asset_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "management.asset_reviews" */
export type Management_Asset_Reviews_Avg_Order_By = {
  asset_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "management.asset_reviews". All fields are combined with a logical 'AND'. */
export type Management_Asset_Reviews_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Management_Asset_Reviews_Bool_Exp>>>;
  _not?: InputMaybe<Management_Asset_Reviews_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Management_Asset_Reviews_Bool_Exp>>>;
  asset?: InputMaybe<Management_Assets_Bool_Exp>;
  asset_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  review?: InputMaybe<Management_Reviews_Bool_Exp>;
  review_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "management.asset_reviews" */
export enum Management_Asset_Reviews_Constraint {
  /** unique or primary key constraint */
  AssetReviewsPkey = 'asset_reviews_pkey'
}

/** input type for incrementing integer column in table "management.asset_reviews" */
export type Management_Asset_Reviews_Inc_Input = {
  asset_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  review_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "management.asset_reviews" */
export type Management_Asset_Reviews_Insert_Input = {
  asset?: InputMaybe<Management_Assets_Obj_Rel_Insert_Input>;
  asset_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  review?: InputMaybe<Management_Reviews_Obj_Rel_Insert_Input>;
  review_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Management_Asset_Reviews_Max_Fields = {
  __typename?: 'management_asset_reviews_max_fields';
  asset_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  review_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "management.asset_reviews" */
export type Management_Asset_Reviews_Max_Order_By = {
  asset_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Management_Asset_Reviews_Min_Fields = {
  __typename?: 'management_asset_reviews_min_fields';
  asset_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  review_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "management.asset_reviews" */
export type Management_Asset_Reviews_Min_Order_By = {
  asset_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "management.asset_reviews" */
export type Management_Asset_Reviews_Mutation_Response = {
  __typename?: 'management_asset_reviews_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Management_Asset_Reviews>;
};

/** input type for inserting object relation for remote table "management.asset_reviews" */
export type Management_Asset_Reviews_Obj_Rel_Insert_Input = {
  data: Management_Asset_Reviews_Insert_Input;
  on_conflict?: InputMaybe<Management_Asset_Reviews_On_Conflict>;
};

/** on conflict condition type for table "management.asset_reviews" */
export type Management_Asset_Reviews_On_Conflict = {
  constraint: Management_Asset_Reviews_Constraint;
  update_columns: Array<Management_Asset_Reviews_Update_Column>;
  where?: InputMaybe<Management_Asset_Reviews_Bool_Exp>;
};

/** ordering options when selecting data from "management.asset_reviews" */
export type Management_Asset_Reviews_Order_By = {
  asset?: InputMaybe<Management_Assets_Order_By>;
  asset_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  review?: InputMaybe<Management_Reviews_Order_By>;
  review_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "management.asset_reviews" */
export type Management_Asset_Reviews_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "management.asset_reviews" */
export enum Management_Asset_Reviews_Select_Column {
  /** column name */
  AssetId = 'asset_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  ReviewId = 'review_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "management.asset_reviews" */
export type Management_Asset_Reviews_Set_Input = {
  asset_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  review_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Management_Asset_Reviews_Stddev_Fields = {
  __typename?: 'management_asset_reviews_stddev_fields';
  asset_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "management.asset_reviews" */
export type Management_Asset_Reviews_Stddev_Order_By = {
  asset_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Management_Asset_Reviews_Stddev_Pop_Fields = {
  __typename?: 'management_asset_reviews_stddev_pop_fields';
  asset_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "management.asset_reviews" */
export type Management_Asset_Reviews_Stddev_Pop_Order_By = {
  asset_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Management_Asset_Reviews_Stddev_Samp_Fields = {
  __typename?: 'management_asset_reviews_stddev_samp_fields';
  asset_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "management.asset_reviews" */
export type Management_Asset_Reviews_Stddev_Samp_Order_By = {
  asset_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Management_Asset_Reviews_Sum_Fields = {
  __typename?: 'management_asset_reviews_sum_fields';
  asset_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  review_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "management.asset_reviews" */
export type Management_Asset_Reviews_Sum_Order_By = {
  asset_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** update columns of table "management.asset_reviews" */
export enum Management_Asset_Reviews_Update_Column {
  /** column name */
  AssetId = 'asset_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  ReviewId = 'review_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Management_Asset_Reviews_Var_Pop_Fields = {
  __typename?: 'management_asset_reviews_var_pop_fields';
  asset_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "management.asset_reviews" */
export type Management_Asset_Reviews_Var_Pop_Order_By = {
  asset_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Management_Asset_Reviews_Var_Samp_Fields = {
  __typename?: 'management_asset_reviews_var_samp_fields';
  asset_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "management.asset_reviews" */
export type Management_Asset_Reviews_Var_Samp_Order_By = {
  asset_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Management_Asset_Reviews_Variance_Fields = {
  __typename?: 'management_asset_reviews_variance_fields';
  asset_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "management.asset_reviews" */
export type Management_Asset_Reviews_Variance_Order_By = {
  asset_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "management.asset_types" */
export type Management_Asset_Types = {
  __typename?: 'management_asset_types';
  type: Scalars['String'];
};

/** aggregated selection of "management.asset_types" */
export type Management_Asset_Types_Aggregate = {
  __typename?: 'management_asset_types_aggregate';
  aggregate?: Maybe<Management_Asset_Types_Aggregate_Fields>;
  nodes: Array<Management_Asset_Types>;
};

/** aggregate fields of "management.asset_types" */
export type Management_Asset_Types_Aggregate_Fields = {
  __typename?: 'management_asset_types_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Management_Asset_Types_Max_Fields>;
  min?: Maybe<Management_Asset_Types_Min_Fields>;
};


/** aggregate fields of "management.asset_types" */
export type Management_Asset_Types_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Management_Asset_Types_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "management.asset_types" */
export type Management_Asset_Types_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Management_Asset_Types_Max_Order_By>;
  min?: InputMaybe<Management_Asset_Types_Min_Order_By>;
};

/** input type for inserting array relation for remote table "management.asset_types" */
export type Management_Asset_Types_Arr_Rel_Insert_Input = {
  data: Array<Management_Asset_Types_Insert_Input>;
  on_conflict?: InputMaybe<Management_Asset_Types_On_Conflict>;
};

/** Boolean expression to filter rows from the table "management.asset_types". All fields are combined with a logical 'AND'. */
export type Management_Asset_Types_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Management_Asset_Types_Bool_Exp>>>;
  _not?: InputMaybe<Management_Asset_Types_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Management_Asset_Types_Bool_Exp>>>;
  type?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "management.asset_types" */
export enum Management_Asset_Types_Constraint {
  /** unique or primary key constraint */
  AssetTypesPkey = 'asset_types_pkey'
}

export enum Management_Asset_Types_Enum {
  DownloadableWorksheet = 'Downloadable_Worksheet',
  Slides = 'Slides',
  Worksheet = 'Worksheet'
}

/** expression to compare columns of type management_asset_types_enum. All fields are combined with logical 'AND'. */
export type Management_Asset_Types_Enum_Comparison_Exp = {
  _eq?: InputMaybe<Management_Asset_Types_Enum>;
  _in?: InputMaybe<Array<Management_Asset_Types_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Management_Asset_Types_Enum>;
  _nin?: InputMaybe<Array<Management_Asset_Types_Enum>>;
};

/** input type for inserting data into table "management.asset_types" */
export type Management_Asset_Types_Insert_Input = {
  type?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Management_Asset_Types_Max_Fields = {
  __typename?: 'management_asset_types_max_fields';
  type?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "management.asset_types" */
export type Management_Asset_Types_Max_Order_By = {
  type?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Management_Asset_Types_Min_Fields = {
  __typename?: 'management_asset_types_min_fields';
  type?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "management.asset_types" */
export type Management_Asset_Types_Min_Order_By = {
  type?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "management.asset_types" */
export type Management_Asset_Types_Mutation_Response = {
  __typename?: 'management_asset_types_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Management_Asset_Types>;
};

/** input type for inserting object relation for remote table "management.asset_types" */
export type Management_Asset_Types_Obj_Rel_Insert_Input = {
  data: Management_Asset_Types_Insert_Input;
  on_conflict?: InputMaybe<Management_Asset_Types_On_Conflict>;
};

/** on conflict condition type for table "management.asset_types" */
export type Management_Asset_Types_On_Conflict = {
  constraint: Management_Asset_Types_Constraint;
  update_columns: Array<Management_Asset_Types_Update_Column>;
  where?: InputMaybe<Management_Asset_Types_Bool_Exp>;
};

/** ordering options when selecting data from "management.asset_types" */
export type Management_Asset_Types_Order_By = {
  type?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "management.asset_types" */
export type Management_Asset_Types_Pk_Columns_Input = {
  type: Scalars['String'];
};

/** select columns of table "management.asset_types" */
export enum Management_Asset_Types_Select_Column {
  /** column name */
  Type = 'type'
}

/** input type for updating data in table "management.asset_types" */
export type Management_Asset_Types_Set_Input = {
  type?: InputMaybe<Scalars['String']>;
};

/** update columns of table "management.asset_types" */
export enum Management_Asset_Types_Update_Column {
  /** column name */
  Type = 'type'
}

/** columns and relationships of "management.assets" */
export type Management_Assets = {
  __typename?: 'management_assets';
  /** An array relationship */
  asset_reviews: Array<Management_Asset_Reviews>;
  /** An aggregated array relationship */
  asset_reviews_aggregate: Management_Asset_Reviews_Aggregate;
  /** An object relationship */
  asset_type: Management_Asset_Types;
  created_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['Int'];
  /** An object relationship */
  lesson?: Maybe<Management_Lessons>;
  lesson_id?: Maybe<Scalars['Int']>;
  /** An array relationship */
  lessons: Array<Management_Lessons>;
  /** An aggregated array relationship */
  lessons_aggregate: Management_Lessons_Aggregate;
  state: Scalars['String'];
  type: Management_Asset_Types_Enum;
  updated_at?: Maybe<Scalars['timestamptz']>;
  url: Scalars['String'];
};


/** columns and relationships of "management.assets" */
export type Management_AssetsAsset_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Asset_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Asset_Reviews_Order_By>>;
  where?: InputMaybe<Management_Asset_Reviews_Bool_Exp>;
};


/** columns and relationships of "management.assets" */
export type Management_AssetsAsset_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Asset_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Asset_Reviews_Order_By>>;
  where?: InputMaybe<Management_Asset_Reviews_Bool_Exp>;
};


/** columns and relationships of "management.assets" */
export type Management_AssetsLessonsArgs = {
  distinct_on?: InputMaybe<Array<Management_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lessons_Order_By>>;
  where?: InputMaybe<Management_Lessons_Bool_Exp>;
};


/** columns and relationships of "management.assets" */
export type Management_AssetsLessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lessons_Order_By>>;
  where?: InputMaybe<Management_Lessons_Bool_Exp>;
};

/** aggregated selection of "management.assets" */
export type Management_Assets_Aggregate = {
  __typename?: 'management_assets_aggregate';
  aggregate?: Maybe<Management_Assets_Aggregate_Fields>;
  nodes: Array<Management_Assets>;
};

/** aggregate fields of "management.assets" */
export type Management_Assets_Aggregate_Fields = {
  __typename?: 'management_assets_aggregate_fields';
  avg?: Maybe<Management_Assets_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Management_Assets_Max_Fields>;
  min?: Maybe<Management_Assets_Min_Fields>;
  stddev?: Maybe<Management_Assets_Stddev_Fields>;
  stddev_pop?: Maybe<Management_Assets_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Management_Assets_Stddev_Samp_Fields>;
  sum?: Maybe<Management_Assets_Sum_Fields>;
  var_pop?: Maybe<Management_Assets_Var_Pop_Fields>;
  var_samp?: Maybe<Management_Assets_Var_Samp_Fields>;
  variance?: Maybe<Management_Assets_Variance_Fields>;
};


/** aggregate fields of "management.assets" */
export type Management_Assets_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Management_Assets_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "management.assets" */
export type Management_Assets_Aggregate_Order_By = {
  avg?: InputMaybe<Management_Assets_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Management_Assets_Max_Order_By>;
  min?: InputMaybe<Management_Assets_Min_Order_By>;
  stddev?: InputMaybe<Management_Assets_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Management_Assets_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Management_Assets_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Management_Assets_Sum_Order_By>;
  var_pop?: InputMaybe<Management_Assets_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Management_Assets_Var_Samp_Order_By>;
  variance?: InputMaybe<Management_Assets_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "management.assets" */
export type Management_Assets_Arr_Rel_Insert_Input = {
  data: Array<Management_Assets_Insert_Input>;
  on_conflict?: InputMaybe<Management_Assets_On_Conflict>;
};

/** aggregate avg on columns */
export type Management_Assets_Avg_Fields = {
  __typename?: 'management_assets_avg_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "management.assets" */
export type Management_Assets_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "management.assets". All fields are combined with a logical 'AND'. */
export type Management_Assets_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Management_Assets_Bool_Exp>>>;
  _not?: InputMaybe<Management_Assets_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Management_Assets_Bool_Exp>>>;
  asset_reviews?: InputMaybe<Management_Asset_Reviews_Bool_Exp>;
  asset_type?: InputMaybe<Management_Asset_Types_Bool_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  lesson?: InputMaybe<Management_Lessons_Bool_Exp>;
  lesson_id?: InputMaybe<Int_Comparison_Exp>;
  lessons?: InputMaybe<Management_Lessons_Bool_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<Management_Asset_Types_Enum_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  url?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "management.assets" */
export enum Management_Assets_Constraint {
  /** unique or primary key constraint */
  SlidesPkey = 'slides_pkey',
  /** unique or primary key constraint */
  SlidesUrlKey = 'slides_url_key'
}

/** input type for incrementing integer column in table "management.assets" */
export type Management_Assets_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "management.assets" */
export type Management_Assets_Insert_Input = {
  asset_reviews?: InputMaybe<Management_Asset_Reviews_Arr_Rel_Insert_Input>;
  asset_type?: InputMaybe<Management_Asset_Types_Obj_Rel_Insert_Input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  lesson?: InputMaybe<Management_Lessons_Obj_Rel_Insert_Input>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  lessons?: InputMaybe<Management_Lessons_Arr_Rel_Insert_Input>;
  state?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Management_Asset_Types_Enum>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  url?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Management_Assets_Max_Fields = {
  __typename?: 'management_assets_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  lesson_id?: Maybe<Scalars['Int']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  url?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "management.assets" */
export type Management_Assets_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Management_Assets_Min_Fields = {
  __typename?: 'management_assets_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  lesson_id?: Maybe<Scalars['Int']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  url?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "management.assets" */
export type Management_Assets_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "management.assets" */
export type Management_Assets_Mutation_Response = {
  __typename?: 'management_assets_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Management_Assets>;
};

/** input type for inserting object relation for remote table "management.assets" */
export type Management_Assets_Obj_Rel_Insert_Input = {
  data: Management_Assets_Insert_Input;
  on_conflict?: InputMaybe<Management_Assets_On_Conflict>;
};

/** on conflict condition type for table "management.assets" */
export type Management_Assets_On_Conflict = {
  constraint: Management_Assets_Constraint;
  update_columns: Array<Management_Assets_Update_Column>;
  where?: InputMaybe<Management_Assets_Bool_Exp>;
};

/** ordering options when selecting data from "management.assets" */
export type Management_Assets_Order_By = {
  asset_reviews_aggregate?: InputMaybe<Management_Asset_Reviews_Aggregate_Order_By>;
  asset_type?: InputMaybe<Management_Asset_Types_Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson?: InputMaybe<Management_Lessons_Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lessons_aggregate?: InputMaybe<Management_Lessons_Aggregate_Order_By>;
  state?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "management.assets" */
export type Management_Assets_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "management.assets" */
export enum Management_Assets_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  State = 'state',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Url = 'url'
}

/** input type for updating data in table "management.assets" */
export type Management_Assets_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  state?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Management_Asset_Types_Enum>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  url?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Management_Assets_Stddev_Fields = {
  __typename?: 'management_assets_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "management.assets" */
export type Management_Assets_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Management_Assets_Stddev_Pop_Fields = {
  __typename?: 'management_assets_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "management.assets" */
export type Management_Assets_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Management_Assets_Stddev_Samp_Fields = {
  __typename?: 'management_assets_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "management.assets" */
export type Management_Assets_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Management_Assets_Sum_Fields = {
  __typename?: 'management_assets_sum_fields';
  id?: Maybe<Scalars['Int']>;
  lesson_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "management.assets" */
export type Management_Assets_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
};

/** update columns of table "management.assets" */
export enum Management_Assets_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  State = 'state',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Url = 'url'
}

/** aggregate var_pop on columns */
export type Management_Assets_Var_Pop_Fields = {
  __typename?: 'management_assets_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "management.assets" */
export type Management_Assets_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Management_Assets_Var_Samp_Fields = {
  __typename?: 'management_assets_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "management.assets" */
export type Management_Assets_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Management_Assets_Variance_Fields = {
  __typename?: 'management_assets_variance_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "management.assets" */
export type Management_Assets_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "management.lesson_quizzes" */
export type Management_Lesson_Quizzes = {
  __typename?: 'management_lesson_quizzes';
  id: Scalars['Int'];
  /** An object relationship */
  lesson?: Maybe<Management_Lessons>;
  lesson_id: Scalars['Int'];
  /** An object relationship */
  quiz?: Maybe<Management_Quizzes>;
  quiz_id: Scalars['Int'];
  /** Should be "intro" or "exit" */
  type: Scalars['String'];
  unit_id: Scalars['Int'];
};

/** aggregated selection of "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Aggregate = {
  __typename?: 'management_lesson_quizzes_aggregate';
  aggregate?: Maybe<Management_Lesson_Quizzes_Aggregate_Fields>;
  nodes: Array<Management_Lesson_Quizzes>;
};

/** aggregate fields of "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Aggregate_Fields = {
  __typename?: 'management_lesson_quizzes_aggregate_fields';
  avg?: Maybe<Management_Lesson_Quizzes_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Management_Lesson_Quizzes_Max_Fields>;
  min?: Maybe<Management_Lesson_Quizzes_Min_Fields>;
  stddev?: Maybe<Management_Lesson_Quizzes_Stddev_Fields>;
  stddev_pop?: Maybe<Management_Lesson_Quizzes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Management_Lesson_Quizzes_Stddev_Samp_Fields>;
  sum?: Maybe<Management_Lesson_Quizzes_Sum_Fields>;
  var_pop?: Maybe<Management_Lesson_Quizzes_Var_Pop_Fields>;
  var_samp?: Maybe<Management_Lesson_Quizzes_Var_Samp_Fields>;
  variance?: Maybe<Management_Lesson_Quizzes_Variance_Fields>;
};


/** aggregate fields of "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Management_Lesson_Quizzes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Aggregate_Order_By = {
  avg?: InputMaybe<Management_Lesson_Quizzes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Management_Lesson_Quizzes_Max_Order_By>;
  min?: InputMaybe<Management_Lesson_Quizzes_Min_Order_By>;
  stddev?: InputMaybe<Management_Lesson_Quizzes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Management_Lesson_Quizzes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Management_Lesson_Quizzes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Management_Lesson_Quizzes_Sum_Order_By>;
  var_pop?: InputMaybe<Management_Lesson_Quizzes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Management_Lesson_Quizzes_Var_Samp_Order_By>;
  variance?: InputMaybe<Management_Lesson_Quizzes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Arr_Rel_Insert_Input = {
  data: Array<Management_Lesson_Quizzes_Insert_Input>;
  on_conflict?: InputMaybe<Management_Lesson_Quizzes_On_Conflict>;
};

/** aggregate avg on columns */
export type Management_Lesson_Quizzes_Avg_Fields = {
  __typename?: 'management_lesson_quizzes_avg_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "management.lesson_quizzes". All fields are combined with a logical 'AND'. */
export type Management_Lesson_Quizzes_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Management_Lesson_Quizzes_Bool_Exp>>>;
  _not?: InputMaybe<Management_Lesson_Quizzes_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Management_Lesson_Quizzes_Bool_Exp>>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  lesson?: InputMaybe<Management_Lessons_Bool_Exp>;
  lesson_id?: InputMaybe<Int_Comparison_Exp>;
  quiz?: InputMaybe<Management_Quizzes_Bool_Exp>;
  quiz_id?: InputMaybe<Int_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  unit_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "management.lesson_quizzes" */
export enum Management_Lesson_Quizzes_Constraint {
  /** unique or primary key constraint */
  LessonQuizzesTmpPkey = 'lesson_quizzes_tmp_pkey'
}

/** input type for incrementing integer column in table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  quiz_id?: InputMaybe<Scalars['Int']>;
  unit_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Insert_Input = {
  id?: InputMaybe<Scalars['Int']>;
  lesson?: InputMaybe<Management_Lessons_Obj_Rel_Insert_Input>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  quiz?: InputMaybe<Management_Quizzes_Obj_Rel_Insert_Input>;
  quiz_id?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<Scalars['String']>;
  unit_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Management_Lesson_Quizzes_Max_Fields = {
  __typename?: 'management_lesson_quizzes_max_fields';
  id?: Maybe<Scalars['Int']>;
  lesson_id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  unit_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Management_Lesson_Quizzes_Min_Fields = {
  __typename?: 'management_lesson_quizzes_min_fields';
  id?: Maybe<Scalars['Int']>;
  lesson_id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  unit_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Mutation_Response = {
  __typename?: 'management_lesson_quizzes_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Management_Lesson_Quizzes>;
};

/** input type for inserting object relation for remote table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Obj_Rel_Insert_Input = {
  data: Management_Lesson_Quizzes_Insert_Input;
  on_conflict?: InputMaybe<Management_Lesson_Quizzes_On_Conflict>;
};

/** on conflict condition type for table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_On_Conflict = {
  constraint: Management_Lesson_Quizzes_Constraint;
  update_columns: Array<Management_Lesson_Quizzes_Update_Column>;
  where?: InputMaybe<Management_Lesson_Quizzes_Bool_Exp>;
};

/** ordering options when selecting data from "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson?: InputMaybe<Management_Lessons_Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  quiz?: InputMaybe<Management_Quizzes_Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "management.lesson_quizzes" */
export enum Management_Lesson_Quizzes_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  QuizId = 'quiz_id',
  /** column name */
  Type = 'type',
  /** column name */
  UnitId = 'unit_id'
}

/** input type for updating data in table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Set_Input = {
  id?: InputMaybe<Scalars['Int']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  quiz_id?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<Scalars['String']>;
  unit_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Management_Lesson_Quizzes_Stddev_Fields = {
  __typename?: 'management_lesson_quizzes_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Management_Lesson_Quizzes_Stddev_Pop_Fields = {
  __typename?: 'management_lesson_quizzes_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Management_Lesson_Quizzes_Stddev_Samp_Fields = {
  __typename?: 'management_lesson_quizzes_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Management_Lesson_Quizzes_Sum_Fields = {
  __typename?: 'management_lesson_quizzes_sum_fields';
  id?: Maybe<Scalars['Int']>;
  lesson_id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** update columns of table "management.lesson_quizzes" */
export enum Management_Lesson_Quizzes_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  QuizId = 'quiz_id',
  /** column name */
  Type = 'type',
  /** column name */
  UnitId = 'unit_id'
}

/** aggregate var_pop on columns */
export type Management_Lesson_Quizzes_Var_Pop_Fields = {
  __typename?: 'management_lesson_quizzes_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Management_Lesson_Quizzes_Var_Samp_Fields = {
  __typename?: 'management_lesson_quizzes_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Management_Lesson_Quizzes_Variance_Fields = {
  __typename?: 'management_lesson_quizzes_variance_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "management.lesson_quizzes" */
export type Management_Lesson_Quizzes_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "management.lesson_reviews" */
export type Management_Lesson_Reviews = {
  __typename?: 'management_lesson_reviews';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  /** An object relationship */
  lesson: Management_Lessons;
  lesson_id: Scalars['Int'];
  /** An object relationship */
  review: Management_Reviews;
  review_area?: Maybe<Scalars['String']>;
  review_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "management.lesson_reviews" */
export type Management_Lesson_Reviews_Aggregate = {
  __typename?: 'management_lesson_reviews_aggregate';
  aggregate?: Maybe<Management_Lesson_Reviews_Aggregate_Fields>;
  nodes: Array<Management_Lesson_Reviews>;
};

/** aggregate fields of "management.lesson_reviews" */
export type Management_Lesson_Reviews_Aggregate_Fields = {
  __typename?: 'management_lesson_reviews_aggregate_fields';
  avg?: Maybe<Management_Lesson_Reviews_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Management_Lesson_Reviews_Max_Fields>;
  min?: Maybe<Management_Lesson_Reviews_Min_Fields>;
  stddev?: Maybe<Management_Lesson_Reviews_Stddev_Fields>;
  stddev_pop?: Maybe<Management_Lesson_Reviews_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Management_Lesson_Reviews_Stddev_Samp_Fields>;
  sum?: Maybe<Management_Lesson_Reviews_Sum_Fields>;
  var_pop?: Maybe<Management_Lesson_Reviews_Var_Pop_Fields>;
  var_samp?: Maybe<Management_Lesson_Reviews_Var_Samp_Fields>;
  variance?: Maybe<Management_Lesson_Reviews_Variance_Fields>;
};


/** aggregate fields of "management.lesson_reviews" */
export type Management_Lesson_Reviews_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Management_Lesson_Reviews_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "management.lesson_reviews" */
export type Management_Lesson_Reviews_Aggregate_Order_By = {
  avg?: InputMaybe<Management_Lesson_Reviews_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Management_Lesson_Reviews_Max_Order_By>;
  min?: InputMaybe<Management_Lesson_Reviews_Min_Order_By>;
  stddev?: InputMaybe<Management_Lesson_Reviews_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Management_Lesson_Reviews_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Management_Lesson_Reviews_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Management_Lesson_Reviews_Sum_Order_By>;
  var_pop?: InputMaybe<Management_Lesson_Reviews_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Management_Lesson_Reviews_Var_Samp_Order_By>;
  variance?: InputMaybe<Management_Lesson_Reviews_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "management.lesson_reviews" */
export type Management_Lesson_Reviews_Arr_Rel_Insert_Input = {
  data: Array<Management_Lesson_Reviews_Insert_Input>;
  on_conflict?: InputMaybe<Management_Lesson_Reviews_On_Conflict>;
};

/** aggregate avg on columns */
export type Management_Lesson_Reviews_Avg_Fields = {
  __typename?: 'management_lesson_reviews_avg_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "management.lesson_reviews" */
export type Management_Lesson_Reviews_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "management.lesson_reviews". All fields are combined with a logical 'AND'. */
export type Management_Lesson_Reviews_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Management_Lesson_Reviews_Bool_Exp>>>;
  _not?: InputMaybe<Management_Lesson_Reviews_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Management_Lesson_Reviews_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  lesson?: InputMaybe<Management_Lessons_Bool_Exp>;
  lesson_id?: InputMaybe<Int_Comparison_Exp>;
  review?: InputMaybe<Management_Reviews_Bool_Exp>;
  review_area?: InputMaybe<String_Comparison_Exp>;
  review_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "management.lesson_reviews" */
export enum Management_Lesson_Reviews_Constraint {
  /** unique or primary key constraint */
  LessonReviewsPkey = 'lesson_reviews_pkey'
}

/** input type for incrementing integer column in table "management.lesson_reviews" */
export type Management_Lesson_Reviews_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  review_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "management.lesson_reviews" */
export type Management_Lesson_Reviews_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  lesson?: InputMaybe<Management_Lessons_Obj_Rel_Insert_Input>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  review?: InputMaybe<Management_Reviews_Obj_Rel_Insert_Input>;
  review_area?: InputMaybe<Scalars['String']>;
  review_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Management_Lesson_Reviews_Max_Fields = {
  __typename?: 'management_lesson_reviews_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  lesson_id?: Maybe<Scalars['Int']>;
  review_area?: Maybe<Scalars['String']>;
  review_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "management.lesson_reviews" */
export type Management_Lesson_Reviews_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  review_area?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Management_Lesson_Reviews_Min_Fields = {
  __typename?: 'management_lesson_reviews_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  lesson_id?: Maybe<Scalars['Int']>;
  review_area?: Maybe<Scalars['String']>;
  review_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "management.lesson_reviews" */
export type Management_Lesson_Reviews_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  review_area?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "management.lesson_reviews" */
export type Management_Lesson_Reviews_Mutation_Response = {
  __typename?: 'management_lesson_reviews_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Management_Lesson_Reviews>;
};

/** input type for inserting object relation for remote table "management.lesson_reviews" */
export type Management_Lesson_Reviews_Obj_Rel_Insert_Input = {
  data: Management_Lesson_Reviews_Insert_Input;
  on_conflict?: InputMaybe<Management_Lesson_Reviews_On_Conflict>;
};

/** on conflict condition type for table "management.lesson_reviews" */
export type Management_Lesson_Reviews_On_Conflict = {
  constraint: Management_Lesson_Reviews_Constraint;
  update_columns: Array<Management_Lesson_Reviews_Update_Column>;
  where?: InputMaybe<Management_Lesson_Reviews_Bool_Exp>;
};

/** ordering options when selecting data from "management.lesson_reviews" */
export type Management_Lesson_Reviews_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson?: InputMaybe<Management_Lessons_Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  review?: InputMaybe<Management_Reviews_Order_By>;
  review_area?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "management.lesson_reviews" */
export type Management_Lesson_Reviews_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "management.lesson_reviews" */
export enum Management_Lesson_Reviews_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  ReviewArea = 'review_area',
  /** column name */
  ReviewId = 'review_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "management.lesson_reviews" */
export type Management_Lesson_Reviews_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  review_area?: InputMaybe<Scalars['String']>;
  review_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Management_Lesson_Reviews_Stddev_Fields = {
  __typename?: 'management_lesson_reviews_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "management.lesson_reviews" */
export type Management_Lesson_Reviews_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Management_Lesson_Reviews_Stddev_Pop_Fields = {
  __typename?: 'management_lesson_reviews_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "management.lesson_reviews" */
export type Management_Lesson_Reviews_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Management_Lesson_Reviews_Stddev_Samp_Fields = {
  __typename?: 'management_lesson_reviews_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "management.lesson_reviews" */
export type Management_Lesson_Reviews_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Management_Lesson_Reviews_Sum_Fields = {
  __typename?: 'management_lesson_reviews_sum_fields';
  id?: Maybe<Scalars['Int']>;
  lesson_id?: Maybe<Scalars['Int']>;
  review_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "management.lesson_reviews" */
export type Management_Lesson_Reviews_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** update columns of table "management.lesson_reviews" */
export enum Management_Lesson_Reviews_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  ReviewArea = 'review_area',
  /** column name */
  ReviewId = 'review_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Management_Lesson_Reviews_Var_Pop_Fields = {
  __typename?: 'management_lesson_reviews_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "management.lesson_reviews" */
export type Management_Lesson_Reviews_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Management_Lesson_Reviews_Var_Samp_Fields = {
  __typename?: 'management_lesson_reviews_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "management.lesson_reviews" */
export type Management_Lesson_Reviews_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Management_Lesson_Reviews_Variance_Fields = {
  __typename?: 'management_lesson_reviews_variance_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "management.lesson_reviews" */
export type Management_Lesson_Reviews_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "management.lessons" */
export type Management_Lessons = {
  __typename?: 'management_lessons';
  additional_subject_info?: Maybe<Scalars['String']>;
  asset_source_location_url?: Maybe<Scalars['String']>;
  /** An array relationship */
  assets: Array<Management_Assets>;
  /** An aggregated array relationship */
  assets_aggregate: Management_Assets_Aggregate;
  /** An object relationship */
  cohort: Cohorts;
  cohort_id: Scalars['Int'];
  content_guidance?: Maybe<Scalars['String']>;
  copyright_holder?: Maybe<Scalars['String']>;
  core_content1?: Maybe<Scalars['String']>;
  core_content2?: Maybe<Scalars['String']>;
  core_content3?: Maybe<Scalars['String']>;
  core_content4?: Maybe<Scalars['String']>;
  core_content5?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  disciplinary_knowledge?: Maybe<Scalars['String']>;
  equipment?: Maybe<Scalars['String']>;
  exit_quiz_url?: Maybe<Scalars['String']>;
  guidance_details?: Maybe<Scalars['String']>;
  has_copyright_material: Scalars['Boolean'];
  id: Scalars['Int'];
  ingest_id: Scalars['String'];
  is_sensitive: Scalars['Boolean'];
  lesson_description?: Maybe<Scalars['String']>;
  /** An array relationship */
  lesson_quizzes: Array<Management_Lesson_Quizzes>;
  /** An aggregated array relationship */
  lesson_quizzes_aggregate: Management_Lesson_Quizzes_Aggregate;
  /** An array relationship */
  lesson_reviews: Array<Management_Lesson_Reviews>;
  /** An aggregated array relationship */
  lesson_reviews_aggregate: Management_Lesson_Reviews_Aggregate;
  lesson_vocabulary?: Maybe<Scalars['String']>;
  notes?: Maybe<Scalars['String']>;
  short_code?: Maybe<Scalars['String']>;
  signed_video_id?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  slide?: Maybe<Management_Assets>;
  slide_id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  state: Scalars['String'];
  substantive_knowledge?: Maybe<Scalars['String']>;
  supervision_level?: Maybe<Scalars['String']>;
  /** An object relationship */
  teacher?: Maybe<Teachers>;
  teacher_id?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  /** An array relationship */
  unit_lessons: Array<Management_Unit_Lessons>;
  /** An aggregated array relationship */
  unit_lessons_aggregate: Management_Unit_Lessons_Aggregate;
  unsigned_video_id?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  video?: Maybe<Management_Videos>;
  worksheet_has_embedded_media: Scalars['Boolean'];
};


/** columns and relationships of "management.lessons" */
export type Management_LessonsAssetsArgs = {
  distinct_on?: InputMaybe<Array<Management_Assets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Assets_Order_By>>;
  where?: InputMaybe<Management_Assets_Bool_Exp>;
};


/** columns and relationships of "management.lessons" */
export type Management_LessonsAssets_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Assets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Assets_Order_By>>;
  where?: InputMaybe<Management_Assets_Bool_Exp>;
};


/** columns and relationships of "management.lessons" */
export type Management_LessonsLesson_QuizzesArgs = {
  distinct_on?: InputMaybe<Array<Management_Lesson_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lesson_Quizzes_Order_By>>;
  where?: InputMaybe<Management_Lesson_Quizzes_Bool_Exp>;
};


/** columns and relationships of "management.lessons" */
export type Management_LessonsLesson_Quizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Lesson_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lesson_Quizzes_Order_By>>;
  where?: InputMaybe<Management_Lesson_Quizzes_Bool_Exp>;
};


/** columns and relationships of "management.lessons" */
export type Management_LessonsLesson_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Lesson_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lesson_Reviews_Order_By>>;
  where?: InputMaybe<Management_Lesson_Reviews_Bool_Exp>;
};


/** columns and relationships of "management.lessons" */
export type Management_LessonsLesson_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Lesson_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lesson_Reviews_Order_By>>;
  where?: InputMaybe<Management_Lesson_Reviews_Bool_Exp>;
};


/** columns and relationships of "management.lessons" */
export type Management_LessonsUnit_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Management_Unit_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Unit_Lessons_Order_By>>;
  where?: InputMaybe<Management_Unit_Lessons_Bool_Exp>;
};


/** columns and relationships of "management.lessons" */
export type Management_LessonsUnit_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Unit_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Unit_Lessons_Order_By>>;
  where?: InputMaybe<Management_Unit_Lessons_Bool_Exp>;
};

/** aggregated selection of "management.lessons" */
export type Management_Lessons_Aggregate = {
  __typename?: 'management_lessons_aggregate';
  aggregate?: Maybe<Management_Lessons_Aggregate_Fields>;
  nodes: Array<Management_Lessons>;
};

/** aggregate fields of "management.lessons" */
export type Management_Lessons_Aggregate_Fields = {
  __typename?: 'management_lessons_aggregate_fields';
  avg?: Maybe<Management_Lessons_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Management_Lessons_Max_Fields>;
  min?: Maybe<Management_Lessons_Min_Fields>;
  stddev?: Maybe<Management_Lessons_Stddev_Fields>;
  stddev_pop?: Maybe<Management_Lessons_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Management_Lessons_Stddev_Samp_Fields>;
  sum?: Maybe<Management_Lessons_Sum_Fields>;
  var_pop?: Maybe<Management_Lessons_Var_Pop_Fields>;
  var_samp?: Maybe<Management_Lessons_Var_Samp_Fields>;
  variance?: Maybe<Management_Lessons_Variance_Fields>;
};


/** aggregate fields of "management.lessons" */
export type Management_Lessons_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Management_Lessons_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "management.lessons" */
export type Management_Lessons_Aggregate_Order_By = {
  avg?: InputMaybe<Management_Lessons_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Management_Lessons_Max_Order_By>;
  min?: InputMaybe<Management_Lessons_Min_Order_By>;
  stddev?: InputMaybe<Management_Lessons_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Management_Lessons_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Management_Lessons_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Management_Lessons_Sum_Order_By>;
  var_pop?: InputMaybe<Management_Lessons_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Management_Lessons_Var_Samp_Order_By>;
  variance?: InputMaybe<Management_Lessons_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "management.lessons" */
export type Management_Lessons_Arr_Rel_Insert_Input = {
  data: Array<Management_Lessons_Insert_Input>;
  on_conflict?: InputMaybe<Management_Lessons_On_Conflict>;
};

/** aggregate avg on columns */
export type Management_Lessons_Avg_Fields = {
  __typename?: 'management_lessons_avg_fields';
  cohort_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  slide_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "management.lessons" */
export type Management_Lessons_Avg_Order_By = {
  cohort_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slide_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "management.lessons". All fields are combined with a logical 'AND'. */
export type Management_Lessons_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Management_Lessons_Bool_Exp>>>;
  _not?: InputMaybe<Management_Lessons_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Management_Lessons_Bool_Exp>>>;
  additional_subject_info?: InputMaybe<String_Comparison_Exp>;
  asset_source_location_url?: InputMaybe<String_Comparison_Exp>;
  assets?: InputMaybe<Management_Assets_Bool_Exp>;
  cohort?: InputMaybe<Cohorts_Bool_Exp>;
  cohort_id?: InputMaybe<Int_Comparison_Exp>;
  content_guidance?: InputMaybe<String_Comparison_Exp>;
  copyright_holder?: InputMaybe<String_Comparison_Exp>;
  core_content1?: InputMaybe<String_Comparison_Exp>;
  core_content2?: InputMaybe<String_Comparison_Exp>;
  core_content3?: InputMaybe<String_Comparison_Exp>;
  core_content4?: InputMaybe<String_Comparison_Exp>;
  core_content5?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  disciplinary_knowledge?: InputMaybe<String_Comparison_Exp>;
  equipment?: InputMaybe<String_Comparison_Exp>;
  exit_quiz_url?: InputMaybe<String_Comparison_Exp>;
  guidance_details?: InputMaybe<String_Comparison_Exp>;
  has_copyright_material?: InputMaybe<Boolean_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  is_sensitive?: InputMaybe<Boolean_Comparison_Exp>;
  lesson_description?: InputMaybe<String_Comparison_Exp>;
  lesson_quizzes?: InputMaybe<Management_Lesson_Quizzes_Bool_Exp>;
  lesson_reviews?: InputMaybe<Management_Lesson_Reviews_Bool_Exp>;
  lesson_vocabulary?: InputMaybe<String_Comparison_Exp>;
  notes?: InputMaybe<String_Comparison_Exp>;
  short_code?: InputMaybe<String_Comparison_Exp>;
  signed_video_id?: InputMaybe<Uuid_Comparison_Exp>;
  slide?: InputMaybe<Management_Assets_Bool_Exp>;
  slide_id?: InputMaybe<Int_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  substantive_knowledge?: InputMaybe<String_Comparison_Exp>;
  supervision_level?: InputMaybe<String_Comparison_Exp>;
  teacher?: InputMaybe<Teachers_Bool_Exp>;
  teacher_id?: InputMaybe<Int_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  unit_lessons?: InputMaybe<Management_Unit_Lessons_Bool_Exp>;
  unsigned_video_id?: InputMaybe<Uuid_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  video?: InputMaybe<Management_Videos_Bool_Exp>;
  worksheet_has_embedded_media?: InputMaybe<Boolean_Comparison_Exp>;
};

/** unique or primary key constraints on table "management.lessons" */
export enum Management_Lessons_Constraint {
  /** unique or primary key constraint */
  LessonsIngestIdKey = 'lessons_ingest_id_key',
  /** unique or primary key constraint */
  LessonsPkey = 'lessons_pkey',
  /** unique or primary key constraint */
  LessonsSignedVideoIdKey = 'lessons_signed_video_id_key',
  /** unique or primary key constraint */
  LessonsUnsignedVideoIdKey = 'lessons_unsigned_video_id_key'
}

/** input type for incrementing integer column in table "management.lessons" */
export type Management_Lessons_Inc_Input = {
  cohort_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  slide_id?: InputMaybe<Scalars['Int']>;
  teacher_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "management.lessons" */
export type Management_Lessons_Insert_Input = {
  additional_subject_info?: InputMaybe<Scalars['String']>;
  asset_source_location_url?: InputMaybe<Scalars['String']>;
  assets?: InputMaybe<Management_Assets_Arr_Rel_Insert_Input>;
  cohort?: InputMaybe<Cohorts_Obj_Rel_Insert_Input>;
  cohort_id?: InputMaybe<Scalars['Int']>;
  content_guidance?: InputMaybe<Scalars['String']>;
  copyright_holder?: InputMaybe<Scalars['String']>;
  core_content1?: InputMaybe<Scalars['String']>;
  core_content2?: InputMaybe<Scalars['String']>;
  core_content3?: InputMaybe<Scalars['String']>;
  core_content4?: InputMaybe<Scalars['String']>;
  core_content5?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  disciplinary_knowledge?: InputMaybe<Scalars['String']>;
  equipment?: InputMaybe<Scalars['String']>;
  exit_quiz_url?: InputMaybe<Scalars['String']>;
  guidance_details?: InputMaybe<Scalars['String']>;
  has_copyright_material?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  is_sensitive?: InputMaybe<Scalars['Boolean']>;
  lesson_description?: InputMaybe<Scalars['String']>;
  lesson_quizzes?: InputMaybe<Management_Lesson_Quizzes_Arr_Rel_Insert_Input>;
  lesson_reviews?: InputMaybe<Management_Lesson_Reviews_Arr_Rel_Insert_Input>;
  lesson_vocabulary?: InputMaybe<Scalars['String']>;
  notes?: InputMaybe<Scalars['String']>;
  short_code?: InputMaybe<Scalars['String']>;
  signed_video_id?: InputMaybe<Scalars['uuid']>;
  slide?: InputMaybe<Management_Assets_Obj_Rel_Insert_Input>;
  slide_id?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  substantive_knowledge?: InputMaybe<Scalars['String']>;
  supervision_level?: InputMaybe<Scalars['String']>;
  teacher?: InputMaybe<Teachers_Obj_Rel_Insert_Input>;
  teacher_id?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Scalars['String']>;
  unit_lessons?: InputMaybe<Management_Unit_Lessons_Arr_Rel_Insert_Input>;
  unsigned_video_id?: InputMaybe<Scalars['uuid']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  video?: InputMaybe<Management_Videos_Obj_Rel_Insert_Input>;
  worksheet_has_embedded_media?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate max on columns */
export type Management_Lessons_Max_Fields = {
  __typename?: 'management_lessons_max_fields';
  additional_subject_info?: Maybe<Scalars['String']>;
  asset_source_location_url?: Maybe<Scalars['String']>;
  cohort_id?: Maybe<Scalars['Int']>;
  content_guidance?: Maybe<Scalars['String']>;
  copyright_holder?: Maybe<Scalars['String']>;
  core_content1?: Maybe<Scalars['String']>;
  core_content2?: Maybe<Scalars['String']>;
  core_content3?: Maybe<Scalars['String']>;
  core_content4?: Maybe<Scalars['String']>;
  core_content5?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  disciplinary_knowledge?: Maybe<Scalars['String']>;
  equipment?: Maybe<Scalars['String']>;
  exit_quiz_url?: Maybe<Scalars['String']>;
  guidance_details?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  lesson_description?: Maybe<Scalars['String']>;
  lesson_vocabulary?: Maybe<Scalars['String']>;
  notes?: Maybe<Scalars['String']>;
  short_code?: Maybe<Scalars['String']>;
  signed_video_id?: Maybe<Scalars['uuid']>;
  slide_id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  substantive_knowledge?: Maybe<Scalars['String']>;
  supervision_level?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  unsigned_video_id?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "management.lessons" */
export type Management_Lessons_Max_Order_By = {
  additional_subject_info?: InputMaybe<Order_By>;
  asset_source_location_url?: InputMaybe<Order_By>;
  cohort_id?: InputMaybe<Order_By>;
  content_guidance?: InputMaybe<Order_By>;
  copyright_holder?: InputMaybe<Order_By>;
  core_content1?: InputMaybe<Order_By>;
  core_content2?: InputMaybe<Order_By>;
  core_content3?: InputMaybe<Order_By>;
  core_content4?: InputMaybe<Order_By>;
  core_content5?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  disciplinary_knowledge?: InputMaybe<Order_By>;
  equipment?: InputMaybe<Order_By>;
  exit_quiz_url?: InputMaybe<Order_By>;
  guidance_details?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  lesson_description?: InputMaybe<Order_By>;
  lesson_vocabulary?: InputMaybe<Order_By>;
  notes?: InputMaybe<Order_By>;
  short_code?: InputMaybe<Order_By>;
  signed_video_id?: InputMaybe<Order_By>;
  slide_id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  substantive_knowledge?: InputMaybe<Order_By>;
  supervision_level?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unsigned_video_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Management_Lessons_Min_Fields = {
  __typename?: 'management_lessons_min_fields';
  additional_subject_info?: Maybe<Scalars['String']>;
  asset_source_location_url?: Maybe<Scalars['String']>;
  cohort_id?: Maybe<Scalars['Int']>;
  content_guidance?: Maybe<Scalars['String']>;
  copyright_holder?: Maybe<Scalars['String']>;
  core_content1?: Maybe<Scalars['String']>;
  core_content2?: Maybe<Scalars['String']>;
  core_content3?: Maybe<Scalars['String']>;
  core_content4?: Maybe<Scalars['String']>;
  core_content5?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  disciplinary_knowledge?: Maybe<Scalars['String']>;
  equipment?: Maybe<Scalars['String']>;
  exit_quiz_url?: Maybe<Scalars['String']>;
  guidance_details?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  lesson_description?: Maybe<Scalars['String']>;
  lesson_vocabulary?: Maybe<Scalars['String']>;
  notes?: Maybe<Scalars['String']>;
  short_code?: Maybe<Scalars['String']>;
  signed_video_id?: Maybe<Scalars['uuid']>;
  slide_id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  substantive_knowledge?: Maybe<Scalars['String']>;
  supervision_level?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  unsigned_video_id?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "management.lessons" */
export type Management_Lessons_Min_Order_By = {
  additional_subject_info?: InputMaybe<Order_By>;
  asset_source_location_url?: InputMaybe<Order_By>;
  cohort_id?: InputMaybe<Order_By>;
  content_guidance?: InputMaybe<Order_By>;
  copyright_holder?: InputMaybe<Order_By>;
  core_content1?: InputMaybe<Order_By>;
  core_content2?: InputMaybe<Order_By>;
  core_content3?: InputMaybe<Order_By>;
  core_content4?: InputMaybe<Order_By>;
  core_content5?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  disciplinary_knowledge?: InputMaybe<Order_By>;
  equipment?: InputMaybe<Order_By>;
  exit_quiz_url?: InputMaybe<Order_By>;
  guidance_details?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  lesson_description?: InputMaybe<Order_By>;
  lesson_vocabulary?: InputMaybe<Order_By>;
  notes?: InputMaybe<Order_By>;
  short_code?: InputMaybe<Order_By>;
  signed_video_id?: InputMaybe<Order_By>;
  slide_id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  substantive_knowledge?: InputMaybe<Order_By>;
  supervision_level?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unsigned_video_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "management.lessons" */
export type Management_Lessons_Mutation_Response = {
  __typename?: 'management_lessons_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Management_Lessons>;
};

/** input type for inserting object relation for remote table "management.lessons" */
export type Management_Lessons_Obj_Rel_Insert_Input = {
  data: Management_Lessons_Insert_Input;
  on_conflict?: InputMaybe<Management_Lessons_On_Conflict>;
};

/** on conflict condition type for table "management.lessons" */
export type Management_Lessons_On_Conflict = {
  constraint: Management_Lessons_Constraint;
  update_columns: Array<Management_Lessons_Update_Column>;
  where?: InputMaybe<Management_Lessons_Bool_Exp>;
};

/** ordering options when selecting data from "management.lessons" */
export type Management_Lessons_Order_By = {
  additional_subject_info?: InputMaybe<Order_By>;
  asset_source_location_url?: InputMaybe<Order_By>;
  assets_aggregate?: InputMaybe<Management_Assets_Aggregate_Order_By>;
  cohort?: InputMaybe<Cohorts_Order_By>;
  cohort_id?: InputMaybe<Order_By>;
  content_guidance?: InputMaybe<Order_By>;
  copyright_holder?: InputMaybe<Order_By>;
  core_content1?: InputMaybe<Order_By>;
  core_content2?: InputMaybe<Order_By>;
  core_content3?: InputMaybe<Order_By>;
  core_content4?: InputMaybe<Order_By>;
  core_content5?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  disciplinary_knowledge?: InputMaybe<Order_By>;
  equipment?: InputMaybe<Order_By>;
  exit_quiz_url?: InputMaybe<Order_By>;
  guidance_details?: InputMaybe<Order_By>;
  has_copyright_material?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  is_sensitive?: InputMaybe<Order_By>;
  lesson_description?: InputMaybe<Order_By>;
  lesson_quizzes_aggregate?: InputMaybe<Management_Lesson_Quizzes_Aggregate_Order_By>;
  lesson_reviews_aggregate?: InputMaybe<Management_Lesson_Reviews_Aggregate_Order_By>;
  lesson_vocabulary?: InputMaybe<Order_By>;
  notes?: InputMaybe<Order_By>;
  short_code?: InputMaybe<Order_By>;
  signed_video_id?: InputMaybe<Order_By>;
  slide?: InputMaybe<Management_Assets_Order_By>;
  slide_id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  substantive_knowledge?: InputMaybe<Order_By>;
  supervision_level?: InputMaybe<Order_By>;
  teacher?: InputMaybe<Teachers_Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unit_lessons_aggregate?: InputMaybe<Management_Unit_Lessons_Aggregate_Order_By>;
  unsigned_video_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  video?: InputMaybe<Management_Videos_Order_By>;
  worksheet_has_embedded_media?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "management.lessons" */
export type Management_Lessons_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "management.lessons" */
export enum Management_Lessons_Select_Column {
  /** column name */
  AdditionalSubjectInfo = 'additional_subject_info',
  /** column name */
  AssetSourceLocationUrl = 'asset_source_location_url',
  /** column name */
  CohortId = 'cohort_id',
  /** column name */
  ContentGuidance = 'content_guidance',
  /** column name */
  CopyrightHolder = 'copyright_holder',
  /** column name */
  CoreContent1 = 'core_content1',
  /** column name */
  CoreContent2 = 'core_content2',
  /** column name */
  CoreContent3 = 'core_content3',
  /** column name */
  CoreContent4 = 'core_content4',
  /** column name */
  CoreContent5 = 'core_content5',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DisciplinaryKnowledge = 'disciplinary_knowledge',
  /** column name */
  Equipment = 'equipment',
  /** column name */
  ExitQuizUrl = 'exit_quiz_url',
  /** column name */
  GuidanceDetails = 'guidance_details',
  /** column name */
  HasCopyrightMaterial = 'has_copyright_material',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  IsSensitive = 'is_sensitive',
  /** column name */
  LessonDescription = 'lesson_description',
  /** column name */
  LessonVocabulary = 'lesson_vocabulary',
  /** column name */
  Notes = 'notes',
  /** column name */
  ShortCode = 'short_code',
  /** column name */
  SignedVideoId = 'signed_video_id',
  /** column name */
  SlideId = 'slide_id',
  /** column name */
  Slug = 'slug',
  /** column name */
  State = 'state',
  /** column name */
  SubstantiveKnowledge = 'substantive_knowledge',
  /** column name */
  SupervisionLevel = 'supervision_level',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  Title = 'title',
  /** column name */
  UnsignedVideoId = 'unsigned_video_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  WorksheetHasEmbeddedMedia = 'worksheet_has_embedded_media'
}

/** input type for updating data in table "management.lessons" */
export type Management_Lessons_Set_Input = {
  additional_subject_info?: InputMaybe<Scalars['String']>;
  asset_source_location_url?: InputMaybe<Scalars['String']>;
  cohort_id?: InputMaybe<Scalars['Int']>;
  content_guidance?: InputMaybe<Scalars['String']>;
  copyright_holder?: InputMaybe<Scalars['String']>;
  core_content1?: InputMaybe<Scalars['String']>;
  core_content2?: InputMaybe<Scalars['String']>;
  core_content3?: InputMaybe<Scalars['String']>;
  core_content4?: InputMaybe<Scalars['String']>;
  core_content5?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  disciplinary_knowledge?: InputMaybe<Scalars['String']>;
  equipment?: InputMaybe<Scalars['String']>;
  exit_quiz_url?: InputMaybe<Scalars['String']>;
  guidance_details?: InputMaybe<Scalars['String']>;
  has_copyright_material?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  is_sensitive?: InputMaybe<Scalars['Boolean']>;
  lesson_description?: InputMaybe<Scalars['String']>;
  lesson_vocabulary?: InputMaybe<Scalars['String']>;
  notes?: InputMaybe<Scalars['String']>;
  short_code?: InputMaybe<Scalars['String']>;
  signed_video_id?: InputMaybe<Scalars['uuid']>;
  slide_id?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  substantive_knowledge?: InputMaybe<Scalars['String']>;
  supervision_level?: InputMaybe<Scalars['String']>;
  teacher_id?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Scalars['String']>;
  unsigned_video_id?: InputMaybe<Scalars['uuid']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  worksheet_has_embedded_media?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate stddev on columns */
export type Management_Lessons_Stddev_Fields = {
  __typename?: 'management_lessons_stddev_fields';
  cohort_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  slide_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "management.lessons" */
export type Management_Lessons_Stddev_Order_By = {
  cohort_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slide_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Management_Lessons_Stddev_Pop_Fields = {
  __typename?: 'management_lessons_stddev_pop_fields';
  cohort_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  slide_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "management.lessons" */
export type Management_Lessons_Stddev_Pop_Order_By = {
  cohort_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slide_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Management_Lessons_Stddev_Samp_Fields = {
  __typename?: 'management_lessons_stddev_samp_fields';
  cohort_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  slide_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "management.lessons" */
export type Management_Lessons_Stddev_Samp_Order_By = {
  cohort_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slide_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Management_Lessons_Sum_Fields = {
  __typename?: 'management_lessons_sum_fields';
  cohort_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  slide_id?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "management.lessons" */
export type Management_Lessons_Sum_Order_By = {
  cohort_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slide_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** update columns of table "management.lessons" */
export enum Management_Lessons_Update_Column {
  /** column name */
  AdditionalSubjectInfo = 'additional_subject_info',
  /** column name */
  AssetSourceLocationUrl = 'asset_source_location_url',
  /** column name */
  CohortId = 'cohort_id',
  /** column name */
  ContentGuidance = 'content_guidance',
  /** column name */
  CopyrightHolder = 'copyright_holder',
  /** column name */
  CoreContent1 = 'core_content1',
  /** column name */
  CoreContent2 = 'core_content2',
  /** column name */
  CoreContent3 = 'core_content3',
  /** column name */
  CoreContent4 = 'core_content4',
  /** column name */
  CoreContent5 = 'core_content5',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DisciplinaryKnowledge = 'disciplinary_knowledge',
  /** column name */
  Equipment = 'equipment',
  /** column name */
  ExitQuizUrl = 'exit_quiz_url',
  /** column name */
  GuidanceDetails = 'guidance_details',
  /** column name */
  HasCopyrightMaterial = 'has_copyright_material',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  IsSensitive = 'is_sensitive',
  /** column name */
  LessonDescription = 'lesson_description',
  /** column name */
  LessonVocabulary = 'lesson_vocabulary',
  /** column name */
  Notes = 'notes',
  /** column name */
  ShortCode = 'short_code',
  /** column name */
  SignedVideoId = 'signed_video_id',
  /** column name */
  SlideId = 'slide_id',
  /** column name */
  Slug = 'slug',
  /** column name */
  State = 'state',
  /** column name */
  SubstantiveKnowledge = 'substantive_knowledge',
  /** column name */
  SupervisionLevel = 'supervision_level',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  Title = 'title',
  /** column name */
  UnsignedVideoId = 'unsigned_video_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  WorksheetHasEmbeddedMedia = 'worksheet_has_embedded_media'
}

/** aggregate var_pop on columns */
export type Management_Lessons_Var_Pop_Fields = {
  __typename?: 'management_lessons_var_pop_fields';
  cohort_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  slide_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "management.lessons" */
export type Management_Lessons_Var_Pop_Order_By = {
  cohort_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slide_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Management_Lessons_Var_Samp_Fields = {
  __typename?: 'management_lessons_var_samp_fields';
  cohort_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  slide_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "management.lessons" */
export type Management_Lessons_Var_Samp_Order_By = {
  cohort_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slide_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Management_Lessons_Variance_Fields = {
  __typename?: 'management_lessons_variance_fields';
  cohort_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  slide_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "management.lessons" */
export type Management_Lessons_Variance_Order_By = {
  cohort_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slide_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "management.questions" */
export type Management_Questions = {
  __typename?: 'management_questions';
  active?: Maybe<Scalars['Boolean']>;
  answer?: Maybe<Scalars['json']>;
  choice_images?: Maybe<Scalars['json']>;
  choices?: Maybe<Scalars['json']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  entry?: Maybe<Scalars['String']>;
  feedback_correct?: Maybe<Scalars['String']>;
  feedback_incorrect?: Maybe<Scalars['String']>;
  /** Used to group questions with in a quiz */
  group?: Maybe<Scalars['String']>;
  /** A sha1 of title, type, answer, choices, images and choiceImages */
  hash?: Maybe<Scalars['bpchar']>;
  id: Scalars['Int'];
  images?: Maybe<Scalars['json']>;
  ingest_id: Scalars['String'];
  /** ISO 639-1 */
  lang?: Maybe<Scalars['bpchar']>;
  points?: Maybe<Scalars['Int']>;
  /** An array relationship */
  question_quizzes: Array<Management_Quiz_Questions>;
  /** An aggregated array relationship */
  question_quizzes_aggregate: Management_Quiz_Questions_Aggregate;
  required?: Maybe<Scalars['Boolean']>;
  state: Scalars['String'];
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "management.questions" */
export type Management_QuestionsAnswerArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "management.questions" */
export type Management_QuestionsChoice_ImagesArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "management.questions" */
export type Management_QuestionsChoicesArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "management.questions" */
export type Management_QuestionsImagesArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "management.questions" */
export type Management_QuestionsQuestion_QuizzesArgs = {
  distinct_on?: InputMaybe<Array<Management_Quiz_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quiz_Questions_Order_By>>;
  where?: InputMaybe<Management_Quiz_Questions_Bool_Exp>;
};


/** columns and relationships of "management.questions" */
export type Management_QuestionsQuestion_Quizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Quiz_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quiz_Questions_Order_By>>;
  where?: InputMaybe<Management_Quiz_Questions_Bool_Exp>;
};

/** aggregated selection of "management.questions" */
export type Management_Questions_Aggregate = {
  __typename?: 'management_questions_aggregate';
  aggregate?: Maybe<Management_Questions_Aggregate_Fields>;
  nodes: Array<Management_Questions>;
};

/** aggregate fields of "management.questions" */
export type Management_Questions_Aggregate_Fields = {
  __typename?: 'management_questions_aggregate_fields';
  avg?: Maybe<Management_Questions_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Management_Questions_Max_Fields>;
  min?: Maybe<Management_Questions_Min_Fields>;
  stddev?: Maybe<Management_Questions_Stddev_Fields>;
  stddev_pop?: Maybe<Management_Questions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Management_Questions_Stddev_Samp_Fields>;
  sum?: Maybe<Management_Questions_Sum_Fields>;
  var_pop?: Maybe<Management_Questions_Var_Pop_Fields>;
  var_samp?: Maybe<Management_Questions_Var_Samp_Fields>;
  variance?: Maybe<Management_Questions_Variance_Fields>;
};


/** aggregate fields of "management.questions" */
export type Management_Questions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Management_Questions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "management.questions" */
export type Management_Questions_Aggregate_Order_By = {
  avg?: InputMaybe<Management_Questions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Management_Questions_Max_Order_By>;
  min?: InputMaybe<Management_Questions_Min_Order_By>;
  stddev?: InputMaybe<Management_Questions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Management_Questions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Management_Questions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Management_Questions_Sum_Order_By>;
  var_pop?: InputMaybe<Management_Questions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Management_Questions_Var_Samp_Order_By>;
  variance?: InputMaybe<Management_Questions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "management.questions" */
export type Management_Questions_Arr_Rel_Insert_Input = {
  data: Array<Management_Questions_Insert_Input>;
  on_conflict?: InputMaybe<Management_Questions_On_Conflict>;
};

/** aggregate avg on columns */
export type Management_Questions_Avg_Fields = {
  __typename?: 'management_questions_avg_fields';
  id?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "management.questions" */
export type Management_Questions_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "management.questions". All fields are combined with a logical 'AND'. */
export type Management_Questions_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Management_Questions_Bool_Exp>>>;
  _not?: InputMaybe<Management_Questions_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Management_Questions_Bool_Exp>>>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  answer?: InputMaybe<Json_Comparison_Exp>;
  choice_images?: InputMaybe<Json_Comparison_Exp>;
  choices?: InputMaybe<Json_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  entry?: InputMaybe<String_Comparison_Exp>;
  feedback_correct?: InputMaybe<String_Comparison_Exp>;
  feedback_incorrect?: InputMaybe<String_Comparison_Exp>;
  group?: InputMaybe<String_Comparison_Exp>;
  hash?: InputMaybe<Bpchar_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  images?: InputMaybe<Json_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  lang?: InputMaybe<Bpchar_Comparison_Exp>;
  points?: InputMaybe<Int_Comparison_Exp>;
  question_quizzes?: InputMaybe<Management_Quiz_Questions_Bool_Exp>;
  required?: InputMaybe<Boolean_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "management.questions" */
export enum Management_Questions_Constraint {
  /** unique or primary key constraint */
  QuestionsPkey = 'questions_pkey'
}

/** input type for incrementing integer column in table "management.questions" */
export type Management_Questions_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  points?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "management.questions" */
export type Management_Questions_Insert_Input = {
  active?: InputMaybe<Scalars['Boolean']>;
  answer?: InputMaybe<Scalars['json']>;
  choice_images?: InputMaybe<Scalars['json']>;
  choices?: InputMaybe<Scalars['json']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  entry?: InputMaybe<Scalars['String']>;
  feedback_correct?: InputMaybe<Scalars['String']>;
  feedback_incorrect?: InputMaybe<Scalars['String']>;
  group?: InputMaybe<Scalars['String']>;
  hash?: InputMaybe<Scalars['bpchar']>;
  id?: InputMaybe<Scalars['Int']>;
  images?: InputMaybe<Scalars['json']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  lang?: InputMaybe<Scalars['bpchar']>;
  points?: InputMaybe<Scalars['Int']>;
  question_quizzes?: InputMaybe<Management_Quiz_Questions_Arr_Rel_Insert_Input>;
  required?: InputMaybe<Scalars['Boolean']>;
  state?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Management_Questions_Max_Fields = {
  __typename?: 'management_questions_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  entry?: Maybe<Scalars['String']>;
  feedback_correct?: Maybe<Scalars['String']>;
  feedback_incorrect?: Maybe<Scalars['String']>;
  group?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  points?: Maybe<Scalars['Int']>;
  state?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "management.questions" */
export type Management_Questions_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  entry?: InputMaybe<Order_By>;
  feedback_correct?: InputMaybe<Order_By>;
  feedback_incorrect?: InputMaybe<Order_By>;
  group?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Management_Questions_Min_Fields = {
  __typename?: 'management_questions_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  entry?: Maybe<Scalars['String']>;
  feedback_correct?: Maybe<Scalars['String']>;
  feedback_incorrect?: Maybe<Scalars['String']>;
  group?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  points?: Maybe<Scalars['Int']>;
  state?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "management.questions" */
export type Management_Questions_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  entry?: InputMaybe<Order_By>;
  feedback_correct?: InputMaybe<Order_By>;
  feedback_incorrect?: InputMaybe<Order_By>;
  group?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "management.questions" */
export type Management_Questions_Mutation_Response = {
  __typename?: 'management_questions_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Management_Questions>;
};

/** input type for inserting object relation for remote table "management.questions" */
export type Management_Questions_Obj_Rel_Insert_Input = {
  data: Management_Questions_Insert_Input;
  on_conflict?: InputMaybe<Management_Questions_On_Conflict>;
};

/** on conflict condition type for table "management.questions" */
export type Management_Questions_On_Conflict = {
  constraint: Management_Questions_Constraint;
  update_columns: Array<Management_Questions_Update_Column>;
  where?: InputMaybe<Management_Questions_Bool_Exp>;
};

/** ordering options when selecting data from "management.questions" */
export type Management_Questions_Order_By = {
  active?: InputMaybe<Order_By>;
  answer?: InputMaybe<Order_By>;
  choice_images?: InputMaybe<Order_By>;
  choices?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  entry?: InputMaybe<Order_By>;
  feedback_correct?: InputMaybe<Order_By>;
  feedback_incorrect?: InputMaybe<Order_By>;
  group?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  images?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  lang?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  question_quizzes_aggregate?: InputMaybe<Management_Quiz_Questions_Aggregate_Order_By>;
  required?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "management.questions" */
export type Management_Questions_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "management.questions" */
export enum Management_Questions_Select_Column {
  /** column name */
  Active = 'active',
  /** column name */
  Answer = 'answer',
  /** column name */
  ChoiceImages = 'choice_images',
  /** column name */
  Choices = 'choices',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Entry = 'entry',
  /** column name */
  FeedbackCorrect = 'feedback_correct',
  /** column name */
  FeedbackIncorrect = 'feedback_incorrect',
  /** column name */
  Group = 'group',
  /** column name */
  Hash = 'hash',
  /** column name */
  Id = 'id',
  /** column name */
  Images = 'images',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  Lang = 'lang',
  /** column name */
  Points = 'points',
  /** column name */
  Required = 'required',
  /** column name */
  State = 'state',
  /** column name */
  Title = 'title',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "management.questions" */
export type Management_Questions_Set_Input = {
  active?: InputMaybe<Scalars['Boolean']>;
  answer?: InputMaybe<Scalars['json']>;
  choice_images?: InputMaybe<Scalars['json']>;
  choices?: InputMaybe<Scalars['json']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  entry?: InputMaybe<Scalars['String']>;
  feedback_correct?: InputMaybe<Scalars['String']>;
  feedback_incorrect?: InputMaybe<Scalars['String']>;
  group?: InputMaybe<Scalars['String']>;
  hash?: InputMaybe<Scalars['bpchar']>;
  id?: InputMaybe<Scalars['Int']>;
  images?: InputMaybe<Scalars['json']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  lang?: InputMaybe<Scalars['bpchar']>;
  points?: InputMaybe<Scalars['Int']>;
  required?: InputMaybe<Scalars['Boolean']>;
  state?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Management_Questions_Stddev_Fields = {
  __typename?: 'management_questions_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "management.questions" */
export type Management_Questions_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Management_Questions_Stddev_Pop_Fields = {
  __typename?: 'management_questions_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "management.questions" */
export type Management_Questions_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Management_Questions_Stddev_Samp_Fields = {
  __typename?: 'management_questions_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "management.questions" */
export type Management_Questions_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Management_Questions_Sum_Fields = {
  __typename?: 'management_questions_sum_fields';
  id?: Maybe<Scalars['Int']>;
  points?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "management.questions" */
export type Management_Questions_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
};

/** update columns of table "management.questions" */
export enum Management_Questions_Update_Column {
  /** column name */
  Active = 'active',
  /** column name */
  Answer = 'answer',
  /** column name */
  ChoiceImages = 'choice_images',
  /** column name */
  Choices = 'choices',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Entry = 'entry',
  /** column name */
  FeedbackCorrect = 'feedback_correct',
  /** column name */
  FeedbackIncorrect = 'feedback_incorrect',
  /** column name */
  Group = 'group',
  /** column name */
  Hash = 'hash',
  /** column name */
  Id = 'id',
  /** column name */
  Images = 'images',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  Lang = 'lang',
  /** column name */
  Points = 'points',
  /** column name */
  Required = 'required',
  /** column name */
  State = 'state',
  /** column name */
  Title = 'title',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Management_Questions_Var_Pop_Fields = {
  __typename?: 'management_questions_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "management.questions" */
export type Management_Questions_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Management_Questions_Var_Samp_Fields = {
  __typename?: 'management_questions_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "management.questions" */
export type Management_Questions_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Management_Questions_Variance_Fields = {
  __typename?: 'management_questions_variance_fields';
  id?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "management.questions" */
export type Management_Questions_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
};

/** columns and relationships of "management.quiz_questions" */
export type Management_Quiz_Questions = {
  __typename?: 'management_quiz_questions';
  order?: Maybe<Scalars['Int']>;
  /** An object relationship */
  question?: Maybe<Management_Questions>;
  question_id: Scalars['Int'];
  /** An object relationship */
  quiz?: Maybe<Management_Quizzes>;
  quiz_id: Scalars['Int'];
};

/** aggregated selection of "management.quiz_questions" */
export type Management_Quiz_Questions_Aggregate = {
  __typename?: 'management_quiz_questions_aggregate';
  aggregate?: Maybe<Management_Quiz_Questions_Aggregate_Fields>;
  nodes: Array<Management_Quiz_Questions>;
};

/** aggregate fields of "management.quiz_questions" */
export type Management_Quiz_Questions_Aggregate_Fields = {
  __typename?: 'management_quiz_questions_aggregate_fields';
  avg?: Maybe<Management_Quiz_Questions_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Management_Quiz_Questions_Max_Fields>;
  min?: Maybe<Management_Quiz_Questions_Min_Fields>;
  stddev?: Maybe<Management_Quiz_Questions_Stddev_Fields>;
  stddev_pop?: Maybe<Management_Quiz_Questions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Management_Quiz_Questions_Stddev_Samp_Fields>;
  sum?: Maybe<Management_Quiz_Questions_Sum_Fields>;
  var_pop?: Maybe<Management_Quiz_Questions_Var_Pop_Fields>;
  var_samp?: Maybe<Management_Quiz_Questions_Var_Samp_Fields>;
  variance?: Maybe<Management_Quiz_Questions_Variance_Fields>;
};


/** aggregate fields of "management.quiz_questions" */
export type Management_Quiz_Questions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Management_Quiz_Questions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "management.quiz_questions" */
export type Management_Quiz_Questions_Aggregate_Order_By = {
  avg?: InputMaybe<Management_Quiz_Questions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Management_Quiz_Questions_Max_Order_By>;
  min?: InputMaybe<Management_Quiz_Questions_Min_Order_By>;
  stddev?: InputMaybe<Management_Quiz_Questions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Management_Quiz_Questions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Management_Quiz_Questions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Management_Quiz_Questions_Sum_Order_By>;
  var_pop?: InputMaybe<Management_Quiz_Questions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Management_Quiz_Questions_Var_Samp_Order_By>;
  variance?: InputMaybe<Management_Quiz_Questions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "management.quiz_questions" */
export type Management_Quiz_Questions_Arr_Rel_Insert_Input = {
  data: Array<Management_Quiz_Questions_Insert_Input>;
  on_conflict?: InputMaybe<Management_Quiz_Questions_On_Conflict>;
};

/** aggregate avg on columns */
export type Management_Quiz_Questions_Avg_Fields = {
  __typename?: 'management_quiz_questions_avg_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "management.quiz_questions" */
export type Management_Quiz_Questions_Avg_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "management.quiz_questions". All fields are combined with a logical 'AND'. */
export type Management_Quiz_Questions_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Management_Quiz_Questions_Bool_Exp>>>;
  _not?: InputMaybe<Management_Quiz_Questions_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Management_Quiz_Questions_Bool_Exp>>>;
  order?: InputMaybe<Int_Comparison_Exp>;
  question?: InputMaybe<Management_Questions_Bool_Exp>;
  question_id?: InputMaybe<Int_Comparison_Exp>;
  quiz?: InputMaybe<Management_Quizzes_Bool_Exp>;
  quiz_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "management.quiz_questions" */
export enum Management_Quiz_Questions_Constraint {
  /** unique or primary key constraint */
  QuizQuestionsPkey = 'quiz_questions_pkey'
}

/** input type for incrementing integer column in table "management.quiz_questions" */
export type Management_Quiz_Questions_Inc_Input = {
  order?: InputMaybe<Scalars['Int']>;
  question_id?: InputMaybe<Scalars['Int']>;
  quiz_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "management.quiz_questions" */
export type Management_Quiz_Questions_Insert_Input = {
  order?: InputMaybe<Scalars['Int']>;
  question?: InputMaybe<Management_Questions_Obj_Rel_Insert_Input>;
  question_id?: InputMaybe<Scalars['Int']>;
  quiz?: InputMaybe<Management_Quizzes_Obj_Rel_Insert_Input>;
  quiz_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Management_Quiz_Questions_Max_Fields = {
  __typename?: 'management_quiz_questions_max_fields';
  order?: Maybe<Scalars['Int']>;
  question_id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "management.quiz_questions" */
export type Management_Quiz_Questions_Max_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Management_Quiz_Questions_Min_Fields = {
  __typename?: 'management_quiz_questions_min_fields';
  order?: Maybe<Scalars['Int']>;
  question_id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "management.quiz_questions" */
export type Management_Quiz_Questions_Min_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "management.quiz_questions" */
export type Management_Quiz_Questions_Mutation_Response = {
  __typename?: 'management_quiz_questions_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Management_Quiz_Questions>;
};

/** input type for inserting object relation for remote table "management.quiz_questions" */
export type Management_Quiz_Questions_Obj_Rel_Insert_Input = {
  data: Management_Quiz_Questions_Insert_Input;
  on_conflict?: InputMaybe<Management_Quiz_Questions_On_Conflict>;
};

/** on conflict condition type for table "management.quiz_questions" */
export type Management_Quiz_Questions_On_Conflict = {
  constraint: Management_Quiz_Questions_Constraint;
  update_columns: Array<Management_Quiz_Questions_Update_Column>;
  where?: InputMaybe<Management_Quiz_Questions_Bool_Exp>;
};

/** ordering options when selecting data from "management.quiz_questions" */
export type Management_Quiz_Questions_Order_By = {
  order?: InputMaybe<Order_By>;
  question?: InputMaybe<Management_Questions_Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz?: InputMaybe<Management_Quizzes_Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "management.quiz_questions" */
export type Management_Quiz_Questions_Pk_Columns_Input = {
  question_id: Scalars['Int'];
  quiz_id: Scalars['Int'];
};

/** select columns of table "management.quiz_questions" */
export enum Management_Quiz_Questions_Select_Column {
  /** column name */
  Order = 'order',
  /** column name */
  QuestionId = 'question_id',
  /** column name */
  QuizId = 'quiz_id'
}

/** input type for updating data in table "management.quiz_questions" */
export type Management_Quiz_Questions_Set_Input = {
  order?: InputMaybe<Scalars['Int']>;
  question_id?: InputMaybe<Scalars['Int']>;
  quiz_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Management_Quiz_Questions_Stddev_Fields = {
  __typename?: 'management_quiz_questions_stddev_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "management.quiz_questions" */
export type Management_Quiz_Questions_Stddev_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Management_Quiz_Questions_Stddev_Pop_Fields = {
  __typename?: 'management_quiz_questions_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "management.quiz_questions" */
export type Management_Quiz_Questions_Stddev_Pop_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Management_Quiz_Questions_Stddev_Samp_Fields = {
  __typename?: 'management_quiz_questions_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "management.quiz_questions" */
export type Management_Quiz_Questions_Stddev_Samp_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Management_Quiz_Questions_Sum_Fields = {
  __typename?: 'management_quiz_questions_sum_fields';
  order?: Maybe<Scalars['Int']>;
  question_id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "management.quiz_questions" */
export type Management_Quiz_Questions_Sum_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** update columns of table "management.quiz_questions" */
export enum Management_Quiz_Questions_Update_Column {
  /** column name */
  Order = 'order',
  /** column name */
  QuestionId = 'question_id',
  /** column name */
  QuizId = 'quiz_id'
}

/** aggregate var_pop on columns */
export type Management_Quiz_Questions_Var_Pop_Fields = {
  __typename?: 'management_quiz_questions_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "management.quiz_questions" */
export type Management_Quiz_Questions_Var_Pop_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Management_Quiz_Questions_Var_Samp_Fields = {
  __typename?: 'management_quiz_questions_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "management.quiz_questions" */
export type Management_Quiz_Questions_Var_Samp_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Management_Quiz_Questions_Variance_Fields = {
  __typename?: 'management_quiz_questions_variance_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "management.quiz_questions" */
export type Management_Quiz_Questions_Variance_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "management.quiz_reviews" */
export type Management_Quiz_Reviews = {
  __typename?: 'management_quiz_reviews';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  /** An object relationship */
  quiz: Management_Quizzes;
  quiz_id: Scalars['Int'];
  /** An object relationship */
  review: Management_Reviews;
  review_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "management.quiz_reviews" */
export type Management_Quiz_Reviews_Aggregate = {
  __typename?: 'management_quiz_reviews_aggregate';
  aggregate?: Maybe<Management_Quiz_Reviews_Aggregate_Fields>;
  nodes: Array<Management_Quiz_Reviews>;
};

/** aggregate fields of "management.quiz_reviews" */
export type Management_Quiz_Reviews_Aggregate_Fields = {
  __typename?: 'management_quiz_reviews_aggregate_fields';
  avg?: Maybe<Management_Quiz_Reviews_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Management_Quiz_Reviews_Max_Fields>;
  min?: Maybe<Management_Quiz_Reviews_Min_Fields>;
  stddev?: Maybe<Management_Quiz_Reviews_Stddev_Fields>;
  stddev_pop?: Maybe<Management_Quiz_Reviews_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Management_Quiz_Reviews_Stddev_Samp_Fields>;
  sum?: Maybe<Management_Quiz_Reviews_Sum_Fields>;
  var_pop?: Maybe<Management_Quiz_Reviews_Var_Pop_Fields>;
  var_samp?: Maybe<Management_Quiz_Reviews_Var_Samp_Fields>;
  variance?: Maybe<Management_Quiz_Reviews_Variance_Fields>;
};


/** aggregate fields of "management.quiz_reviews" */
export type Management_Quiz_Reviews_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Management_Quiz_Reviews_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "management.quiz_reviews" */
export type Management_Quiz_Reviews_Aggregate_Order_By = {
  avg?: InputMaybe<Management_Quiz_Reviews_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Management_Quiz_Reviews_Max_Order_By>;
  min?: InputMaybe<Management_Quiz_Reviews_Min_Order_By>;
  stddev?: InputMaybe<Management_Quiz_Reviews_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Management_Quiz_Reviews_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Management_Quiz_Reviews_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Management_Quiz_Reviews_Sum_Order_By>;
  var_pop?: InputMaybe<Management_Quiz_Reviews_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Management_Quiz_Reviews_Var_Samp_Order_By>;
  variance?: InputMaybe<Management_Quiz_Reviews_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "management.quiz_reviews" */
export type Management_Quiz_Reviews_Arr_Rel_Insert_Input = {
  data: Array<Management_Quiz_Reviews_Insert_Input>;
  on_conflict?: InputMaybe<Management_Quiz_Reviews_On_Conflict>;
};

/** aggregate avg on columns */
export type Management_Quiz_Reviews_Avg_Fields = {
  __typename?: 'management_quiz_reviews_avg_fields';
  id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "management.quiz_reviews" */
export type Management_Quiz_Reviews_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "management.quiz_reviews". All fields are combined with a logical 'AND'. */
export type Management_Quiz_Reviews_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Management_Quiz_Reviews_Bool_Exp>>>;
  _not?: InputMaybe<Management_Quiz_Reviews_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Management_Quiz_Reviews_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  quiz?: InputMaybe<Management_Quizzes_Bool_Exp>;
  quiz_id?: InputMaybe<Int_Comparison_Exp>;
  review?: InputMaybe<Management_Reviews_Bool_Exp>;
  review_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "management.quiz_reviews" */
export enum Management_Quiz_Reviews_Constraint {
  /** unique or primary key constraint */
  QuizReviewsPkey = 'quiz_reviews_pkey'
}

/** input type for incrementing integer column in table "management.quiz_reviews" */
export type Management_Quiz_Reviews_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  quiz_id?: InputMaybe<Scalars['Int']>;
  review_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "management.quiz_reviews" */
export type Management_Quiz_Reviews_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  quiz?: InputMaybe<Management_Quizzes_Obj_Rel_Insert_Input>;
  quiz_id?: InputMaybe<Scalars['Int']>;
  review?: InputMaybe<Management_Reviews_Obj_Rel_Insert_Input>;
  review_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Management_Quiz_Reviews_Max_Fields = {
  __typename?: 'management_quiz_reviews_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
  review_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "management.quiz_reviews" */
export type Management_Quiz_Reviews_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Management_Quiz_Reviews_Min_Fields = {
  __typename?: 'management_quiz_reviews_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
  review_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "management.quiz_reviews" */
export type Management_Quiz_Reviews_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "management.quiz_reviews" */
export type Management_Quiz_Reviews_Mutation_Response = {
  __typename?: 'management_quiz_reviews_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Management_Quiz_Reviews>;
};

/** input type for inserting object relation for remote table "management.quiz_reviews" */
export type Management_Quiz_Reviews_Obj_Rel_Insert_Input = {
  data: Management_Quiz_Reviews_Insert_Input;
  on_conflict?: InputMaybe<Management_Quiz_Reviews_On_Conflict>;
};

/** on conflict condition type for table "management.quiz_reviews" */
export type Management_Quiz_Reviews_On_Conflict = {
  constraint: Management_Quiz_Reviews_Constraint;
  update_columns: Array<Management_Quiz_Reviews_Update_Column>;
  where?: InputMaybe<Management_Quiz_Reviews_Bool_Exp>;
};

/** ordering options when selecting data from "management.quiz_reviews" */
export type Management_Quiz_Reviews_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  quiz?: InputMaybe<Management_Quizzes_Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  review?: InputMaybe<Management_Reviews_Order_By>;
  review_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "management.quiz_reviews" */
export type Management_Quiz_Reviews_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "management.quiz_reviews" */
export enum Management_Quiz_Reviews_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  QuizId = 'quiz_id',
  /** column name */
  ReviewId = 'review_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "management.quiz_reviews" */
export type Management_Quiz_Reviews_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  quiz_id?: InputMaybe<Scalars['Int']>;
  review_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Management_Quiz_Reviews_Stddev_Fields = {
  __typename?: 'management_quiz_reviews_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "management.quiz_reviews" */
export type Management_Quiz_Reviews_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Management_Quiz_Reviews_Stddev_Pop_Fields = {
  __typename?: 'management_quiz_reviews_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "management.quiz_reviews" */
export type Management_Quiz_Reviews_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Management_Quiz_Reviews_Stddev_Samp_Fields = {
  __typename?: 'management_quiz_reviews_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "management.quiz_reviews" */
export type Management_Quiz_Reviews_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Management_Quiz_Reviews_Sum_Fields = {
  __typename?: 'management_quiz_reviews_sum_fields';
  id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
  review_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "management.quiz_reviews" */
export type Management_Quiz_Reviews_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** update columns of table "management.quiz_reviews" */
export enum Management_Quiz_Reviews_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  QuizId = 'quiz_id',
  /** column name */
  ReviewId = 'review_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Management_Quiz_Reviews_Var_Pop_Fields = {
  __typename?: 'management_quiz_reviews_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "management.quiz_reviews" */
export type Management_Quiz_Reviews_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Management_Quiz_Reviews_Var_Samp_Fields = {
  __typename?: 'management_quiz_reviews_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "management.quiz_reviews" */
export type Management_Quiz_Reviews_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Management_Quiz_Reviews_Variance_Fields = {
  __typename?: 'management_quiz_reviews_variance_fields';
  id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "management.quiz_reviews" */
export type Management_Quiz_Reviews_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "management.quizzes" */
export type Management_Quizzes = {
  __typename?: 'management_quizzes';
  attribution?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  ingest_id: Scalars['String'];
  /** ISO 639-1 */
  lang?: Maybe<Scalars['bpchar']>;
  max_points?: Maybe<Scalars['Int']>;
  /** An array relationship */
  quiz_lessons: Array<Management_Lesson_Quizzes>;
  /** An aggregated array relationship */
  quiz_lessons_aggregate: Management_Lesson_Quizzes_Aggregate;
  /** An array relationship */
  quiz_questions: Array<Management_Quiz_Questions>;
  /** An aggregated array relationship */
  quiz_questions_aggregate: Management_Quiz_Questions_Aggregate;
  /** An array relationship */
  quiz_reviews: Array<Management_Quiz_Reviews>;
  /** An aggregated array relationship */
  quiz_reviews_aggregate: Management_Quiz_Reviews_Aggregate;
  source?: Maybe<Scalars['String']>;
  state: Scalars['String'];
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "management.quizzes" */
export type Management_QuizzesQuiz_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Management_Lesson_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lesson_Quizzes_Order_By>>;
  where?: InputMaybe<Management_Lesson_Quizzes_Bool_Exp>;
};


/** columns and relationships of "management.quizzes" */
export type Management_QuizzesQuiz_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Lesson_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lesson_Quizzes_Order_By>>;
  where?: InputMaybe<Management_Lesson_Quizzes_Bool_Exp>;
};


/** columns and relationships of "management.quizzes" */
export type Management_QuizzesQuiz_QuestionsArgs = {
  distinct_on?: InputMaybe<Array<Management_Quiz_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quiz_Questions_Order_By>>;
  where?: InputMaybe<Management_Quiz_Questions_Bool_Exp>;
};


/** columns and relationships of "management.quizzes" */
export type Management_QuizzesQuiz_Questions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Quiz_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quiz_Questions_Order_By>>;
  where?: InputMaybe<Management_Quiz_Questions_Bool_Exp>;
};


/** columns and relationships of "management.quizzes" */
export type Management_QuizzesQuiz_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Quiz_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quiz_Reviews_Order_By>>;
  where?: InputMaybe<Management_Quiz_Reviews_Bool_Exp>;
};


/** columns and relationships of "management.quizzes" */
export type Management_QuizzesQuiz_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Quiz_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quiz_Reviews_Order_By>>;
  where?: InputMaybe<Management_Quiz_Reviews_Bool_Exp>;
};

/** aggregated selection of "management.quizzes" */
export type Management_Quizzes_Aggregate = {
  __typename?: 'management_quizzes_aggregate';
  aggregate?: Maybe<Management_Quizzes_Aggregate_Fields>;
  nodes: Array<Management_Quizzes>;
};

/** aggregate fields of "management.quizzes" */
export type Management_Quizzes_Aggregate_Fields = {
  __typename?: 'management_quizzes_aggregate_fields';
  avg?: Maybe<Management_Quizzes_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Management_Quizzes_Max_Fields>;
  min?: Maybe<Management_Quizzes_Min_Fields>;
  stddev?: Maybe<Management_Quizzes_Stddev_Fields>;
  stddev_pop?: Maybe<Management_Quizzes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Management_Quizzes_Stddev_Samp_Fields>;
  sum?: Maybe<Management_Quizzes_Sum_Fields>;
  var_pop?: Maybe<Management_Quizzes_Var_Pop_Fields>;
  var_samp?: Maybe<Management_Quizzes_Var_Samp_Fields>;
  variance?: Maybe<Management_Quizzes_Variance_Fields>;
};


/** aggregate fields of "management.quizzes" */
export type Management_Quizzes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Management_Quizzes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "management.quizzes" */
export type Management_Quizzes_Aggregate_Order_By = {
  avg?: InputMaybe<Management_Quizzes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Management_Quizzes_Max_Order_By>;
  min?: InputMaybe<Management_Quizzes_Min_Order_By>;
  stddev?: InputMaybe<Management_Quizzes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Management_Quizzes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Management_Quizzes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Management_Quizzes_Sum_Order_By>;
  var_pop?: InputMaybe<Management_Quizzes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Management_Quizzes_Var_Samp_Order_By>;
  variance?: InputMaybe<Management_Quizzes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "management.quizzes" */
export type Management_Quizzes_Arr_Rel_Insert_Input = {
  data: Array<Management_Quizzes_Insert_Input>;
  on_conflict?: InputMaybe<Management_Quizzes_On_Conflict>;
};

/** aggregate avg on columns */
export type Management_Quizzes_Avg_Fields = {
  __typename?: 'management_quizzes_avg_fields';
  id?: Maybe<Scalars['Float']>;
  max_points?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "management.quizzes" */
export type Management_Quizzes_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "management.quizzes". All fields are combined with a logical 'AND'. */
export type Management_Quizzes_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Management_Quizzes_Bool_Exp>>>;
  _not?: InputMaybe<Management_Quizzes_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Management_Quizzes_Bool_Exp>>>;
  attribution?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  lang?: InputMaybe<Bpchar_Comparison_Exp>;
  max_points?: InputMaybe<Int_Comparison_Exp>;
  quiz_lessons?: InputMaybe<Management_Lesson_Quizzes_Bool_Exp>;
  quiz_questions?: InputMaybe<Management_Quiz_Questions_Bool_Exp>;
  quiz_reviews?: InputMaybe<Management_Quiz_Reviews_Bool_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "management.quizzes" */
export enum Management_Quizzes_Constraint {
  /** unique or primary key constraint */
  QuizzesPkey = 'quizzes_pkey'
}

/** input type for incrementing integer column in table "management.quizzes" */
export type Management_Quizzes_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  max_points?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "management.quizzes" */
export type Management_Quizzes_Insert_Input = {
  attribution?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  lang?: InputMaybe<Scalars['bpchar']>;
  max_points?: InputMaybe<Scalars['Int']>;
  quiz_lessons?: InputMaybe<Management_Lesson_Quizzes_Arr_Rel_Insert_Input>;
  quiz_questions?: InputMaybe<Management_Quiz_Questions_Arr_Rel_Insert_Input>;
  quiz_reviews?: InputMaybe<Management_Quiz_Reviews_Arr_Rel_Insert_Input>;
  source?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Management_Quizzes_Max_Fields = {
  __typename?: 'management_quizzes_max_fields';
  attribution?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  max_points?: Maybe<Scalars['Int']>;
  source?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "management.quizzes" */
export type Management_Quizzes_Max_Order_By = {
  attribution?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Management_Quizzes_Min_Fields = {
  __typename?: 'management_quizzes_min_fields';
  attribution?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  max_points?: Maybe<Scalars['Int']>;
  source?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "management.quizzes" */
export type Management_Quizzes_Min_Order_By = {
  attribution?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "management.quizzes" */
export type Management_Quizzes_Mutation_Response = {
  __typename?: 'management_quizzes_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Management_Quizzes>;
};

/** input type for inserting object relation for remote table "management.quizzes" */
export type Management_Quizzes_Obj_Rel_Insert_Input = {
  data: Management_Quizzes_Insert_Input;
  on_conflict?: InputMaybe<Management_Quizzes_On_Conflict>;
};

/** on conflict condition type for table "management.quizzes" */
export type Management_Quizzes_On_Conflict = {
  constraint: Management_Quizzes_Constraint;
  update_columns: Array<Management_Quizzes_Update_Column>;
  where?: InputMaybe<Management_Quizzes_Bool_Exp>;
};

/** ordering options when selecting data from "management.quizzes" */
export type Management_Quizzes_Order_By = {
  attribution?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  lang?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
  quiz_lessons_aggregate?: InputMaybe<Management_Lesson_Quizzes_Aggregate_Order_By>;
  quiz_questions_aggregate?: InputMaybe<Management_Quiz_Questions_Aggregate_Order_By>;
  quiz_reviews_aggregate?: InputMaybe<Management_Quiz_Reviews_Aggregate_Order_By>;
  source?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "management.quizzes" */
export type Management_Quizzes_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "management.quizzes" */
export enum Management_Quizzes_Select_Column {
  /** column name */
  Attribution = 'attribution',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  Lang = 'lang',
  /** column name */
  MaxPoints = 'max_points',
  /** column name */
  Source = 'source',
  /** column name */
  State = 'state',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "management.quizzes" */
export type Management_Quizzes_Set_Input = {
  attribution?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  lang?: InputMaybe<Scalars['bpchar']>;
  max_points?: InputMaybe<Scalars['Int']>;
  source?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Management_Quizzes_Stddev_Fields = {
  __typename?: 'management_quizzes_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  max_points?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "management.quizzes" */
export type Management_Quizzes_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Management_Quizzes_Stddev_Pop_Fields = {
  __typename?: 'management_quizzes_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  max_points?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "management.quizzes" */
export type Management_Quizzes_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Management_Quizzes_Stddev_Samp_Fields = {
  __typename?: 'management_quizzes_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  max_points?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "management.quizzes" */
export type Management_Quizzes_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Management_Quizzes_Sum_Fields = {
  __typename?: 'management_quizzes_sum_fields';
  id?: Maybe<Scalars['Int']>;
  max_points?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "management.quizzes" */
export type Management_Quizzes_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
};

/** update columns of table "management.quizzes" */
export enum Management_Quizzes_Update_Column {
  /** column name */
  Attribution = 'attribution',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  Lang = 'lang',
  /** column name */
  MaxPoints = 'max_points',
  /** column name */
  Source = 'source',
  /** column name */
  State = 'state',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Management_Quizzes_Var_Pop_Fields = {
  __typename?: 'management_quizzes_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  max_points?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "management.quizzes" */
export type Management_Quizzes_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Management_Quizzes_Var_Samp_Fields = {
  __typename?: 'management_quizzes_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  max_points?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "management.quizzes" */
export type Management_Quizzes_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Management_Quizzes_Variance_Fields = {
  __typename?: 'management_quizzes_variance_fields';
  id?: Maybe<Scalars['Float']>;
  max_points?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "management.quizzes" */
export type Management_Quizzes_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
};

/** columns and relationships of "management.reviews" */
export type Management_Reviews = {
  __typename?: 'management_reviews';
  /** An array relationship */
  asset_reviews: Array<Management_Asset_Reviews>;
  /** An aggregated array relationship */
  asset_reviews_aggregate: Management_Asset_Reviews_Aggregate;
  category?: Maybe<Scalars['String']>;
  comments?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['Int'];
  /** An array relationship */
  lesson_reviews: Array<Management_Lesson_Reviews>;
  /** An aggregated array relationship */
  lesson_reviews_aggregate: Management_Lesson_Reviews_Aggregate;
  outcome: Scalars['String'];
  /** An array relationship */
  quiz_reviews: Array<Management_Quiz_Reviews>;
  /** An aggregated array relationship */
  quiz_reviews_aggregate: Management_Quiz_Reviews_Aggregate;
  reviewer_email?: Maybe<Scalars['String']>;
  score?: Maybe<Scalars['Int']>;
  status: Scalars['String'];
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  video_reviews: Array<Management_Video_Reviews>;
  /** An aggregated array relationship */
  video_reviews_aggregate: Management_Video_Reviews_Aggregate;
};


/** columns and relationships of "management.reviews" */
export type Management_ReviewsAsset_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Asset_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Asset_Reviews_Order_By>>;
  where?: InputMaybe<Management_Asset_Reviews_Bool_Exp>;
};


/** columns and relationships of "management.reviews" */
export type Management_ReviewsAsset_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Asset_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Asset_Reviews_Order_By>>;
  where?: InputMaybe<Management_Asset_Reviews_Bool_Exp>;
};


/** columns and relationships of "management.reviews" */
export type Management_ReviewsLesson_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Lesson_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lesson_Reviews_Order_By>>;
  where?: InputMaybe<Management_Lesson_Reviews_Bool_Exp>;
};


/** columns and relationships of "management.reviews" */
export type Management_ReviewsLesson_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Lesson_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lesson_Reviews_Order_By>>;
  where?: InputMaybe<Management_Lesson_Reviews_Bool_Exp>;
};


/** columns and relationships of "management.reviews" */
export type Management_ReviewsQuiz_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Quiz_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quiz_Reviews_Order_By>>;
  where?: InputMaybe<Management_Quiz_Reviews_Bool_Exp>;
};


/** columns and relationships of "management.reviews" */
export type Management_ReviewsQuiz_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Quiz_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quiz_Reviews_Order_By>>;
  where?: InputMaybe<Management_Quiz_Reviews_Bool_Exp>;
};


/** columns and relationships of "management.reviews" */
export type Management_ReviewsVideo_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Video_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Video_Reviews_Order_By>>;
  where?: InputMaybe<Management_Video_Reviews_Bool_Exp>;
};


/** columns and relationships of "management.reviews" */
export type Management_ReviewsVideo_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Video_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Video_Reviews_Order_By>>;
  where?: InputMaybe<Management_Video_Reviews_Bool_Exp>;
};

/** aggregated selection of "management.reviews" */
export type Management_Reviews_Aggregate = {
  __typename?: 'management_reviews_aggregate';
  aggregate?: Maybe<Management_Reviews_Aggregate_Fields>;
  nodes: Array<Management_Reviews>;
};

/** aggregate fields of "management.reviews" */
export type Management_Reviews_Aggregate_Fields = {
  __typename?: 'management_reviews_aggregate_fields';
  avg?: Maybe<Management_Reviews_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Management_Reviews_Max_Fields>;
  min?: Maybe<Management_Reviews_Min_Fields>;
  stddev?: Maybe<Management_Reviews_Stddev_Fields>;
  stddev_pop?: Maybe<Management_Reviews_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Management_Reviews_Stddev_Samp_Fields>;
  sum?: Maybe<Management_Reviews_Sum_Fields>;
  var_pop?: Maybe<Management_Reviews_Var_Pop_Fields>;
  var_samp?: Maybe<Management_Reviews_Var_Samp_Fields>;
  variance?: Maybe<Management_Reviews_Variance_Fields>;
};


/** aggregate fields of "management.reviews" */
export type Management_Reviews_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Management_Reviews_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "management.reviews" */
export type Management_Reviews_Aggregate_Order_By = {
  avg?: InputMaybe<Management_Reviews_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Management_Reviews_Max_Order_By>;
  min?: InputMaybe<Management_Reviews_Min_Order_By>;
  stddev?: InputMaybe<Management_Reviews_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Management_Reviews_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Management_Reviews_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Management_Reviews_Sum_Order_By>;
  var_pop?: InputMaybe<Management_Reviews_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Management_Reviews_Var_Samp_Order_By>;
  variance?: InputMaybe<Management_Reviews_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "management.reviews" */
export type Management_Reviews_Arr_Rel_Insert_Input = {
  data: Array<Management_Reviews_Insert_Input>;
  on_conflict?: InputMaybe<Management_Reviews_On_Conflict>;
};

/** aggregate avg on columns */
export type Management_Reviews_Avg_Fields = {
  __typename?: 'management_reviews_avg_fields';
  id?: Maybe<Scalars['Float']>;
  score?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "management.reviews" */
export type Management_Reviews_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "management.reviews". All fields are combined with a logical 'AND'. */
export type Management_Reviews_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Management_Reviews_Bool_Exp>>>;
  _not?: InputMaybe<Management_Reviews_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Management_Reviews_Bool_Exp>>>;
  asset_reviews?: InputMaybe<Management_Asset_Reviews_Bool_Exp>;
  category?: InputMaybe<String_Comparison_Exp>;
  comments?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  lesson_reviews?: InputMaybe<Management_Lesson_Reviews_Bool_Exp>;
  outcome?: InputMaybe<String_Comparison_Exp>;
  quiz_reviews?: InputMaybe<Management_Quiz_Reviews_Bool_Exp>;
  reviewer_email?: InputMaybe<String_Comparison_Exp>;
  score?: InputMaybe<Int_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  video_reviews?: InputMaybe<Management_Video_Reviews_Bool_Exp>;
};

/** unique or primary key constraints on table "management.reviews" */
export enum Management_Reviews_Constraint {
  /** unique or primary key constraint */
  ReviewsPkey = 'reviews_pkey'
}

/** input type for incrementing integer column in table "management.reviews" */
export type Management_Reviews_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  score?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "management.reviews" */
export type Management_Reviews_Insert_Input = {
  asset_reviews?: InputMaybe<Management_Asset_Reviews_Arr_Rel_Insert_Input>;
  category?: InputMaybe<Scalars['String']>;
  comments?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  lesson_reviews?: InputMaybe<Management_Lesson_Reviews_Arr_Rel_Insert_Input>;
  outcome?: InputMaybe<Scalars['String']>;
  quiz_reviews?: InputMaybe<Management_Quiz_Reviews_Arr_Rel_Insert_Input>;
  reviewer_email?: InputMaybe<Scalars['String']>;
  score?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  video_reviews?: InputMaybe<Management_Video_Reviews_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Management_Reviews_Max_Fields = {
  __typename?: 'management_reviews_max_fields';
  category?: Maybe<Scalars['String']>;
  comments?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  outcome?: Maybe<Scalars['String']>;
  reviewer_email?: Maybe<Scalars['String']>;
  score?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "management.reviews" */
export type Management_Reviews_Max_Order_By = {
  category?: InputMaybe<Order_By>;
  comments?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  outcome?: InputMaybe<Order_By>;
  reviewer_email?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Management_Reviews_Min_Fields = {
  __typename?: 'management_reviews_min_fields';
  category?: Maybe<Scalars['String']>;
  comments?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  outcome?: Maybe<Scalars['String']>;
  reviewer_email?: Maybe<Scalars['String']>;
  score?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "management.reviews" */
export type Management_Reviews_Min_Order_By = {
  category?: InputMaybe<Order_By>;
  comments?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  outcome?: InputMaybe<Order_By>;
  reviewer_email?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "management.reviews" */
export type Management_Reviews_Mutation_Response = {
  __typename?: 'management_reviews_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Management_Reviews>;
};

/** input type for inserting object relation for remote table "management.reviews" */
export type Management_Reviews_Obj_Rel_Insert_Input = {
  data: Management_Reviews_Insert_Input;
  on_conflict?: InputMaybe<Management_Reviews_On_Conflict>;
};

/** on conflict condition type for table "management.reviews" */
export type Management_Reviews_On_Conflict = {
  constraint: Management_Reviews_Constraint;
  update_columns: Array<Management_Reviews_Update_Column>;
  where?: InputMaybe<Management_Reviews_Bool_Exp>;
};

/** ordering options when selecting data from "management.reviews" */
export type Management_Reviews_Order_By = {
  asset_reviews_aggregate?: InputMaybe<Management_Asset_Reviews_Aggregate_Order_By>;
  category?: InputMaybe<Order_By>;
  comments?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_reviews_aggregate?: InputMaybe<Management_Lesson_Reviews_Aggregate_Order_By>;
  outcome?: InputMaybe<Order_By>;
  quiz_reviews_aggregate?: InputMaybe<Management_Quiz_Reviews_Aggregate_Order_By>;
  reviewer_email?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  video_reviews_aggregate?: InputMaybe<Management_Video_Reviews_Aggregate_Order_By>;
};

/** primary key columns input for table: "management.reviews" */
export type Management_Reviews_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "management.reviews" */
export enum Management_Reviews_Select_Column {
  /** column name */
  Category = 'category',
  /** column name */
  Comments = 'comments',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Outcome = 'outcome',
  /** column name */
  ReviewerEmail = 'reviewer_email',
  /** column name */
  Score = 'score',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "management.reviews" */
export type Management_Reviews_Set_Input = {
  category?: InputMaybe<Scalars['String']>;
  comments?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  outcome?: InputMaybe<Scalars['String']>;
  reviewer_email?: InputMaybe<Scalars['String']>;
  score?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Management_Reviews_Stddev_Fields = {
  __typename?: 'management_reviews_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  score?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "management.reviews" */
export type Management_Reviews_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Management_Reviews_Stddev_Pop_Fields = {
  __typename?: 'management_reviews_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  score?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "management.reviews" */
export type Management_Reviews_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Management_Reviews_Stddev_Samp_Fields = {
  __typename?: 'management_reviews_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  score?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "management.reviews" */
export type Management_Reviews_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Management_Reviews_Sum_Fields = {
  __typename?: 'management_reviews_sum_fields';
  id?: Maybe<Scalars['Int']>;
  score?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "management.reviews" */
export type Management_Reviews_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
};

/** update columns of table "management.reviews" */
export enum Management_Reviews_Update_Column {
  /** column name */
  Category = 'category',
  /** column name */
  Comments = 'comments',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Outcome = 'outcome',
  /** column name */
  ReviewerEmail = 'reviewer_email',
  /** column name */
  Score = 'score',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Management_Reviews_Var_Pop_Fields = {
  __typename?: 'management_reviews_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  score?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "management.reviews" */
export type Management_Reviews_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Management_Reviews_Var_Samp_Fields = {
  __typename?: 'management_reviews_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  score?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "management.reviews" */
export type Management_Reviews_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Management_Reviews_Variance_Fields = {
  __typename?: 'management_reviews_variance_fields';
  id?: Maybe<Scalars['Float']>;
  score?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "management.reviews" */
export type Management_Reviews_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  score?: InputMaybe<Order_By>;
};

/** columns and relationships of "management.unit_lessons" */
export type Management_Unit_Lessons = {
  __typename?: 'management_unit_lessons';
  created_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['Int'];
  intro_quiz_url?: Maybe<Scalars['String']>;
  /** An object relationship */
  lesson: Management_Lessons;
  lesson_id: Scalars['Int'];
  position_in_unit: Scalars['Int'];
  /** An object relationship */
  unit: Units;
  unit_id: Scalars['Int'];
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "management.unit_lessons" */
export type Management_Unit_Lessons_Aggregate = {
  __typename?: 'management_unit_lessons_aggregate';
  aggregate?: Maybe<Management_Unit_Lessons_Aggregate_Fields>;
  nodes: Array<Management_Unit_Lessons>;
};

/** aggregate fields of "management.unit_lessons" */
export type Management_Unit_Lessons_Aggregate_Fields = {
  __typename?: 'management_unit_lessons_aggregate_fields';
  avg?: Maybe<Management_Unit_Lessons_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Management_Unit_Lessons_Max_Fields>;
  min?: Maybe<Management_Unit_Lessons_Min_Fields>;
  stddev?: Maybe<Management_Unit_Lessons_Stddev_Fields>;
  stddev_pop?: Maybe<Management_Unit_Lessons_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Management_Unit_Lessons_Stddev_Samp_Fields>;
  sum?: Maybe<Management_Unit_Lessons_Sum_Fields>;
  var_pop?: Maybe<Management_Unit_Lessons_Var_Pop_Fields>;
  var_samp?: Maybe<Management_Unit_Lessons_Var_Samp_Fields>;
  variance?: Maybe<Management_Unit_Lessons_Variance_Fields>;
};


/** aggregate fields of "management.unit_lessons" */
export type Management_Unit_Lessons_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Management_Unit_Lessons_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "management.unit_lessons" */
export type Management_Unit_Lessons_Aggregate_Order_By = {
  avg?: InputMaybe<Management_Unit_Lessons_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Management_Unit_Lessons_Max_Order_By>;
  min?: InputMaybe<Management_Unit_Lessons_Min_Order_By>;
  stddev?: InputMaybe<Management_Unit_Lessons_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Management_Unit_Lessons_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Management_Unit_Lessons_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Management_Unit_Lessons_Sum_Order_By>;
  var_pop?: InputMaybe<Management_Unit_Lessons_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Management_Unit_Lessons_Var_Samp_Order_By>;
  variance?: InputMaybe<Management_Unit_Lessons_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "management.unit_lessons" */
export type Management_Unit_Lessons_Arr_Rel_Insert_Input = {
  data: Array<Management_Unit_Lessons_Insert_Input>;
  on_conflict?: InputMaybe<Management_Unit_Lessons_On_Conflict>;
};

/** aggregate avg on columns */
export type Management_Unit_Lessons_Avg_Fields = {
  __typename?: 'management_unit_lessons_avg_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  position_in_unit?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "management.unit_lessons" */
export type Management_Unit_Lessons_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "management.unit_lessons". All fields are combined with a logical 'AND'. */
export type Management_Unit_Lessons_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Management_Unit_Lessons_Bool_Exp>>>;
  _not?: InputMaybe<Management_Unit_Lessons_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Management_Unit_Lessons_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  intro_quiz_url?: InputMaybe<String_Comparison_Exp>;
  lesson?: InputMaybe<Management_Lessons_Bool_Exp>;
  lesson_id?: InputMaybe<Int_Comparison_Exp>;
  position_in_unit?: InputMaybe<Int_Comparison_Exp>;
  unit?: InputMaybe<Units_Bool_Exp>;
  unit_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "management.unit_lessons" */
export enum Management_Unit_Lessons_Constraint {
  /** unique or primary key constraint */
  UnitLessonsPkey = 'unit_lessons_pkey'
}

/** input type for incrementing integer column in table "management.unit_lessons" */
export type Management_Unit_Lessons_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  position_in_unit?: InputMaybe<Scalars['Int']>;
  unit_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "management.unit_lessons" */
export type Management_Unit_Lessons_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  intro_quiz_url?: InputMaybe<Scalars['String']>;
  lesson?: InputMaybe<Management_Lessons_Obj_Rel_Insert_Input>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  position_in_unit?: InputMaybe<Scalars['Int']>;
  unit?: InputMaybe<Units_Obj_Rel_Insert_Input>;
  unit_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Management_Unit_Lessons_Max_Fields = {
  __typename?: 'management_unit_lessons_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  intro_quiz_url?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['Int']>;
  position_in_unit?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "management.unit_lessons" */
export type Management_Unit_Lessons_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  intro_quiz_url?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Management_Unit_Lessons_Min_Fields = {
  __typename?: 'management_unit_lessons_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  intro_quiz_url?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['Int']>;
  position_in_unit?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "management.unit_lessons" */
export type Management_Unit_Lessons_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  intro_quiz_url?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "management.unit_lessons" */
export type Management_Unit_Lessons_Mutation_Response = {
  __typename?: 'management_unit_lessons_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Management_Unit_Lessons>;
};

/** input type for inserting object relation for remote table "management.unit_lessons" */
export type Management_Unit_Lessons_Obj_Rel_Insert_Input = {
  data: Management_Unit_Lessons_Insert_Input;
  on_conflict?: InputMaybe<Management_Unit_Lessons_On_Conflict>;
};

/** on conflict condition type for table "management.unit_lessons" */
export type Management_Unit_Lessons_On_Conflict = {
  constraint: Management_Unit_Lessons_Constraint;
  update_columns: Array<Management_Unit_Lessons_Update_Column>;
  where?: InputMaybe<Management_Unit_Lessons_Bool_Exp>;
};

/** ordering options when selecting data from "management.unit_lessons" */
export type Management_Unit_Lessons_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  intro_quiz_url?: InputMaybe<Order_By>;
  lesson?: InputMaybe<Management_Lessons_Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit?: InputMaybe<Units_Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "management.unit_lessons" */
export type Management_Unit_Lessons_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "management.unit_lessons" */
export enum Management_Unit_Lessons_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IntroQuizUrl = 'intro_quiz_url',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  PositionInUnit = 'position_in_unit',
  /** column name */
  UnitId = 'unit_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "management.unit_lessons" */
export type Management_Unit_Lessons_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  intro_quiz_url?: InputMaybe<Scalars['String']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  position_in_unit?: InputMaybe<Scalars['Int']>;
  unit_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Management_Unit_Lessons_Stddev_Fields = {
  __typename?: 'management_unit_lessons_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  position_in_unit?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "management.unit_lessons" */
export type Management_Unit_Lessons_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Management_Unit_Lessons_Stddev_Pop_Fields = {
  __typename?: 'management_unit_lessons_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  position_in_unit?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "management.unit_lessons" */
export type Management_Unit_Lessons_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Management_Unit_Lessons_Stddev_Samp_Fields = {
  __typename?: 'management_unit_lessons_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  position_in_unit?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "management.unit_lessons" */
export type Management_Unit_Lessons_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Management_Unit_Lessons_Sum_Fields = {
  __typename?: 'management_unit_lessons_sum_fields';
  id?: Maybe<Scalars['Int']>;
  lesson_id?: Maybe<Scalars['Int']>;
  position_in_unit?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "management.unit_lessons" */
export type Management_Unit_Lessons_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** update columns of table "management.unit_lessons" */
export enum Management_Unit_Lessons_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IntroQuizUrl = 'intro_quiz_url',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  PositionInUnit = 'position_in_unit',
  /** column name */
  UnitId = 'unit_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Management_Unit_Lessons_Var_Pop_Fields = {
  __typename?: 'management_unit_lessons_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  position_in_unit?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "management.unit_lessons" */
export type Management_Unit_Lessons_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Management_Unit_Lessons_Var_Samp_Fields = {
  __typename?: 'management_unit_lessons_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  position_in_unit?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "management.unit_lessons" */
export type Management_Unit_Lessons_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Management_Unit_Lessons_Variance_Fields = {
  __typename?: 'management_unit_lessons_variance_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  position_in_unit?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "management.unit_lessons" */
export type Management_Unit_Lessons_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "management.video_reviews" */
export type Management_Video_Reviews = {
  __typename?: 'management_video_reviews';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  /** An object relationship */
  review: Management_Reviews;
  review_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  video: Management_Videos;
  video_id: Scalars['uuid'];
};

/** aggregated selection of "management.video_reviews" */
export type Management_Video_Reviews_Aggregate = {
  __typename?: 'management_video_reviews_aggregate';
  aggregate?: Maybe<Management_Video_Reviews_Aggregate_Fields>;
  nodes: Array<Management_Video_Reviews>;
};

/** aggregate fields of "management.video_reviews" */
export type Management_Video_Reviews_Aggregate_Fields = {
  __typename?: 'management_video_reviews_aggregate_fields';
  avg?: Maybe<Management_Video_Reviews_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Management_Video_Reviews_Max_Fields>;
  min?: Maybe<Management_Video_Reviews_Min_Fields>;
  stddev?: Maybe<Management_Video_Reviews_Stddev_Fields>;
  stddev_pop?: Maybe<Management_Video_Reviews_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Management_Video_Reviews_Stddev_Samp_Fields>;
  sum?: Maybe<Management_Video_Reviews_Sum_Fields>;
  var_pop?: Maybe<Management_Video_Reviews_Var_Pop_Fields>;
  var_samp?: Maybe<Management_Video_Reviews_Var_Samp_Fields>;
  variance?: Maybe<Management_Video_Reviews_Variance_Fields>;
};


/** aggregate fields of "management.video_reviews" */
export type Management_Video_Reviews_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Management_Video_Reviews_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "management.video_reviews" */
export type Management_Video_Reviews_Aggregate_Order_By = {
  avg?: InputMaybe<Management_Video_Reviews_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Management_Video_Reviews_Max_Order_By>;
  min?: InputMaybe<Management_Video_Reviews_Min_Order_By>;
  stddev?: InputMaybe<Management_Video_Reviews_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Management_Video_Reviews_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Management_Video_Reviews_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Management_Video_Reviews_Sum_Order_By>;
  var_pop?: InputMaybe<Management_Video_Reviews_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Management_Video_Reviews_Var_Samp_Order_By>;
  variance?: InputMaybe<Management_Video_Reviews_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "management.video_reviews" */
export type Management_Video_Reviews_Arr_Rel_Insert_Input = {
  data: Array<Management_Video_Reviews_Insert_Input>;
  on_conflict?: InputMaybe<Management_Video_Reviews_On_Conflict>;
};

/** aggregate avg on columns */
export type Management_Video_Reviews_Avg_Fields = {
  __typename?: 'management_video_reviews_avg_fields';
  id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "management.video_reviews" */
export type Management_Video_Reviews_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "management.video_reviews". All fields are combined with a logical 'AND'. */
export type Management_Video_Reviews_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Management_Video_Reviews_Bool_Exp>>>;
  _not?: InputMaybe<Management_Video_Reviews_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Management_Video_Reviews_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  review?: InputMaybe<Management_Reviews_Bool_Exp>;
  review_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  video?: InputMaybe<Management_Videos_Bool_Exp>;
  video_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "management.video_reviews" */
export enum Management_Video_Reviews_Constraint {
  /** unique or primary key constraint */
  VideoReviewsPkey = 'video_reviews_pkey'
}

/** input type for incrementing integer column in table "management.video_reviews" */
export type Management_Video_Reviews_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  review_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "management.video_reviews" */
export type Management_Video_Reviews_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  review?: InputMaybe<Management_Reviews_Obj_Rel_Insert_Input>;
  review_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  video?: InputMaybe<Management_Videos_Obj_Rel_Insert_Input>;
  video_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Management_Video_Reviews_Max_Fields = {
  __typename?: 'management_video_reviews_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  review_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  video_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "management.video_reviews" */
export type Management_Video_Reviews_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  video_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Management_Video_Reviews_Min_Fields = {
  __typename?: 'management_video_reviews_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  review_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  video_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "management.video_reviews" */
export type Management_Video_Reviews_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  video_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "management.video_reviews" */
export type Management_Video_Reviews_Mutation_Response = {
  __typename?: 'management_video_reviews_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Management_Video_Reviews>;
};

/** input type for inserting object relation for remote table "management.video_reviews" */
export type Management_Video_Reviews_Obj_Rel_Insert_Input = {
  data: Management_Video_Reviews_Insert_Input;
  on_conflict?: InputMaybe<Management_Video_Reviews_On_Conflict>;
};

/** on conflict condition type for table "management.video_reviews" */
export type Management_Video_Reviews_On_Conflict = {
  constraint: Management_Video_Reviews_Constraint;
  update_columns: Array<Management_Video_Reviews_Update_Column>;
  where?: InputMaybe<Management_Video_Reviews_Bool_Exp>;
};

/** ordering options when selecting data from "management.video_reviews" */
export type Management_Video_Reviews_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  review?: InputMaybe<Management_Reviews_Order_By>;
  review_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  video?: InputMaybe<Management_Videos_Order_By>;
  video_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "management.video_reviews" */
export type Management_Video_Reviews_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "management.video_reviews" */
export enum Management_Video_Reviews_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  ReviewId = 'review_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  VideoId = 'video_id'
}

/** input type for updating data in table "management.video_reviews" */
export type Management_Video_Reviews_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  review_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  video_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Management_Video_Reviews_Stddev_Fields = {
  __typename?: 'management_video_reviews_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "management.video_reviews" */
export type Management_Video_Reviews_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Management_Video_Reviews_Stddev_Pop_Fields = {
  __typename?: 'management_video_reviews_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "management.video_reviews" */
export type Management_Video_Reviews_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Management_Video_Reviews_Stddev_Samp_Fields = {
  __typename?: 'management_video_reviews_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "management.video_reviews" */
export type Management_Video_Reviews_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Management_Video_Reviews_Sum_Fields = {
  __typename?: 'management_video_reviews_sum_fields';
  id?: Maybe<Scalars['Int']>;
  review_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "management.video_reviews" */
export type Management_Video_Reviews_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** update columns of table "management.video_reviews" */
export enum Management_Video_Reviews_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  ReviewId = 'review_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  VideoId = 'video_id'
}

/** aggregate var_pop on columns */
export type Management_Video_Reviews_Var_Pop_Fields = {
  __typename?: 'management_video_reviews_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "management.video_reviews" */
export type Management_Video_Reviews_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Management_Video_Reviews_Var_Samp_Fields = {
  __typename?: 'management_video_reviews_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "management.video_reviews" */
export type Management_Video_Reviews_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Management_Video_Reviews_Variance_Fields = {
  __typename?: 'management_video_reviews_variance_fields';
  id?: Maybe<Scalars['Float']>;
  review_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "management.video_reviews" */
export type Management_Video_Reviews_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  review_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "management.videos" */
export type Management_Videos = {
  __typename?: 'management_videos';
  created_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['uuid'];
  ingest_id?: Maybe<Scalars['String']>;
  inherit_captions_from_ingest_id?: Maybe<Scalars['String']>;
  signed?: Maybe<Scalars['Boolean']>;
  state: Scalars['String'];
  updated_at?: Maybe<Scalars['timestamptz']>;
  url: Scalars['String'];
  /** An array relationship */
  video_reviews: Array<Management_Video_Reviews>;
  /** An aggregated array relationship */
  video_reviews_aggregate: Management_Video_Reviews_Aggregate;
};


/** columns and relationships of "management.videos" */
export type Management_VideosVideo_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Video_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Video_Reviews_Order_By>>;
  where?: InputMaybe<Management_Video_Reviews_Bool_Exp>;
};


/** columns and relationships of "management.videos" */
export type Management_VideosVideo_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Video_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Video_Reviews_Order_By>>;
  where?: InputMaybe<Management_Video_Reviews_Bool_Exp>;
};

/** aggregated selection of "management.videos" */
export type Management_Videos_Aggregate = {
  __typename?: 'management_videos_aggregate';
  aggregate?: Maybe<Management_Videos_Aggregate_Fields>;
  nodes: Array<Management_Videos>;
};

/** aggregate fields of "management.videos" */
export type Management_Videos_Aggregate_Fields = {
  __typename?: 'management_videos_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Management_Videos_Max_Fields>;
  min?: Maybe<Management_Videos_Min_Fields>;
};


/** aggregate fields of "management.videos" */
export type Management_Videos_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Management_Videos_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "management.videos" */
export type Management_Videos_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Management_Videos_Max_Order_By>;
  min?: InputMaybe<Management_Videos_Min_Order_By>;
};

/** input type for inserting array relation for remote table "management.videos" */
export type Management_Videos_Arr_Rel_Insert_Input = {
  data: Array<Management_Videos_Insert_Input>;
  on_conflict?: InputMaybe<Management_Videos_On_Conflict>;
};

/** Boolean expression to filter rows from the table "management.videos". All fields are combined with a logical 'AND'. */
export type Management_Videos_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Management_Videos_Bool_Exp>>>;
  _not?: InputMaybe<Management_Videos_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Management_Videos_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  inherit_captions_from_ingest_id?: InputMaybe<String_Comparison_Exp>;
  signed?: InputMaybe<Boolean_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  url?: InputMaybe<String_Comparison_Exp>;
  video_reviews?: InputMaybe<Management_Video_Reviews_Bool_Exp>;
};

/** unique or primary key constraints on table "management.videos" */
export enum Management_Videos_Constraint {
  /** unique or primary key constraint */
  VideosPkey = 'videos_pkey',
  /** unique or primary key constraint */
  VideosUrlKey = 'videos_url_key'
}

/** input type for inserting data into table "management.videos" */
export type Management_Videos_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  inherit_captions_from_ingest_id?: InputMaybe<Scalars['String']>;
  signed?: InputMaybe<Scalars['Boolean']>;
  state?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  url?: InputMaybe<Scalars['String']>;
  video_reviews?: InputMaybe<Management_Video_Reviews_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Management_Videos_Max_Fields = {
  __typename?: 'management_videos_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  ingest_id?: Maybe<Scalars['String']>;
  inherit_captions_from_ingest_id?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  url?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "management.videos" */
export type Management_Videos_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  inherit_captions_from_ingest_id?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Management_Videos_Min_Fields = {
  __typename?: 'management_videos_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  ingest_id?: Maybe<Scalars['String']>;
  inherit_captions_from_ingest_id?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  url?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "management.videos" */
export type Management_Videos_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  inherit_captions_from_ingest_id?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "management.videos" */
export type Management_Videos_Mutation_Response = {
  __typename?: 'management_videos_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Management_Videos>;
};

/** input type for inserting object relation for remote table "management.videos" */
export type Management_Videos_Obj_Rel_Insert_Input = {
  data: Management_Videos_Insert_Input;
  on_conflict?: InputMaybe<Management_Videos_On_Conflict>;
};

/** on conflict condition type for table "management.videos" */
export type Management_Videos_On_Conflict = {
  constraint: Management_Videos_Constraint;
  update_columns: Array<Management_Videos_Update_Column>;
  where?: InputMaybe<Management_Videos_Bool_Exp>;
};

/** ordering options when selecting data from "management.videos" */
export type Management_Videos_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  inherit_captions_from_ingest_id?: InputMaybe<Order_By>;
  signed?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  video_reviews_aggregate?: InputMaybe<Management_Video_Reviews_Aggregate_Order_By>;
};

/** primary key columns input for table: "management.videos" */
export type Management_Videos_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "management.videos" */
export enum Management_Videos_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  InheritCaptionsFromIngestId = 'inherit_captions_from_ingest_id',
  /** column name */
  Signed = 'signed',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Url = 'url'
}

/** input type for updating data in table "management.videos" */
export type Management_Videos_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  inherit_captions_from_ingest_id?: InputMaybe<Scalars['String']>;
  signed?: InputMaybe<Scalars['Boolean']>;
  state?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  url?: InputMaybe<Scalars['String']>;
};

/** update columns of table "management.videos" */
export enum Management_Videos_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  InheritCaptionsFromIngestId = 'inherit_captions_from_ingest_id',
  /** column name */
  Signed = 'signed',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Url = 'url'
}

/** mutation root */
export type Mutation_Root = {
  __typename?: 'mutation_root';
  /** delete data from the table: "academic_years" */
  delete_academic_years?: Maybe<Academic_Years_Mutation_Response>;
  /** delete single row from the table: "academic_years" */
  delete_academic_years_by_pk?: Maybe<Academic_Years>;
  /** delete data from the table: "audit.asset_ingest_audits" */
  delete_audit_asset_ingest_audits?: Maybe<Audit_Asset_Ingest_Audits_Mutation_Response>;
  /** delete data from the table: "audit.lesson_audits" */
  delete_audit_lesson_audits?: Maybe<Audit_Lesson_Audits_Mutation_Response>;
  /** delete data from the table: "captions" */
  delete_captions?: Maybe<Captions_Mutation_Response>;
  /** delete single row from the table: "captions" */
  delete_captions_by_pk?: Maybe<Captions>;
  /** delete data from the table: "cohorts" */
  delete_cohorts?: Maybe<Cohorts_Mutation_Response>;
  /** delete single row from the table: "cohorts" */
  delete_cohorts_by_pk?: Maybe<Cohorts>;
  /** delete data from the table: "curriculum_documents" */
  delete_curriculum_documents?: Maybe<Curriculum_Documents_Mutation_Response>;
  /** delete single row from the table: "curriculum_documents" */
  delete_curriculum_documents_by_pk?: Maybe<Curriculum_Documents>;
  /** delete data from the table: "curriculums" */
  delete_curriculums?: Maybe<Curriculums_Mutation_Response>;
  /** delete single row from the table: "curriculums" */
  delete_curriculums_by_pk?: Maybe<Curriculums>;
  /** delete data from the table: "curriculums_programme_of_study" */
  delete_curriculums_programme_of_study?: Maybe<Curriculums_Programme_Of_Study_Mutation_Response>;
  /** delete single row from the table: "curriculums_programme_of_study" */
  delete_curriculums_programme_of_study_by_pk?: Maybe<Curriculums_Programme_Of_Study>;
  /** delete data from the table: "days" */
  delete_days?: Maybe<Days_Mutation_Response>;
  /** delete single row from the table: "days" */
  delete_days_by_pk?: Maybe<Days>;
  /** delete data from the table: "field_of_study" */
  delete_field_of_study?: Maybe<Field_Of_Study_Mutation_Response>;
  /** delete single row from the table: "field_of_study" */
  delete_field_of_study_by_pk?: Maybe<Field_Of_Study>;
  /** delete data from the table: "ingest.asset_ingest" */
  delete_ingest_asset_ingest?: Maybe<Ingest_Asset_Ingest_Mutation_Response>;
  /** delete single row from the table: "ingest.asset_ingest" */
  delete_ingest_asset_ingest_by_pk?: Maybe<Ingest_Asset_Ingest>;
  /** delete data from the table: "ingest.forms_on_drive" */
  delete_ingest_forms_on_drive?: Maybe<Ingest_Forms_On_Drive_Mutation_Response>;
  /** delete single row from the table: "ingest.forms_on_drive" */
  delete_ingest_forms_on_drive_by_pk?: Maybe<Ingest_Forms_On_Drive>;
  /** delete data from the table: "ingest.intro_quiz_ingest" */
  delete_ingest_intro_quiz_ingest?: Maybe<Ingest_Intro_Quiz_Ingest_Mutation_Response>;
  /** delete single row from the table: "ingest.intro_quiz_ingest" */
  delete_ingest_intro_quiz_ingest_by_pk?: Maybe<Ingest_Intro_Quiz_Ingest>;
  /** delete data from the table: "ingest.lesson_video_ids" */
  delete_ingest_lesson_video_ids?: Maybe<Ingest_Lesson_Video_Ids_Mutation_Response>;
  /** delete single row from the table: "ingest.lesson_video_ids" */
  delete_ingest_lesson_video_ids_by_pk?: Maybe<Ingest_Lesson_Video_Ids>;
  /** delete data from the table: "ingest.quiz_ingest" */
  delete_ingest_quiz_ingest?: Maybe<Ingest_Quiz_Ingest_Mutation_Response>;
  /** delete single row from the table: "ingest.quiz_ingest" */
  delete_ingest_quiz_ingest_by_pk?: Maybe<Ingest_Quiz_Ingest>;
  /** delete data from the table: "ingest.video_ingest" */
  delete_ingest_video_ingest?: Maybe<Ingest_Video_Ingest_Mutation_Response>;
  /** delete single row from the table: "ingest.video_ingest" */
  delete_ingest_video_ingest_by_pk?: Maybe<Ingest_Video_Ingest>;
  /** delete data from the table: "key_stages" */
  delete_key_stages?: Maybe<Key_Stages_Mutation_Response>;
  /** delete single row from the table: "key_stages" */
  delete_key_stages_by_pk?: Maybe<Key_Stages>;
  /** delete data from the table: "lesson_quizzes" */
  delete_lesson_quizzes?: Maybe<Lesson_Quizzes_Mutation_Response>;
  /** delete single row from the table: "lesson_quizzes" */
  delete_lesson_quizzes_by_pk?: Maybe<Lesson_Quizzes>;
  /** delete data from the table: "lessons" */
  delete_lessons?: Maybe<Lessons_Mutation_Response>;
  /** delete single row from the table: "lessons" */
  delete_lessons_by_pk?: Maybe<Lessons>;
  /** delete data from the table: "management.asset_reviews" */
  delete_management_asset_reviews?: Maybe<Management_Asset_Reviews_Mutation_Response>;
  /** delete single row from the table: "management.asset_reviews" */
  delete_management_asset_reviews_by_pk?: Maybe<Management_Asset_Reviews>;
  /** delete data from the table: "management.asset_types" */
  delete_management_asset_types?: Maybe<Management_Asset_Types_Mutation_Response>;
  /** delete single row from the table: "management.asset_types" */
  delete_management_asset_types_by_pk?: Maybe<Management_Asset_Types>;
  /** delete data from the table: "management.assets" */
  delete_management_assets?: Maybe<Management_Assets_Mutation_Response>;
  /** delete single row from the table: "management.assets" */
  delete_management_assets_by_pk?: Maybe<Management_Assets>;
  /** delete data from the table: "management.lesson_quizzes" */
  delete_management_lesson_quizzes?: Maybe<Management_Lesson_Quizzes_Mutation_Response>;
  /** delete single row from the table: "management.lesson_quizzes" */
  delete_management_lesson_quizzes_by_pk?: Maybe<Management_Lesson_Quizzes>;
  /** delete data from the table: "management.lesson_reviews" */
  delete_management_lesson_reviews?: Maybe<Management_Lesson_Reviews_Mutation_Response>;
  /** delete single row from the table: "management.lesson_reviews" */
  delete_management_lesson_reviews_by_pk?: Maybe<Management_Lesson_Reviews>;
  /** delete data from the table: "management.lessons" */
  delete_management_lessons?: Maybe<Management_Lessons_Mutation_Response>;
  /** delete single row from the table: "management.lessons" */
  delete_management_lessons_by_pk?: Maybe<Management_Lessons>;
  /** delete data from the table: "management.questions" */
  delete_management_questions?: Maybe<Management_Questions_Mutation_Response>;
  /** delete single row from the table: "management.questions" */
  delete_management_questions_by_pk?: Maybe<Management_Questions>;
  /** delete data from the table: "management.quiz_questions" */
  delete_management_quiz_questions?: Maybe<Management_Quiz_Questions_Mutation_Response>;
  /** delete single row from the table: "management.quiz_questions" */
  delete_management_quiz_questions_by_pk?: Maybe<Management_Quiz_Questions>;
  /** delete data from the table: "management.quiz_reviews" */
  delete_management_quiz_reviews?: Maybe<Management_Quiz_Reviews_Mutation_Response>;
  /** delete single row from the table: "management.quiz_reviews" */
  delete_management_quiz_reviews_by_pk?: Maybe<Management_Quiz_Reviews>;
  /** delete data from the table: "management.quizzes" */
  delete_management_quizzes?: Maybe<Management_Quizzes_Mutation_Response>;
  /** delete single row from the table: "management.quizzes" */
  delete_management_quizzes_by_pk?: Maybe<Management_Quizzes>;
  /** delete data from the table: "management.reviews" */
  delete_management_reviews?: Maybe<Management_Reviews_Mutation_Response>;
  /** delete single row from the table: "management.reviews" */
  delete_management_reviews_by_pk?: Maybe<Management_Reviews>;
  /** delete data from the table: "management.unit_lessons" */
  delete_management_unit_lessons?: Maybe<Management_Unit_Lessons_Mutation_Response>;
  /** delete single row from the table: "management.unit_lessons" */
  delete_management_unit_lessons_by_pk?: Maybe<Management_Unit_Lessons>;
  /** delete data from the table: "management.video_reviews" */
  delete_management_video_reviews?: Maybe<Management_Video_Reviews_Mutation_Response>;
  /** delete single row from the table: "management.video_reviews" */
  delete_management_video_reviews_by_pk?: Maybe<Management_Video_Reviews>;
  /** delete data from the table: "management.videos" */
  delete_management_videos?: Maybe<Management_Videos_Mutation_Response>;
  /** delete single row from the table: "management.videos" */
  delete_management_videos_by_pk?: Maybe<Management_Videos>;
  /** delete data from the table: "mv_all_year_groups" */
  delete_mv_all_year_groups?: Maybe<Mv_All_Year_Groups_Mutation_Response>;
  /** delete data from the table: "mv_downloads" */
  delete_mv_downloads?: Maybe<Mv_Downloads_Mutation_Response>;
  /** delete data from the table: "mv_key_stages" */
  delete_mv_key_stages?: Maybe<Mv_Key_Stages_Mutation_Response>;
  /** delete data from the table: "mv_learning_themes" */
  delete_mv_learning_themes?: Maybe<Mv_Learning_Themes_Mutation_Response>;
  /** delete data from the table: "mv_lessons" */
  delete_mv_lessons?: Maybe<Mv_Lessons_Mutation_Response>;
  /** delete data from the table: "mv_questions" */
  delete_mv_questions?: Maybe<Mv_Questions_Mutation_Response>;
  /** delete data from the table: "mv_quizzes" */
  delete_mv_quizzes?: Maybe<Mv_Quizzes_Mutation_Response>;
  /** delete data from the table: "mv_subjects" */
  delete_mv_subjects?: Maybe<Mv_Subjects_Mutation_Response>;
  /** delete data from the table: "mv_tiers" */
  delete_mv_tiers?: Maybe<Mv_Tiers_Mutation_Response>;
  /** delete data from the table: "mv_units" */
  delete_mv_units?: Maybe<Mv_Units_Mutation_Response>;
  /** delete data from the table: "paper_tiers" */
  delete_paper_tiers?: Maybe<Paper_Tiers_Mutation_Response>;
  /** delete single row from the table: "paper_tiers" */
  delete_paper_tiers_by_pk?: Maybe<Paper_Tiers>;
  /** delete data from the table: "phases" */
  delete_phases?: Maybe<Phases_Mutation_Response>;
  /** delete single row from the table: "phases" */
  delete_phases_by_pk?: Maybe<Phases>;
  /** delete data from the table: "programme_of_study" */
  delete_programme_of_study?: Maybe<Programme_Of_Study_Mutation_Response>;
  /** delete single row from the table: "programme_of_study" */
  delete_programme_of_study_by_pk?: Maybe<Programme_Of_Study>;
  /** delete data from the table: "programme_of_study_unit" */
  delete_programme_of_study_unit?: Maybe<Programme_Of_Study_Unit_Mutation_Response>;
  /** delete single row from the table: "programme_of_study_unit" */
  delete_programme_of_study_unit_by_pk?: Maybe<Programme_Of_Study_Unit>;
  /** delete data from the table: "questions" */
  delete_questions?: Maybe<Questions_Mutation_Response>;
  /** delete single row from the table: "questions" */
  delete_questions_by_pk?: Maybe<Questions>;
  /** delete data from the table: "quiz_questions" */
  delete_quiz_questions?: Maybe<Quiz_Questions_Mutation_Response>;
  /** delete data from the table: "quiz_questions_archive" */
  delete_quiz_questions_archive?: Maybe<Quiz_Questions_Archive_Mutation_Response>;
  /** delete single row from the table: "quiz_questions" */
  delete_quiz_questions_by_pk?: Maybe<Quiz_Questions>;
  /** delete data from the table: "quiz_types" */
  delete_quiz_types?: Maybe<Quiz_Types_Mutation_Response>;
  /** delete single row from the table: "quiz_types" */
  delete_quiz_types_by_pk?: Maybe<Quiz_Types>;
  /** delete data from the table: "quizzes" */
  delete_quizzes?: Maybe<Quizzes_Mutation_Response>;
  /** delete single row from the table: "quizzes" */
  delete_quizzes_by_pk?: Maybe<Quizzes>;
  /** delete data from the table: "resource_types" */
  delete_resource_types?: Maybe<Resource_Types_Mutation_Response>;
  /** delete single row from the table: "resource_types" */
  delete_resource_types_by_pk?: Maybe<Resource_Types>;
  /** delete data from the table: "teacher_field_of_studies" */
  delete_teacher_field_of_studies?: Maybe<Teacher_Field_Of_Studies_Mutation_Response>;
  /** delete single row from the table: "teacher_field_of_studies" */
  delete_teacher_field_of_studies_by_pk?: Maybe<Teacher_Field_Of_Studies>;
  /** delete data from the table: "teacher_key_stages" */
  delete_teacher_key_stages?: Maybe<Teacher_Key_Stages_Mutation_Response>;
  /** delete single row from the table: "teacher_key_stages" */
  delete_teacher_key_stages_by_pk?: Maybe<Teacher_Key_Stages>;
  /** delete data from the table: "teacher_phases" */
  delete_teacher_phases?: Maybe<Teacher_Phases_Mutation_Response>;
  /** delete single row from the table: "teacher_phases" */
  delete_teacher_phases_by_pk?: Maybe<Teacher_Phases>;
  /** delete data from the table: "teacher_therapies" */
  delete_teacher_therapies?: Maybe<Teacher_Therapies_Mutation_Response>;
  /** delete single row from the table: "teacher_therapies" */
  delete_teacher_therapies_by_pk?: Maybe<Teacher_Therapies>;
  /** delete data from the table: "teachers" */
  delete_teachers?: Maybe<Teachers_Mutation_Response>;
  /** delete single row from the table: "teachers" */
  delete_teachers_by_pk?: Maybe<Teachers>;
  /** delete data from the table: "themes" */
  delete_themes?: Maybe<Themes_Mutation_Response>;
  /** delete data from the table: "themes_as_topics" */
  delete_themes_as_topics?: Maybe<Themes_As_Topics_Mutation_Response>;
  /** delete single row from the table: "themes" */
  delete_themes_by_pk?: Maybe<Themes>;
  /** delete data from the table: "therapies" */
  delete_therapies?: Maybe<Therapies_Mutation_Response>;
  /** delete single row from the table: "therapies" */
  delete_therapies_by_pk?: Maybe<Therapies>;
  /** delete data from the table: "therapy_units" */
  delete_therapy_units?: Maybe<Therapy_Units_Mutation_Response>;
  /** delete single row from the table: "therapy_units" */
  delete_therapy_units_by_pk?: Maybe<Therapy_Units>;
  /** delete data from the table: "timetabled_lessons" */
  delete_timetabled_lessons?: Maybe<Timetabled_Lessons_Mutation_Response>;
  /** delete single row from the table: "timetabled_lessons" */
  delete_timetabled_lessons_by_pk?: Maybe<Timetabled_Lessons>;
  /** delete data from the table: "timetabled_weeks" */
  delete_timetabled_weeks?: Maybe<Timetabled_Weeks_Mutation_Response>;
  /** delete single row from the table: "timetabled_weeks" */
  delete_timetabled_weeks_by_pk?: Maybe<Timetabled_Weeks>;
  /** delete data from the table: "timetables" */
  delete_timetables?: Maybe<Timetables_Mutation_Response>;
  /** delete single row from the table: "timetables" */
  delete_timetables_by_pk?: Maybe<Timetables>;
  /** delete data from the table: "unit_lessons" */
  delete_unit_lessons?: Maybe<Unit_Lessons_Mutation_Response>;
  /** delete single row from the table: "unit_lessons" */
  delete_unit_lessons_by_pk?: Maybe<Unit_Lessons>;
  /** delete data from the table: "unit_quizzes" */
  delete_unit_quizzes?: Maybe<Unit_Quizzes_Mutation_Response>;
  /** delete single row from the table: "unit_quizzes" */
  delete_unit_quizzes_by_pk?: Maybe<Unit_Quizzes>;
  /** delete data from the table: "units" */
  delete_units?: Maybe<Units_Mutation_Response>;
  /** delete data from the table: "units_as_topics" */
  delete_units_as_topics?: Maybe<Units_As_Topics_Mutation_Response>;
  /** delete single row from the table: "units" */
  delete_units_by_pk?: Maybe<Units>;
  /** delete data from the table: "videos" */
  delete_videos?: Maybe<Videos_Mutation_Response>;
  /** delete single row from the table: "videos" */
  delete_videos_by_pk?: Maybe<Videos>;
  /** delete data from the table: "weeks" */
  delete_weeks?: Maybe<Weeks_Mutation_Response>;
  /** delete single row from the table: "weeks" */
  delete_weeks_by_pk?: Maybe<Weeks>;
  /** delete data from the table: "years" */
  delete_years?: Maybe<Years_Mutation_Response>;
  /** delete single row from the table: "years" */
  delete_years_by_pk?: Maybe<Years>;
  /** insert data into the table: "academic_years" */
  insert_academic_years?: Maybe<Academic_Years_Mutation_Response>;
  /** insert a single row into the table: "academic_years" */
  insert_academic_years_one?: Maybe<Academic_Years>;
  /** insert data into the table: "audit.asset_ingest_audits" */
  insert_audit_asset_ingest_audits?: Maybe<Audit_Asset_Ingest_Audits_Mutation_Response>;
  /** insert a single row into the table: "audit.asset_ingest_audits" */
  insert_audit_asset_ingest_audits_one?: Maybe<Audit_Asset_Ingest_Audits>;
  /** insert data into the table: "audit.lesson_audits" */
  insert_audit_lesson_audits?: Maybe<Audit_Lesson_Audits_Mutation_Response>;
  /** insert a single row into the table: "audit.lesson_audits" */
  insert_audit_lesson_audits_one?: Maybe<Audit_Lesson_Audits>;
  /** insert data into the table: "captions" */
  insert_captions?: Maybe<Captions_Mutation_Response>;
  /** insert a single row into the table: "captions" */
  insert_captions_one?: Maybe<Captions>;
  /** insert data into the table: "cohorts" */
  insert_cohorts?: Maybe<Cohorts_Mutation_Response>;
  /** insert a single row into the table: "cohorts" */
  insert_cohorts_one?: Maybe<Cohorts>;
  /** insert data into the table: "curriculum_documents" */
  insert_curriculum_documents?: Maybe<Curriculum_Documents_Mutation_Response>;
  /** insert a single row into the table: "curriculum_documents" */
  insert_curriculum_documents_one?: Maybe<Curriculum_Documents>;
  /** insert data into the table: "curriculums" */
  insert_curriculums?: Maybe<Curriculums_Mutation_Response>;
  /** insert a single row into the table: "curriculums" */
  insert_curriculums_one?: Maybe<Curriculums>;
  /** insert data into the table: "curriculums_programme_of_study" */
  insert_curriculums_programme_of_study?: Maybe<Curriculums_Programme_Of_Study_Mutation_Response>;
  /** insert a single row into the table: "curriculums_programme_of_study" */
  insert_curriculums_programme_of_study_one?: Maybe<Curriculums_Programme_Of_Study>;
  /** insert data into the table: "days" */
  insert_days?: Maybe<Days_Mutation_Response>;
  /** insert a single row into the table: "days" */
  insert_days_one?: Maybe<Days>;
  /** insert data into the table: "field_of_study" */
  insert_field_of_study?: Maybe<Field_Of_Study_Mutation_Response>;
  /** insert a single row into the table: "field_of_study" */
  insert_field_of_study_one?: Maybe<Field_Of_Study>;
  /** insert data into the table: "ingest.asset_ingest" */
  insert_ingest_asset_ingest?: Maybe<Ingest_Asset_Ingest_Mutation_Response>;
  /** insert a single row into the table: "ingest.asset_ingest" */
  insert_ingest_asset_ingest_one?: Maybe<Ingest_Asset_Ingest>;
  /** insert data into the table: "ingest.forms_on_drive" */
  insert_ingest_forms_on_drive?: Maybe<Ingest_Forms_On_Drive_Mutation_Response>;
  /** insert a single row into the table: "ingest.forms_on_drive" */
  insert_ingest_forms_on_drive_one?: Maybe<Ingest_Forms_On_Drive>;
  /** insert data into the table: "ingest.intro_quiz_ingest" */
  insert_ingest_intro_quiz_ingest?: Maybe<Ingest_Intro_Quiz_Ingest_Mutation_Response>;
  /** insert a single row into the table: "ingest.intro_quiz_ingest" */
  insert_ingest_intro_quiz_ingest_one?: Maybe<Ingest_Intro_Quiz_Ingest>;
  /** insert data into the table: "ingest.lesson_video_ids" */
  insert_ingest_lesson_video_ids?: Maybe<Ingest_Lesson_Video_Ids_Mutation_Response>;
  /** insert a single row into the table: "ingest.lesson_video_ids" */
  insert_ingest_lesson_video_ids_one?: Maybe<Ingest_Lesson_Video_Ids>;
  /** insert data into the table: "ingest.quiz_ingest" */
  insert_ingest_quiz_ingest?: Maybe<Ingest_Quiz_Ingest_Mutation_Response>;
  /** insert a single row into the table: "ingest.quiz_ingest" */
  insert_ingest_quiz_ingest_one?: Maybe<Ingest_Quiz_Ingest>;
  /** insert data into the table: "ingest.video_ingest" */
  insert_ingest_video_ingest?: Maybe<Ingest_Video_Ingest_Mutation_Response>;
  /** insert a single row into the table: "ingest.video_ingest" */
  insert_ingest_video_ingest_one?: Maybe<Ingest_Video_Ingest>;
  /** insert data into the table: "key_stages" */
  insert_key_stages?: Maybe<Key_Stages_Mutation_Response>;
  /** insert a single row into the table: "key_stages" */
  insert_key_stages_one?: Maybe<Key_Stages>;
  /** insert data into the table: "lesson_quizzes" */
  insert_lesson_quizzes?: Maybe<Lesson_Quizzes_Mutation_Response>;
  /** insert a single row into the table: "lesson_quizzes" */
  insert_lesson_quizzes_one?: Maybe<Lesson_Quizzes>;
  /** insert data into the table: "lessons" */
  insert_lessons?: Maybe<Lessons_Mutation_Response>;
  /** insert a single row into the table: "lessons" */
  insert_lessons_one?: Maybe<Lessons>;
  /** insert data into the table: "management.asset_reviews" */
  insert_management_asset_reviews?: Maybe<Management_Asset_Reviews_Mutation_Response>;
  /** insert a single row into the table: "management.asset_reviews" */
  insert_management_asset_reviews_one?: Maybe<Management_Asset_Reviews>;
  /** insert data into the table: "management.asset_types" */
  insert_management_asset_types?: Maybe<Management_Asset_Types_Mutation_Response>;
  /** insert a single row into the table: "management.asset_types" */
  insert_management_asset_types_one?: Maybe<Management_Asset_Types>;
  /** insert data into the table: "management.assets" */
  insert_management_assets?: Maybe<Management_Assets_Mutation_Response>;
  /** insert a single row into the table: "management.assets" */
  insert_management_assets_one?: Maybe<Management_Assets>;
  /** insert data into the table: "management.lesson_quizzes" */
  insert_management_lesson_quizzes?: Maybe<Management_Lesson_Quizzes_Mutation_Response>;
  /** insert a single row into the table: "management.lesson_quizzes" */
  insert_management_lesson_quizzes_one?: Maybe<Management_Lesson_Quizzes>;
  /** insert data into the table: "management.lesson_reviews" */
  insert_management_lesson_reviews?: Maybe<Management_Lesson_Reviews_Mutation_Response>;
  /** insert a single row into the table: "management.lesson_reviews" */
  insert_management_lesson_reviews_one?: Maybe<Management_Lesson_Reviews>;
  /** insert data into the table: "management.lessons" */
  insert_management_lessons?: Maybe<Management_Lessons_Mutation_Response>;
  /** insert a single row into the table: "management.lessons" */
  insert_management_lessons_one?: Maybe<Management_Lessons>;
  /** insert data into the table: "management.questions" */
  insert_management_questions?: Maybe<Management_Questions_Mutation_Response>;
  /** insert a single row into the table: "management.questions" */
  insert_management_questions_one?: Maybe<Management_Questions>;
  /** insert data into the table: "management.quiz_questions" */
  insert_management_quiz_questions?: Maybe<Management_Quiz_Questions_Mutation_Response>;
  /** insert a single row into the table: "management.quiz_questions" */
  insert_management_quiz_questions_one?: Maybe<Management_Quiz_Questions>;
  /** insert data into the table: "management.quiz_reviews" */
  insert_management_quiz_reviews?: Maybe<Management_Quiz_Reviews_Mutation_Response>;
  /** insert a single row into the table: "management.quiz_reviews" */
  insert_management_quiz_reviews_one?: Maybe<Management_Quiz_Reviews>;
  /** insert data into the table: "management.quizzes" */
  insert_management_quizzes?: Maybe<Management_Quizzes_Mutation_Response>;
  /** insert a single row into the table: "management.quizzes" */
  insert_management_quizzes_one?: Maybe<Management_Quizzes>;
  /** insert data into the table: "management.reviews" */
  insert_management_reviews?: Maybe<Management_Reviews_Mutation_Response>;
  /** insert a single row into the table: "management.reviews" */
  insert_management_reviews_one?: Maybe<Management_Reviews>;
  /** insert data into the table: "management.unit_lessons" */
  insert_management_unit_lessons?: Maybe<Management_Unit_Lessons_Mutation_Response>;
  /** insert a single row into the table: "management.unit_lessons" */
  insert_management_unit_lessons_one?: Maybe<Management_Unit_Lessons>;
  /** insert data into the table: "management.video_reviews" */
  insert_management_video_reviews?: Maybe<Management_Video_Reviews_Mutation_Response>;
  /** insert a single row into the table: "management.video_reviews" */
  insert_management_video_reviews_one?: Maybe<Management_Video_Reviews>;
  /** insert data into the table: "management.videos" */
  insert_management_videos?: Maybe<Management_Videos_Mutation_Response>;
  /** insert a single row into the table: "management.videos" */
  insert_management_videos_one?: Maybe<Management_Videos>;
  /** insert data into the table: "mv_all_year_groups" */
  insert_mv_all_year_groups?: Maybe<Mv_All_Year_Groups_Mutation_Response>;
  /** insert a single row into the table: "mv_all_year_groups" */
  insert_mv_all_year_groups_one?: Maybe<Mv_All_Year_Groups>;
  /** insert data into the table: "mv_downloads" */
  insert_mv_downloads?: Maybe<Mv_Downloads_Mutation_Response>;
  /** insert a single row into the table: "mv_downloads" */
  insert_mv_downloads_one?: Maybe<Mv_Downloads>;
  /** insert data into the table: "mv_key_stages" */
  insert_mv_key_stages?: Maybe<Mv_Key_Stages_Mutation_Response>;
  /** insert a single row into the table: "mv_key_stages" */
  insert_mv_key_stages_one?: Maybe<Mv_Key_Stages>;
  /** insert data into the table: "mv_learning_themes" */
  insert_mv_learning_themes?: Maybe<Mv_Learning_Themes_Mutation_Response>;
  /** insert a single row into the table: "mv_learning_themes" */
  insert_mv_learning_themes_one?: Maybe<Mv_Learning_Themes>;
  /** insert data into the table: "mv_lessons" */
  insert_mv_lessons?: Maybe<Mv_Lessons_Mutation_Response>;
  /** insert a single row into the table: "mv_lessons" */
  insert_mv_lessons_one?: Maybe<Mv_Lessons>;
  /** insert data into the table: "mv_questions" */
  insert_mv_questions?: Maybe<Mv_Questions_Mutation_Response>;
  /** insert a single row into the table: "mv_questions" */
  insert_mv_questions_one?: Maybe<Mv_Questions>;
  /** insert data into the table: "mv_quizzes" */
  insert_mv_quizzes?: Maybe<Mv_Quizzes_Mutation_Response>;
  /** insert a single row into the table: "mv_quizzes" */
  insert_mv_quizzes_one?: Maybe<Mv_Quizzes>;
  /** insert data into the table: "mv_subjects" */
  insert_mv_subjects?: Maybe<Mv_Subjects_Mutation_Response>;
  /** insert a single row into the table: "mv_subjects" */
  insert_mv_subjects_one?: Maybe<Mv_Subjects>;
  /** insert data into the table: "mv_tiers" */
  insert_mv_tiers?: Maybe<Mv_Tiers_Mutation_Response>;
  /** insert a single row into the table: "mv_tiers" */
  insert_mv_tiers_one?: Maybe<Mv_Tiers>;
  /** insert data into the table: "mv_units" */
  insert_mv_units?: Maybe<Mv_Units_Mutation_Response>;
  /** insert a single row into the table: "mv_units" */
  insert_mv_units_one?: Maybe<Mv_Units>;
  /** insert data into the table: "paper_tiers" */
  insert_paper_tiers?: Maybe<Paper_Tiers_Mutation_Response>;
  /** insert a single row into the table: "paper_tiers" */
  insert_paper_tiers_one?: Maybe<Paper_Tiers>;
  /** insert data into the table: "phases" */
  insert_phases?: Maybe<Phases_Mutation_Response>;
  /** insert a single row into the table: "phases" */
  insert_phases_one?: Maybe<Phases>;
  /** insert data into the table: "programme_of_study" */
  insert_programme_of_study?: Maybe<Programme_Of_Study_Mutation_Response>;
  /** insert a single row into the table: "programme_of_study" */
  insert_programme_of_study_one?: Maybe<Programme_Of_Study>;
  /** insert data into the table: "programme_of_study_unit" */
  insert_programme_of_study_unit?: Maybe<Programme_Of_Study_Unit_Mutation_Response>;
  /** insert a single row into the table: "programme_of_study_unit" */
  insert_programme_of_study_unit_one?: Maybe<Programme_Of_Study_Unit>;
  /** insert data into the table: "questions" */
  insert_questions?: Maybe<Questions_Mutation_Response>;
  /** insert a single row into the table: "questions" */
  insert_questions_one?: Maybe<Questions>;
  /** insert data into the table: "quiz_questions" */
  insert_quiz_questions?: Maybe<Quiz_Questions_Mutation_Response>;
  /** insert data into the table: "quiz_questions_archive" */
  insert_quiz_questions_archive?: Maybe<Quiz_Questions_Archive_Mutation_Response>;
  /** insert a single row into the table: "quiz_questions_archive" */
  insert_quiz_questions_archive_one?: Maybe<Quiz_Questions_Archive>;
  /** insert a single row into the table: "quiz_questions" */
  insert_quiz_questions_one?: Maybe<Quiz_Questions>;
  /** insert data into the table: "quiz_types" */
  insert_quiz_types?: Maybe<Quiz_Types_Mutation_Response>;
  /** insert a single row into the table: "quiz_types" */
  insert_quiz_types_one?: Maybe<Quiz_Types>;
  /** insert data into the table: "quizzes" */
  insert_quizzes?: Maybe<Quizzes_Mutation_Response>;
  /** insert a single row into the table: "quizzes" */
  insert_quizzes_one?: Maybe<Quizzes>;
  /** insert data into the table: "resource_types" */
  insert_resource_types?: Maybe<Resource_Types_Mutation_Response>;
  /** insert a single row into the table: "resource_types" */
  insert_resource_types_one?: Maybe<Resource_Types>;
  /** insert data into the table: "teacher_field_of_studies" */
  insert_teacher_field_of_studies?: Maybe<Teacher_Field_Of_Studies_Mutation_Response>;
  /** insert a single row into the table: "teacher_field_of_studies" */
  insert_teacher_field_of_studies_one?: Maybe<Teacher_Field_Of_Studies>;
  /** insert data into the table: "teacher_key_stages" */
  insert_teacher_key_stages?: Maybe<Teacher_Key_Stages_Mutation_Response>;
  /** insert a single row into the table: "teacher_key_stages" */
  insert_teacher_key_stages_one?: Maybe<Teacher_Key_Stages>;
  /** insert data into the table: "teacher_phases" */
  insert_teacher_phases?: Maybe<Teacher_Phases_Mutation_Response>;
  /** insert a single row into the table: "teacher_phases" */
  insert_teacher_phases_one?: Maybe<Teacher_Phases>;
  /** insert data into the table: "teacher_therapies" */
  insert_teacher_therapies?: Maybe<Teacher_Therapies_Mutation_Response>;
  /** insert a single row into the table: "teacher_therapies" */
  insert_teacher_therapies_one?: Maybe<Teacher_Therapies>;
  /** insert data into the table: "teachers" */
  insert_teachers?: Maybe<Teachers_Mutation_Response>;
  /** insert a single row into the table: "teachers" */
  insert_teachers_one?: Maybe<Teachers>;
  /** insert data into the table: "themes" */
  insert_themes?: Maybe<Themes_Mutation_Response>;
  /** insert data into the table: "themes_as_topics" */
  insert_themes_as_topics?: Maybe<Themes_As_Topics_Mutation_Response>;
  /** insert a single row into the table: "themes_as_topics" */
  insert_themes_as_topics_one?: Maybe<Themes_As_Topics>;
  /** insert a single row into the table: "themes" */
  insert_themes_one?: Maybe<Themes>;
  /** insert data into the table: "therapies" */
  insert_therapies?: Maybe<Therapies_Mutation_Response>;
  /** insert a single row into the table: "therapies" */
  insert_therapies_one?: Maybe<Therapies>;
  /** insert data into the table: "therapy_units" */
  insert_therapy_units?: Maybe<Therapy_Units_Mutation_Response>;
  /** insert a single row into the table: "therapy_units" */
  insert_therapy_units_one?: Maybe<Therapy_Units>;
  /** insert data into the table: "timetabled_lessons" */
  insert_timetabled_lessons?: Maybe<Timetabled_Lessons_Mutation_Response>;
  /** insert a single row into the table: "timetabled_lessons" */
  insert_timetabled_lessons_one?: Maybe<Timetabled_Lessons>;
  /** insert data into the table: "timetabled_weeks" */
  insert_timetabled_weeks?: Maybe<Timetabled_Weeks_Mutation_Response>;
  /** insert a single row into the table: "timetabled_weeks" */
  insert_timetabled_weeks_one?: Maybe<Timetabled_Weeks>;
  /** insert data into the table: "timetables" */
  insert_timetables?: Maybe<Timetables_Mutation_Response>;
  /** insert a single row into the table: "timetables" */
  insert_timetables_one?: Maybe<Timetables>;
  /** insert data into the table: "unit_lessons" */
  insert_unit_lessons?: Maybe<Unit_Lessons_Mutation_Response>;
  /** insert a single row into the table: "unit_lessons" */
  insert_unit_lessons_one?: Maybe<Unit_Lessons>;
  /** insert data into the table: "unit_quizzes" */
  insert_unit_quizzes?: Maybe<Unit_Quizzes_Mutation_Response>;
  /** insert a single row into the table: "unit_quizzes" */
  insert_unit_quizzes_one?: Maybe<Unit_Quizzes>;
  /** insert data into the table: "units" */
  insert_units?: Maybe<Units_Mutation_Response>;
  /** insert data into the table: "units_as_topics" */
  insert_units_as_topics?: Maybe<Units_As_Topics_Mutation_Response>;
  /** insert a single row into the table: "units_as_topics" */
  insert_units_as_topics_one?: Maybe<Units_As_Topics>;
  /** insert a single row into the table: "units" */
  insert_units_one?: Maybe<Units>;
  /** insert data into the table: "videos" */
  insert_videos?: Maybe<Videos_Mutation_Response>;
  /** insert a single row into the table: "videos" */
  insert_videos_one?: Maybe<Videos>;
  /** insert data into the table: "weeks" */
  insert_weeks?: Maybe<Weeks_Mutation_Response>;
  /** insert a single row into the table: "weeks" */
  insert_weeks_one?: Maybe<Weeks>;
  /** insert data into the table: "years" */
  insert_years?: Maybe<Years_Mutation_Response>;
  /** insert a single row into the table: "years" */
  insert_years_one?: Maybe<Years>;
  /** update data of the table: "academic_years" */
  update_academic_years?: Maybe<Academic_Years_Mutation_Response>;
  /** update single row of the table: "academic_years" */
  update_academic_years_by_pk?: Maybe<Academic_Years>;
  /** update data of the table: "audit.asset_ingest_audits" */
  update_audit_asset_ingest_audits?: Maybe<Audit_Asset_Ingest_Audits_Mutation_Response>;
  /** update data of the table: "audit.lesson_audits" */
  update_audit_lesson_audits?: Maybe<Audit_Lesson_Audits_Mutation_Response>;
  /** update data of the table: "captions" */
  update_captions?: Maybe<Captions_Mutation_Response>;
  /** update single row of the table: "captions" */
  update_captions_by_pk?: Maybe<Captions>;
  /** update data of the table: "cohorts" */
  update_cohorts?: Maybe<Cohorts_Mutation_Response>;
  /** update single row of the table: "cohorts" */
  update_cohorts_by_pk?: Maybe<Cohorts>;
  /** update data of the table: "curriculum_documents" */
  update_curriculum_documents?: Maybe<Curriculum_Documents_Mutation_Response>;
  /** update single row of the table: "curriculum_documents" */
  update_curriculum_documents_by_pk?: Maybe<Curriculum_Documents>;
  /** update data of the table: "curriculums" */
  update_curriculums?: Maybe<Curriculums_Mutation_Response>;
  /** update single row of the table: "curriculums" */
  update_curriculums_by_pk?: Maybe<Curriculums>;
  /** update data of the table: "curriculums_programme_of_study" */
  update_curriculums_programme_of_study?: Maybe<Curriculums_Programme_Of_Study_Mutation_Response>;
  /** update single row of the table: "curriculums_programme_of_study" */
  update_curriculums_programme_of_study_by_pk?: Maybe<Curriculums_Programme_Of_Study>;
  /** update data of the table: "days" */
  update_days?: Maybe<Days_Mutation_Response>;
  /** update single row of the table: "days" */
  update_days_by_pk?: Maybe<Days>;
  /** update data of the table: "field_of_study" */
  update_field_of_study?: Maybe<Field_Of_Study_Mutation_Response>;
  /** update single row of the table: "field_of_study" */
  update_field_of_study_by_pk?: Maybe<Field_Of_Study>;
  /** update data of the table: "ingest.asset_ingest" */
  update_ingest_asset_ingest?: Maybe<Ingest_Asset_Ingest_Mutation_Response>;
  /** update single row of the table: "ingest.asset_ingest" */
  update_ingest_asset_ingest_by_pk?: Maybe<Ingest_Asset_Ingest>;
  /** update data of the table: "ingest.forms_on_drive" */
  update_ingest_forms_on_drive?: Maybe<Ingest_Forms_On_Drive_Mutation_Response>;
  /** update single row of the table: "ingest.forms_on_drive" */
  update_ingest_forms_on_drive_by_pk?: Maybe<Ingest_Forms_On_Drive>;
  /** update data of the table: "ingest.intro_quiz_ingest" */
  update_ingest_intro_quiz_ingest?: Maybe<Ingest_Intro_Quiz_Ingest_Mutation_Response>;
  /** update single row of the table: "ingest.intro_quiz_ingest" */
  update_ingest_intro_quiz_ingest_by_pk?: Maybe<Ingest_Intro_Quiz_Ingest>;
  /** update data of the table: "ingest.lesson_video_ids" */
  update_ingest_lesson_video_ids?: Maybe<Ingest_Lesson_Video_Ids_Mutation_Response>;
  /** update single row of the table: "ingest.lesson_video_ids" */
  update_ingest_lesson_video_ids_by_pk?: Maybe<Ingest_Lesson_Video_Ids>;
  /** update data of the table: "ingest.quiz_ingest" */
  update_ingest_quiz_ingest?: Maybe<Ingest_Quiz_Ingest_Mutation_Response>;
  /** update single row of the table: "ingest.quiz_ingest" */
  update_ingest_quiz_ingest_by_pk?: Maybe<Ingest_Quiz_Ingest>;
  /** update data of the table: "ingest.video_ingest" */
  update_ingest_video_ingest?: Maybe<Ingest_Video_Ingest_Mutation_Response>;
  /** update single row of the table: "ingest.video_ingest" */
  update_ingest_video_ingest_by_pk?: Maybe<Ingest_Video_Ingest>;
  /** update data of the table: "key_stages" */
  update_key_stages?: Maybe<Key_Stages_Mutation_Response>;
  /** update single row of the table: "key_stages" */
  update_key_stages_by_pk?: Maybe<Key_Stages>;
  /** update data of the table: "lesson_quizzes" */
  update_lesson_quizzes?: Maybe<Lesson_Quizzes_Mutation_Response>;
  /** update single row of the table: "lesson_quizzes" */
  update_lesson_quizzes_by_pk?: Maybe<Lesson_Quizzes>;
  /** update data of the table: "lessons" */
  update_lessons?: Maybe<Lessons_Mutation_Response>;
  /** update single row of the table: "lessons" */
  update_lessons_by_pk?: Maybe<Lessons>;
  /** update data of the table: "management.asset_reviews" */
  update_management_asset_reviews?: Maybe<Management_Asset_Reviews_Mutation_Response>;
  /** update single row of the table: "management.asset_reviews" */
  update_management_asset_reviews_by_pk?: Maybe<Management_Asset_Reviews>;
  /** update data of the table: "management.asset_types" */
  update_management_asset_types?: Maybe<Management_Asset_Types_Mutation_Response>;
  /** update single row of the table: "management.asset_types" */
  update_management_asset_types_by_pk?: Maybe<Management_Asset_Types>;
  /** update data of the table: "management.assets" */
  update_management_assets?: Maybe<Management_Assets_Mutation_Response>;
  /** update single row of the table: "management.assets" */
  update_management_assets_by_pk?: Maybe<Management_Assets>;
  /** update data of the table: "management.lesson_quizzes" */
  update_management_lesson_quizzes?: Maybe<Management_Lesson_Quizzes_Mutation_Response>;
  /** update single row of the table: "management.lesson_quizzes" */
  update_management_lesson_quizzes_by_pk?: Maybe<Management_Lesson_Quizzes>;
  /** update data of the table: "management.lesson_reviews" */
  update_management_lesson_reviews?: Maybe<Management_Lesson_Reviews_Mutation_Response>;
  /** update single row of the table: "management.lesson_reviews" */
  update_management_lesson_reviews_by_pk?: Maybe<Management_Lesson_Reviews>;
  /** update data of the table: "management.lessons" */
  update_management_lessons?: Maybe<Management_Lessons_Mutation_Response>;
  /** update single row of the table: "management.lessons" */
  update_management_lessons_by_pk?: Maybe<Management_Lessons>;
  /** update data of the table: "management.questions" */
  update_management_questions?: Maybe<Management_Questions_Mutation_Response>;
  /** update single row of the table: "management.questions" */
  update_management_questions_by_pk?: Maybe<Management_Questions>;
  /** update data of the table: "management.quiz_questions" */
  update_management_quiz_questions?: Maybe<Management_Quiz_Questions_Mutation_Response>;
  /** update single row of the table: "management.quiz_questions" */
  update_management_quiz_questions_by_pk?: Maybe<Management_Quiz_Questions>;
  /** update data of the table: "management.quiz_reviews" */
  update_management_quiz_reviews?: Maybe<Management_Quiz_Reviews_Mutation_Response>;
  /** update single row of the table: "management.quiz_reviews" */
  update_management_quiz_reviews_by_pk?: Maybe<Management_Quiz_Reviews>;
  /** update data of the table: "management.quizzes" */
  update_management_quizzes?: Maybe<Management_Quizzes_Mutation_Response>;
  /** update single row of the table: "management.quizzes" */
  update_management_quizzes_by_pk?: Maybe<Management_Quizzes>;
  /** update data of the table: "management.reviews" */
  update_management_reviews?: Maybe<Management_Reviews_Mutation_Response>;
  /** update single row of the table: "management.reviews" */
  update_management_reviews_by_pk?: Maybe<Management_Reviews>;
  /** update data of the table: "management.unit_lessons" */
  update_management_unit_lessons?: Maybe<Management_Unit_Lessons_Mutation_Response>;
  /** update single row of the table: "management.unit_lessons" */
  update_management_unit_lessons_by_pk?: Maybe<Management_Unit_Lessons>;
  /** update data of the table: "management.video_reviews" */
  update_management_video_reviews?: Maybe<Management_Video_Reviews_Mutation_Response>;
  /** update single row of the table: "management.video_reviews" */
  update_management_video_reviews_by_pk?: Maybe<Management_Video_Reviews>;
  /** update data of the table: "management.videos" */
  update_management_videos?: Maybe<Management_Videos_Mutation_Response>;
  /** update single row of the table: "management.videos" */
  update_management_videos_by_pk?: Maybe<Management_Videos>;
  /** update data of the table: "mv_all_year_groups" */
  update_mv_all_year_groups?: Maybe<Mv_All_Year_Groups_Mutation_Response>;
  /** update data of the table: "mv_downloads" */
  update_mv_downloads?: Maybe<Mv_Downloads_Mutation_Response>;
  /** update data of the table: "mv_key_stages" */
  update_mv_key_stages?: Maybe<Mv_Key_Stages_Mutation_Response>;
  /** update data of the table: "mv_learning_themes" */
  update_mv_learning_themes?: Maybe<Mv_Learning_Themes_Mutation_Response>;
  /** update data of the table: "mv_lessons" */
  update_mv_lessons?: Maybe<Mv_Lessons_Mutation_Response>;
  /** update data of the table: "mv_questions" */
  update_mv_questions?: Maybe<Mv_Questions_Mutation_Response>;
  /** update data of the table: "mv_quizzes" */
  update_mv_quizzes?: Maybe<Mv_Quizzes_Mutation_Response>;
  /** update data of the table: "mv_subjects" */
  update_mv_subjects?: Maybe<Mv_Subjects_Mutation_Response>;
  /** update data of the table: "mv_tiers" */
  update_mv_tiers?: Maybe<Mv_Tiers_Mutation_Response>;
  /** update data of the table: "mv_units" */
  update_mv_units?: Maybe<Mv_Units_Mutation_Response>;
  /** update data of the table: "paper_tiers" */
  update_paper_tiers?: Maybe<Paper_Tiers_Mutation_Response>;
  /** update single row of the table: "paper_tiers" */
  update_paper_tiers_by_pk?: Maybe<Paper_Tiers>;
  /** update data of the table: "phases" */
  update_phases?: Maybe<Phases_Mutation_Response>;
  /** update single row of the table: "phases" */
  update_phases_by_pk?: Maybe<Phases>;
  /** update data of the table: "programme_of_study" */
  update_programme_of_study?: Maybe<Programme_Of_Study_Mutation_Response>;
  /** update single row of the table: "programme_of_study" */
  update_programme_of_study_by_pk?: Maybe<Programme_Of_Study>;
  /** update data of the table: "programme_of_study_unit" */
  update_programme_of_study_unit?: Maybe<Programme_Of_Study_Unit_Mutation_Response>;
  /** update single row of the table: "programme_of_study_unit" */
  update_programme_of_study_unit_by_pk?: Maybe<Programme_Of_Study_Unit>;
  /** update data of the table: "questions" */
  update_questions?: Maybe<Questions_Mutation_Response>;
  /** update single row of the table: "questions" */
  update_questions_by_pk?: Maybe<Questions>;
  /** update data of the table: "quiz_questions" */
  update_quiz_questions?: Maybe<Quiz_Questions_Mutation_Response>;
  /** update data of the table: "quiz_questions_archive" */
  update_quiz_questions_archive?: Maybe<Quiz_Questions_Archive_Mutation_Response>;
  /** update single row of the table: "quiz_questions" */
  update_quiz_questions_by_pk?: Maybe<Quiz_Questions>;
  /** update data of the table: "quiz_types" */
  update_quiz_types?: Maybe<Quiz_Types_Mutation_Response>;
  /** update single row of the table: "quiz_types" */
  update_quiz_types_by_pk?: Maybe<Quiz_Types>;
  /** update data of the table: "quizzes" */
  update_quizzes?: Maybe<Quizzes_Mutation_Response>;
  /** update single row of the table: "quizzes" */
  update_quizzes_by_pk?: Maybe<Quizzes>;
  /** update data of the table: "resource_types" */
  update_resource_types?: Maybe<Resource_Types_Mutation_Response>;
  /** update single row of the table: "resource_types" */
  update_resource_types_by_pk?: Maybe<Resource_Types>;
  /** update data of the table: "teacher_field_of_studies" */
  update_teacher_field_of_studies?: Maybe<Teacher_Field_Of_Studies_Mutation_Response>;
  /** update single row of the table: "teacher_field_of_studies" */
  update_teacher_field_of_studies_by_pk?: Maybe<Teacher_Field_Of_Studies>;
  /** update data of the table: "teacher_key_stages" */
  update_teacher_key_stages?: Maybe<Teacher_Key_Stages_Mutation_Response>;
  /** update single row of the table: "teacher_key_stages" */
  update_teacher_key_stages_by_pk?: Maybe<Teacher_Key_Stages>;
  /** update data of the table: "teacher_phases" */
  update_teacher_phases?: Maybe<Teacher_Phases_Mutation_Response>;
  /** update single row of the table: "teacher_phases" */
  update_teacher_phases_by_pk?: Maybe<Teacher_Phases>;
  /** update data of the table: "teacher_therapies" */
  update_teacher_therapies?: Maybe<Teacher_Therapies_Mutation_Response>;
  /** update single row of the table: "teacher_therapies" */
  update_teacher_therapies_by_pk?: Maybe<Teacher_Therapies>;
  /** update data of the table: "teachers" */
  update_teachers?: Maybe<Teachers_Mutation_Response>;
  /** update single row of the table: "teachers" */
  update_teachers_by_pk?: Maybe<Teachers>;
  /** update data of the table: "themes" */
  update_themes?: Maybe<Themes_Mutation_Response>;
  /** update data of the table: "themes_as_topics" */
  update_themes_as_topics?: Maybe<Themes_As_Topics_Mutation_Response>;
  /** update single row of the table: "themes" */
  update_themes_by_pk?: Maybe<Themes>;
  /** update data of the table: "therapies" */
  update_therapies?: Maybe<Therapies_Mutation_Response>;
  /** update single row of the table: "therapies" */
  update_therapies_by_pk?: Maybe<Therapies>;
  /** update data of the table: "therapy_units" */
  update_therapy_units?: Maybe<Therapy_Units_Mutation_Response>;
  /** update single row of the table: "therapy_units" */
  update_therapy_units_by_pk?: Maybe<Therapy_Units>;
  /** update data of the table: "timetabled_lessons" */
  update_timetabled_lessons?: Maybe<Timetabled_Lessons_Mutation_Response>;
  /** update single row of the table: "timetabled_lessons" */
  update_timetabled_lessons_by_pk?: Maybe<Timetabled_Lessons>;
  /** update data of the table: "timetabled_weeks" */
  update_timetabled_weeks?: Maybe<Timetabled_Weeks_Mutation_Response>;
  /** update single row of the table: "timetabled_weeks" */
  update_timetabled_weeks_by_pk?: Maybe<Timetabled_Weeks>;
  /** update data of the table: "timetables" */
  update_timetables?: Maybe<Timetables_Mutation_Response>;
  /** update single row of the table: "timetables" */
  update_timetables_by_pk?: Maybe<Timetables>;
  /** update data of the table: "unit_lessons" */
  update_unit_lessons?: Maybe<Unit_Lessons_Mutation_Response>;
  /** update single row of the table: "unit_lessons" */
  update_unit_lessons_by_pk?: Maybe<Unit_Lessons>;
  /** update data of the table: "unit_quizzes" */
  update_unit_quizzes?: Maybe<Unit_Quizzes_Mutation_Response>;
  /** update single row of the table: "unit_quizzes" */
  update_unit_quizzes_by_pk?: Maybe<Unit_Quizzes>;
  /** update data of the table: "units" */
  update_units?: Maybe<Units_Mutation_Response>;
  /** update data of the table: "units_as_topics" */
  update_units_as_topics?: Maybe<Units_As_Topics_Mutation_Response>;
  /** update single row of the table: "units" */
  update_units_by_pk?: Maybe<Units>;
  /** update data of the table: "videos" */
  update_videos?: Maybe<Videos_Mutation_Response>;
  /** update single row of the table: "videos" */
  update_videos_by_pk?: Maybe<Videos>;
  /** update data of the table: "weeks" */
  update_weeks?: Maybe<Weeks_Mutation_Response>;
  /** update single row of the table: "weeks" */
  update_weeks_by_pk?: Maybe<Weeks>;
  /** update data of the table: "years" */
  update_years?: Maybe<Years_Mutation_Response>;
  /** update single row of the table: "years" */
  update_years_by_pk?: Maybe<Years>;
};


/** mutation root */
export type Mutation_RootDelete_Academic_YearsArgs = {
  where: Academic_Years_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Academic_Years_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Audit_Asset_Ingest_AuditsArgs = {
  where: Audit_Asset_Ingest_Audits_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Audit_Lesson_AuditsArgs = {
  where: Audit_Lesson_Audits_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_CaptionsArgs = {
  where: Captions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Captions_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_CohortsArgs = {
  where: Cohorts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Cohorts_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Curriculum_DocumentsArgs = {
  where: Curriculum_Documents_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Curriculum_Documents_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_CurriculumsArgs = {
  where: Curriculums_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Curriculums_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Curriculums_Programme_Of_StudyArgs = {
  where: Curriculums_Programme_Of_Study_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Curriculums_Programme_Of_Study_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_DaysArgs = {
  where: Days_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Days_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Field_Of_StudyArgs = {
  where: Field_Of_Study_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Field_Of_Study_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Ingest_Asset_IngestArgs = {
  where: Ingest_Asset_Ingest_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Ingest_Asset_Ingest_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Ingest_Forms_On_DriveArgs = {
  where: Ingest_Forms_On_Drive_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Ingest_Forms_On_Drive_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Ingest_Intro_Quiz_IngestArgs = {
  where: Ingest_Intro_Quiz_Ingest_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Ingest_Intro_Quiz_Ingest_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Ingest_Lesson_Video_IdsArgs = {
  where: Ingest_Lesson_Video_Ids_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Ingest_Lesson_Video_Ids_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Ingest_Quiz_IngestArgs = {
  where: Ingest_Quiz_Ingest_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Ingest_Quiz_Ingest_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Ingest_Video_IngestArgs = {
  where: Ingest_Video_Ingest_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Ingest_Video_Ingest_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Key_StagesArgs = {
  where: Key_Stages_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Key_Stages_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Lesson_QuizzesArgs = {
  where: Lesson_Quizzes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Quizzes_By_PkArgs = {
  lesson_id: Scalars['Int'];
  quiz_id: Scalars['Int'];
  type: Scalars['String'];
  unit_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_LessonsArgs = {
  where: Lessons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lessons_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Management_Asset_ReviewsArgs = {
  where: Management_Asset_Reviews_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Management_Asset_Reviews_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Management_Asset_TypesArgs = {
  where: Management_Asset_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Management_Asset_Types_By_PkArgs = {
  type: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Management_AssetsArgs = {
  where: Management_Assets_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Management_Assets_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Management_Lesson_QuizzesArgs = {
  where: Management_Lesson_Quizzes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Management_Lesson_Quizzes_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Management_Lesson_ReviewsArgs = {
  where: Management_Lesson_Reviews_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Management_Lesson_Reviews_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Management_LessonsArgs = {
  where: Management_Lessons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Management_Lessons_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Management_QuestionsArgs = {
  where: Management_Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Management_Questions_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Management_Quiz_QuestionsArgs = {
  where: Management_Quiz_Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Management_Quiz_Questions_By_PkArgs = {
  question_id: Scalars['Int'];
  quiz_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Management_Quiz_ReviewsArgs = {
  where: Management_Quiz_Reviews_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Management_Quiz_Reviews_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Management_QuizzesArgs = {
  where: Management_Quizzes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Management_Quizzes_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Management_ReviewsArgs = {
  where: Management_Reviews_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Management_Reviews_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Management_Unit_LessonsArgs = {
  where: Management_Unit_Lessons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Management_Unit_Lessons_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Management_Video_ReviewsArgs = {
  where: Management_Video_Reviews_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Management_Video_Reviews_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Management_VideosArgs = {
  where: Management_Videos_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Management_Videos_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Mv_All_Year_GroupsArgs = {
  where: Mv_All_Year_Groups_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Mv_DownloadsArgs = {
  where: Mv_Downloads_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Mv_Key_StagesArgs = {
  where: Mv_Key_Stages_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Mv_Learning_ThemesArgs = {
  where: Mv_Learning_Themes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Mv_LessonsArgs = {
  where: Mv_Lessons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Mv_QuestionsArgs = {
  where: Mv_Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Mv_QuizzesArgs = {
  where: Mv_Quizzes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Mv_SubjectsArgs = {
  where: Mv_Subjects_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Mv_TiersArgs = {
  where: Mv_Tiers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Mv_UnitsArgs = {
  where: Mv_Units_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Paper_TiersArgs = {
  where: Paper_Tiers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Paper_Tiers_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_PhasesArgs = {
  where: Phases_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Phases_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Programme_Of_StudyArgs = {
  where: Programme_Of_Study_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Programme_Of_Study_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Programme_Of_Study_UnitArgs = {
  where: Programme_Of_Study_Unit_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Programme_Of_Study_Unit_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_QuestionsArgs = {
  where: Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Questions_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Quiz_QuestionsArgs = {
  where: Quiz_Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Quiz_Questions_ArchiveArgs = {
  where: Quiz_Questions_Archive_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Quiz_Questions_By_PkArgs = {
  question_id: Scalars['Int'];
  quiz_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Quiz_TypesArgs = {
  where: Quiz_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Quiz_Types_By_PkArgs = {
  title: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_QuizzesArgs = {
  where: Quizzes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Quizzes_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Resource_TypesArgs = {
  where: Resource_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Resource_Types_By_PkArgs = {
  title: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Teacher_Field_Of_StudiesArgs = {
  where: Teacher_Field_Of_Studies_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Teacher_Field_Of_Studies_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Teacher_Key_StagesArgs = {
  where: Teacher_Key_Stages_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Teacher_Key_Stages_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Teacher_PhasesArgs = {
  where: Teacher_Phases_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Teacher_Phases_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Teacher_TherapiesArgs = {
  where: Teacher_Therapies_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Teacher_Therapies_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_TeachersArgs = {
  where: Teachers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Teachers_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_ThemesArgs = {
  where: Themes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Themes_As_TopicsArgs = {
  where: Themes_As_Topics_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Themes_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_TherapiesArgs = {
  where: Therapies_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Therapies_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Therapy_UnitsArgs = {
  where: Therapy_Units_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Therapy_Units_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Timetabled_LessonsArgs = {
  where: Timetabled_Lessons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Timetabled_Lessons_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Timetabled_WeeksArgs = {
  where: Timetabled_Weeks_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Timetabled_Weeks_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_TimetablesArgs = {
  where: Timetables_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Timetables_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Unit_LessonsArgs = {
  where: Unit_Lessons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Unit_Lessons_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Unit_QuizzesArgs = {
  where: Unit_Quizzes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Unit_Quizzes_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_UnitsArgs = {
  where: Units_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Units_As_TopicsArgs = {
  where: Units_As_Topics_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Units_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_VideosArgs = {
  where: Videos_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Videos_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_WeeksArgs = {
  where: Weeks_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Weeks_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_YearsArgs = {
  where: Years_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Years_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootInsert_Academic_YearsArgs = {
  objects: Array<Academic_Years_Insert_Input>;
  on_conflict?: InputMaybe<Academic_Years_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Academic_Years_OneArgs = {
  object: Academic_Years_Insert_Input;
  on_conflict?: InputMaybe<Academic_Years_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Audit_Asset_Ingest_AuditsArgs = {
  objects: Array<Audit_Asset_Ingest_Audits_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Audit_Asset_Ingest_Audits_OneArgs = {
  object: Audit_Asset_Ingest_Audits_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Audit_Lesson_AuditsArgs = {
  objects: Array<Audit_Lesson_Audits_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Audit_Lesson_Audits_OneArgs = {
  object: Audit_Lesson_Audits_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_CaptionsArgs = {
  objects: Array<Captions_Insert_Input>;
  on_conflict?: InputMaybe<Captions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Captions_OneArgs = {
  object: Captions_Insert_Input;
  on_conflict?: InputMaybe<Captions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_CohortsArgs = {
  objects: Array<Cohorts_Insert_Input>;
  on_conflict?: InputMaybe<Cohorts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Cohorts_OneArgs = {
  object: Cohorts_Insert_Input;
  on_conflict?: InputMaybe<Cohorts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Curriculum_DocumentsArgs = {
  objects: Array<Curriculum_Documents_Insert_Input>;
  on_conflict?: InputMaybe<Curriculum_Documents_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Curriculum_Documents_OneArgs = {
  object: Curriculum_Documents_Insert_Input;
  on_conflict?: InputMaybe<Curriculum_Documents_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_CurriculumsArgs = {
  objects: Array<Curriculums_Insert_Input>;
  on_conflict?: InputMaybe<Curriculums_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Curriculums_OneArgs = {
  object: Curriculums_Insert_Input;
  on_conflict?: InputMaybe<Curriculums_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Curriculums_Programme_Of_StudyArgs = {
  objects: Array<Curriculums_Programme_Of_Study_Insert_Input>;
  on_conflict?: InputMaybe<Curriculums_Programme_Of_Study_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Curriculums_Programme_Of_Study_OneArgs = {
  object: Curriculums_Programme_Of_Study_Insert_Input;
  on_conflict?: InputMaybe<Curriculums_Programme_Of_Study_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DaysArgs = {
  objects: Array<Days_Insert_Input>;
  on_conflict?: InputMaybe<Days_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Days_OneArgs = {
  object: Days_Insert_Input;
  on_conflict?: InputMaybe<Days_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Field_Of_StudyArgs = {
  objects: Array<Field_Of_Study_Insert_Input>;
  on_conflict?: InputMaybe<Field_Of_Study_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Field_Of_Study_OneArgs = {
  object: Field_Of_Study_Insert_Input;
  on_conflict?: InputMaybe<Field_Of_Study_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ingest_Asset_IngestArgs = {
  objects: Array<Ingest_Asset_Ingest_Insert_Input>;
  on_conflict?: InputMaybe<Ingest_Asset_Ingest_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ingest_Asset_Ingest_OneArgs = {
  object: Ingest_Asset_Ingest_Insert_Input;
  on_conflict?: InputMaybe<Ingest_Asset_Ingest_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ingest_Forms_On_DriveArgs = {
  objects: Array<Ingest_Forms_On_Drive_Insert_Input>;
  on_conflict?: InputMaybe<Ingest_Forms_On_Drive_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ingest_Forms_On_Drive_OneArgs = {
  object: Ingest_Forms_On_Drive_Insert_Input;
  on_conflict?: InputMaybe<Ingest_Forms_On_Drive_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ingest_Intro_Quiz_IngestArgs = {
  objects: Array<Ingest_Intro_Quiz_Ingest_Insert_Input>;
  on_conflict?: InputMaybe<Ingest_Intro_Quiz_Ingest_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ingest_Intro_Quiz_Ingest_OneArgs = {
  object: Ingest_Intro_Quiz_Ingest_Insert_Input;
  on_conflict?: InputMaybe<Ingest_Intro_Quiz_Ingest_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ingest_Lesson_Video_IdsArgs = {
  objects: Array<Ingest_Lesson_Video_Ids_Insert_Input>;
  on_conflict?: InputMaybe<Ingest_Lesson_Video_Ids_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ingest_Lesson_Video_Ids_OneArgs = {
  object: Ingest_Lesson_Video_Ids_Insert_Input;
  on_conflict?: InputMaybe<Ingest_Lesson_Video_Ids_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ingest_Quiz_IngestArgs = {
  objects: Array<Ingest_Quiz_Ingest_Insert_Input>;
  on_conflict?: InputMaybe<Ingest_Quiz_Ingest_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ingest_Quiz_Ingest_OneArgs = {
  object: Ingest_Quiz_Ingest_Insert_Input;
  on_conflict?: InputMaybe<Ingest_Quiz_Ingest_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ingest_Video_IngestArgs = {
  objects: Array<Ingest_Video_Ingest_Insert_Input>;
  on_conflict?: InputMaybe<Ingest_Video_Ingest_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ingest_Video_Ingest_OneArgs = {
  object: Ingest_Video_Ingest_Insert_Input;
  on_conflict?: InputMaybe<Ingest_Video_Ingest_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Key_StagesArgs = {
  objects: Array<Key_Stages_Insert_Input>;
  on_conflict?: InputMaybe<Key_Stages_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Key_Stages_OneArgs = {
  object: Key_Stages_Insert_Input;
  on_conflict?: InputMaybe<Key_Stages_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_QuizzesArgs = {
  objects: Array<Lesson_Quizzes_Insert_Input>;
  on_conflict?: InputMaybe<Lesson_Quizzes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Quizzes_OneArgs = {
  object: Lesson_Quizzes_Insert_Input;
  on_conflict?: InputMaybe<Lesson_Quizzes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_LessonsArgs = {
  objects: Array<Lessons_Insert_Input>;
  on_conflict?: InputMaybe<Lessons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lessons_OneArgs = {
  object: Lessons_Insert_Input;
  on_conflict?: InputMaybe<Lessons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Asset_ReviewsArgs = {
  objects: Array<Management_Asset_Reviews_Insert_Input>;
  on_conflict?: InputMaybe<Management_Asset_Reviews_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Asset_Reviews_OneArgs = {
  object: Management_Asset_Reviews_Insert_Input;
  on_conflict?: InputMaybe<Management_Asset_Reviews_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Asset_TypesArgs = {
  objects: Array<Management_Asset_Types_Insert_Input>;
  on_conflict?: InputMaybe<Management_Asset_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Asset_Types_OneArgs = {
  object: Management_Asset_Types_Insert_Input;
  on_conflict?: InputMaybe<Management_Asset_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_AssetsArgs = {
  objects: Array<Management_Assets_Insert_Input>;
  on_conflict?: InputMaybe<Management_Assets_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Assets_OneArgs = {
  object: Management_Assets_Insert_Input;
  on_conflict?: InputMaybe<Management_Assets_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Lesson_QuizzesArgs = {
  objects: Array<Management_Lesson_Quizzes_Insert_Input>;
  on_conflict?: InputMaybe<Management_Lesson_Quizzes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Lesson_Quizzes_OneArgs = {
  object: Management_Lesson_Quizzes_Insert_Input;
  on_conflict?: InputMaybe<Management_Lesson_Quizzes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Lesson_ReviewsArgs = {
  objects: Array<Management_Lesson_Reviews_Insert_Input>;
  on_conflict?: InputMaybe<Management_Lesson_Reviews_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Lesson_Reviews_OneArgs = {
  object: Management_Lesson_Reviews_Insert_Input;
  on_conflict?: InputMaybe<Management_Lesson_Reviews_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_LessonsArgs = {
  objects: Array<Management_Lessons_Insert_Input>;
  on_conflict?: InputMaybe<Management_Lessons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Lessons_OneArgs = {
  object: Management_Lessons_Insert_Input;
  on_conflict?: InputMaybe<Management_Lessons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_QuestionsArgs = {
  objects: Array<Management_Questions_Insert_Input>;
  on_conflict?: InputMaybe<Management_Questions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Questions_OneArgs = {
  object: Management_Questions_Insert_Input;
  on_conflict?: InputMaybe<Management_Questions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Quiz_QuestionsArgs = {
  objects: Array<Management_Quiz_Questions_Insert_Input>;
  on_conflict?: InputMaybe<Management_Quiz_Questions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Quiz_Questions_OneArgs = {
  object: Management_Quiz_Questions_Insert_Input;
  on_conflict?: InputMaybe<Management_Quiz_Questions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Quiz_ReviewsArgs = {
  objects: Array<Management_Quiz_Reviews_Insert_Input>;
  on_conflict?: InputMaybe<Management_Quiz_Reviews_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Quiz_Reviews_OneArgs = {
  object: Management_Quiz_Reviews_Insert_Input;
  on_conflict?: InputMaybe<Management_Quiz_Reviews_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_QuizzesArgs = {
  objects: Array<Management_Quizzes_Insert_Input>;
  on_conflict?: InputMaybe<Management_Quizzes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Quizzes_OneArgs = {
  object: Management_Quizzes_Insert_Input;
  on_conflict?: InputMaybe<Management_Quizzes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_ReviewsArgs = {
  objects: Array<Management_Reviews_Insert_Input>;
  on_conflict?: InputMaybe<Management_Reviews_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Reviews_OneArgs = {
  object: Management_Reviews_Insert_Input;
  on_conflict?: InputMaybe<Management_Reviews_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Unit_LessonsArgs = {
  objects: Array<Management_Unit_Lessons_Insert_Input>;
  on_conflict?: InputMaybe<Management_Unit_Lessons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Unit_Lessons_OneArgs = {
  object: Management_Unit_Lessons_Insert_Input;
  on_conflict?: InputMaybe<Management_Unit_Lessons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Video_ReviewsArgs = {
  objects: Array<Management_Video_Reviews_Insert_Input>;
  on_conflict?: InputMaybe<Management_Video_Reviews_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Video_Reviews_OneArgs = {
  object: Management_Video_Reviews_Insert_Input;
  on_conflict?: InputMaybe<Management_Video_Reviews_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_VideosArgs = {
  objects: Array<Management_Videos_Insert_Input>;
  on_conflict?: InputMaybe<Management_Videos_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Management_Videos_OneArgs = {
  object: Management_Videos_Insert_Input;
  on_conflict?: InputMaybe<Management_Videos_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Mv_All_Year_GroupsArgs = {
  objects: Array<Mv_All_Year_Groups_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Mv_All_Year_Groups_OneArgs = {
  object: Mv_All_Year_Groups_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Mv_DownloadsArgs = {
  objects: Array<Mv_Downloads_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Mv_Downloads_OneArgs = {
  object: Mv_Downloads_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Mv_Key_StagesArgs = {
  objects: Array<Mv_Key_Stages_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Mv_Key_Stages_OneArgs = {
  object: Mv_Key_Stages_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Mv_Learning_ThemesArgs = {
  objects: Array<Mv_Learning_Themes_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Mv_Learning_Themes_OneArgs = {
  object: Mv_Learning_Themes_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Mv_LessonsArgs = {
  objects: Array<Mv_Lessons_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Mv_Lessons_OneArgs = {
  object: Mv_Lessons_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Mv_QuestionsArgs = {
  objects: Array<Mv_Questions_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Mv_Questions_OneArgs = {
  object: Mv_Questions_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Mv_QuizzesArgs = {
  objects: Array<Mv_Quizzes_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Mv_Quizzes_OneArgs = {
  object: Mv_Quizzes_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Mv_SubjectsArgs = {
  objects: Array<Mv_Subjects_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Mv_Subjects_OneArgs = {
  object: Mv_Subjects_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Mv_TiersArgs = {
  objects: Array<Mv_Tiers_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Mv_Tiers_OneArgs = {
  object: Mv_Tiers_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Mv_UnitsArgs = {
  objects: Array<Mv_Units_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Mv_Units_OneArgs = {
  object: Mv_Units_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Paper_TiersArgs = {
  objects: Array<Paper_Tiers_Insert_Input>;
  on_conflict?: InputMaybe<Paper_Tiers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Paper_Tiers_OneArgs = {
  object: Paper_Tiers_Insert_Input;
  on_conflict?: InputMaybe<Paper_Tiers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_PhasesArgs = {
  objects: Array<Phases_Insert_Input>;
  on_conflict?: InputMaybe<Phases_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Phases_OneArgs = {
  object: Phases_Insert_Input;
  on_conflict?: InputMaybe<Phases_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Programme_Of_StudyArgs = {
  objects: Array<Programme_Of_Study_Insert_Input>;
  on_conflict?: InputMaybe<Programme_Of_Study_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Programme_Of_Study_OneArgs = {
  object: Programme_Of_Study_Insert_Input;
  on_conflict?: InputMaybe<Programme_Of_Study_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Programme_Of_Study_UnitArgs = {
  objects: Array<Programme_Of_Study_Unit_Insert_Input>;
  on_conflict?: InputMaybe<Programme_Of_Study_Unit_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Programme_Of_Study_Unit_OneArgs = {
  object: Programme_Of_Study_Unit_Insert_Input;
  on_conflict?: InputMaybe<Programme_Of_Study_Unit_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_QuestionsArgs = {
  objects: Array<Questions_Insert_Input>;
  on_conflict?: InputMaybe<Questions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Questions_OneArgs = {
  object: Questions_Insert_Input;
  on_conflict?: InputMaybe<Questions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Quiz_QuestionsArgs = {
  objects: Array<Quiz_Questions_Insert_Input>;
  on_conflict?: InputMaybe<Quiz_Questions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Quiz_Questions_ArchiveArgs = {
  objects: Array<Quiz_Questions_Archive_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Quiz_Questions_Archive_OneArgs = {
  object: Quiz_Questions_Archive_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Quiz_Questions_OneArgs = {
  object: Quiz_Questions_Insert_Input;
  on_conflict?: InputMaybe<Quiz_Questions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Quiz_TypesArgs = {
  objects: Array<Quiz_Types_Insert_Input>;
  on_conflict?: InputMaybe<Quiz_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Quiz_Types_OneArgs = {
  object: Quiz_Types_Insert_Input;
  on_conflict?: InputMaybe<Quiz_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_QuizzesArgs = {
  objects: Array<Quizzes_Insert_Input>;
  on_conflict?: InputMaybe<Quizzes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Quizzes_OneArgs = {
  object: Quizzes_Insert_Input;
  on_conflict?: InputMaybe<Quizzes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Resource_TypesArgs = {
  objects: Array<Resource_Types_Insert_Input>;
  on_conflict?: InputMaybe<Resource_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Resource_Types_OneArgs = {
  object: Resource_Types_Insert_Input;
  on_conflict?: InputMaybe<Resource_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Teacher_Field_Of_StudiesArgs = {
  objects: Array<Teacher_Field_Of_Studies_Insert_Input>;
  on_conflict?: InputMaybe<Teacher_Field_Of_Studies_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Teacher_Field_Of_Studies_OneArgs = {
  object: Teacher_Field_Of_Studies_Insert_Input;
  on_conflict?: InputMaybe<Teacher_Field_Of_Studies_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Teacher_Key_StagesArgs = {
  objects: Array<Teacher_Key_Stages_Insert_Input>;
  on_conflict?: InputMaybe<Teacher_Key_Stages_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Teacher_Key_Stages_OneArgs = {
  object: Teacher_Key_Stages_Insert_Input;
  on_conflict?: InputMaybe<Teacher_Key_Stages_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Teacher_PhasesArgs = {
  objects: Array<Teacher_Phases_Insert_Input>;
  on_conflict?: InputMaybe<Teacher_Phases_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Teacher_Phases_OneArgs = {
  object: Teacher_Phases_Insert_Input;
  on_conflict?: InputMaybe<Teacher_Phases_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Teacher_TherapiesArgs = {
  objects: Array<Teacher_Therapies_Insert_Input>;
  on_conflict?: InputMaybe<Teacher_Therapies_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Teacher_Therapies_OneArgs = {
  object: Teacher_Therapies_Insert_Input;
  on_conflict?: InputMaybe<Teacher_Therapies_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TeachersArgs = {
  objects: Array<Teachers_Insert_Input>;
  on_conflict?: InputMaybe<Teachers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Teachers_OneArgs = {
  object: Teachers_Insert_Input;
  on_conflict?: InputMaybe<Teachers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ThemesArgs = {
  objects: Array<Themes_Insert_Input>;
  on_conflict?: InputMaybe<Themes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Themes_As_TopicsArgs = {
  objects: Array<Themes_As_Topics_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Themes_As_Topics_OneArgs = {
  object: Themes_As_Topics_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Themes_OneArgs = {
  object: Themes_Insert_Input;
  on_conflict?: InputMaybe<Themes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TherapiesArgs = {
  objects: Array<Therapies_Insert_Input>;
  on_conflict?: InputMaybe<Therapies_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Therapies_OneArgs = {
  object: Therapies_Insert_Input;
  on_conflict?: InputMaybe<Therapies_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Therapy_UnitsArgs = {
  objects: Array<Therapy_Units_Insert_Input>;
  on_conflict?: InputMaybe<Therapy_Units_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Therapy_Units_OneArgs = {
  object: Therapy_Units_Insert_Input;
  on_conflict?: InputMaybe<Therapy_Units_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Timetabled_LessonsArgs = {
  objects: Array<Timetabled_Lessons_Insert_Input>;
  on_conflict?: InputMaybe<Timetabled_Lessons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Timetabled_Lessons_OneArgs = {
  object: Timetabled_Lessons_Insert_Input;
  on_conflict?: InputMaybe<Timetabled_Lessons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Timetabled_WeeksArgs = {
  objects: Array<Timetabled_Weeks_Insert_Input>;
  on_conflict?: InputMaybe<Timetabled_Weeks_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Timetabled_Weeks_OneArgs = {
  object: Timetabled_Weeks_Insert_Input;
  on_conflict?: InputMaybe<Timetabled_Weeks_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TimetablesArgs = {
  objects: Array<Timetables_Insert_Input>;
  on_conflict?: InputMaybe<Timetables_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Timetables_OneArgs = {
  object: Timetables_Insert_Input;
  on_conflict?: InputMaybe<Timetables_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Unit_LessonsArgs = {
  objects: Array<Unit_Lessons_Insert_Input>;
  on_conflict?: InputMaybe<Unit_Lessons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Unit_Lessons_OneArgs = {
  object: Unit_Lessons_Insert_Input;
  on_conflict?: InputMaybe<Unit_Lessons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Unit_QuizzesArgs = {
  objects: Array<Unit_Quizzes_Insert_Input>;
  on_conflict?: InputMaybe<Unit_Quizzes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Unit_Quizzes_OneArgs = {
  object: Unit_Quizzes_Insert_Input;
  on_conflict?: InputMaybe<Unit_Quizzes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_UnitsArgs = {
  objects: Array<Units_Insert_Input>;
  on_conflict?: InputMaybe<Units_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Units_As_TopicsArgs = {
  objects: Array<Units_As_Topics_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Units_As_Topics_OneArgs = {
  object: Units_As_Topics_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Units_OneArgs = {
  object: Units_Insert_Input;
  on_conflict?: InputMaybe<Units_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_VideosArgs = {
  objects: Array<Videos_Insert_Input>;
  on_conflict?: InputMaybe<Videos_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Videos_OneArgs = {
  object: Videos_Insert_Input;
  on_conflict?: InputMaybe<Videos_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_WeeksArgs = {
  objects: Array<Weeks_Insert_Input>;
  on_conflict?: InputMaybe<Weeks_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Weeks_OneArgs = {
  object: Weeks_Insert_Input;
  on_conflict?: InputMaybe<Weeks_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_YearsArgs = {
  objects: Array<Years_Insert_Input>;
  on_conflict?: InputMaybe<Years_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Years_OneArgs = {
  object: Years_Insert_Input;
  on_conflict?: InputMaybe<Years_On_Conflict>;
};


/** mutation root */
export type Mutation_RootUpdate_Academic_YearsArgs = {
  _inc?: InputMaybe<Academic_Years_Inc_Input>;
  _set?: InputMaybe<Academic_Years_Set_Input>;
  where: Academic_Years_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Academic_Years_By_PkArgs = {
  _inc?: InputMaybe<Academic_Years_Inc_Input>;
  _set?: InputMaybe<Academic_Years_Set_Input>;
  pk_columns: Academic_Years_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Audit_Asset_Ingest_AuditsArgs = {
  _inc?: InputMaybe<Audit_Asset_Ingest_Audits_Inc_Input>;
  _set?: InputMaybe<Audit_Asset_Ingest_Audits_Set_Input>;
  where: Audit_Asset_Ingest_Audits_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Audit_Lesson_AuditsArgs = {
  _inc?: InputMaybe<Audit_Lesson_Audits_Inc_Input>;
  _set?: InputMaybe<Audit_Lesson_Audits_Set_Input>;
  where: Audit_Lesson_Audits_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_CaptionsArgs = {
  _inc?: InputMaybe<Captions_Inc_Input>;
  _set?: InputMaybe<Captions_Set_Input>;
  where: Captions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Captions_By_PkArgs = {
  _inc?: InputMaybe<Captions_Inc_Input>;
  _set?: InputMaybe<Captions_Set_Input>;
  pk_columns: Captions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_CohortsArgs = {
  _inc?: InputMaybe<Cohorts_Inc_Input>;
  _set?: InputMaybe<Cohorts_Set_Input>;
  where: Cohorts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Cohorts_By_PkArgs = {
  _inc?: InputMaybe<Cohorts_Inc_Input>;
  _set?: InputMaybe<Cohorts_Set_Input>;
  pk_columns: Cohorts_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Curriculum_DocumentsArgs = {
  _set?: InputMaybe<Curriculum_Documents_Set_Input>;
  where: Curriculum_Documents_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Curriculum_Documents_By_PkArgs = {
  _set?: InputMaybe<Curriculum_Documents_Set_Input>;
  pk_columns: Curriculum_Documents_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_CurriculumsArgs = {
  _inc?: InputMaybe<Curriculums_Inc_Input>;
  _set?: InputMaybe<Curriculums_Set_Input>;
  where: Curriculums_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Curriculums_By_PkArgs = {
  _inc?: InputMaybe<Curriculums_Inc_Input>;
  _set?: InputMaybe<Curriculums_Set_Input>;
  pk_columns: Curriculums_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Curriculums_Programme_Of_StudyArgs = {
  _inc?: InputMaybe<Curriculums_Programme_Of_Study_Inc_Input>;
  _set?: InputMaybe<Curriculums_Programme_Of_Study_Set_Input>;
  where: Curriculums_Programme_Of_Study_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Curriculums_Programme_Of_Study_By_PkArgs = {
  _inc?: InputMaybe<Curriculums_Programme_Of_Study_Inc_Input>;
  _set?: InputMaybe<Curriculums_Programme_Of_Study_Set_Input>;
  pk_columns: Curriculums_Programme_Of_Study_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DaysArgs = {
  _inc?: InputMaybe<Days_Inc_Input>;
  _set?: InputMaybe<Days_Set_Input>;
  where: Days_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Days_By_PkArgs = {
  _inc?: InputMaybe<Days_Inc_Input>;
  _set?: InputMaybe<Days_Set_Input>;
  pk_columns: Days_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Field_Of_StudyArgs = {
  _inc?: InputMaybe<Field_Of_Study_Inc_Input>;
  _set?: InputMaybe<Field_Of_Study_Set_Input>;
  where: Field_Of_Study_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Field_Of_Study_By_PkArgs = {
  _inc?: InputMaybe<Field_Of_Study_Inc_Input>;
  _set?: InputMaybe<Field_Of_Study_Set_Input>;
  pk_columns: Field_Of_Study_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Ingest_Asset_IngestArgs = {
  _inc?: InputMaybe<Ingest_Asset_Ingest_Inc_Input>;
  _set?: InputMaybe<Ingest_Asset_Ingest_Set_Input>;
  where: Ingest_Asset_Ingest_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Ingest_Asset_Ingest_By_PkArgs = {
  _inc?: InputMaybe<Ingest_Asset_Ingest_Inc_Input>;
  _set?: InputMaybe<Ingest_Asset_Ingest_Set_Input>;
  pk_columns: Ingest_Asset_Ingest_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Ingest_Forms_On_DriveArgs = {
  _inc?: InputMaybe<Ingest_Forms_On_Drive_Inc_Input>;
  _set?: InputMaybe<Ingest_Forms_On_Drive_Set_Input>;
  where: Ingest_Forms_On_Drive_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Ingest_Forms_On_Drive_By_PkArgs = {
  _inc?: InputMaybe<Ingest_Forms_On_Drive_Inc_Input>;
  _set?: InputMaybe<Ingest_Forms_On_Drive_Set_Input>;
  pk_columns: Ingest_Forms_On_Drive_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Ingest_Intro_Quiz_IngestArgs = {
  _inc?: InputMaybe<Ingest_Intro_Quiz_Ingest_Inc_Input>;
  _set?: InputMaybe<Ingest_Intro_Quiz_Ingest_Set_Input>;
  where: Ingest_Intro_Quiz_Ingest_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Ingest_Intro_Quiz_Ingest_By_PkArgs = {
  _inc?: InputMaybe<Ingest_Intro_Quiz_Ingest_Inc_Input>;
  _set?: InputMaybe<Ingest_Intro_Quiz_Ingest_Set_Input>;
  pk_columns: Ingest_Intro_Quiz_Ingest_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Ingest_Lesson_Video_IdsArgs = {
  _inc?: InputMaybe<Ingest_Lesson_Video_Ids_Inc_Input>;
  _set?: InputMaybe<Ingest_Lesson_Video_Ids_Set_Input>;
  where: Ingest_Lesson_Video_Ids_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Ingest_Lesson_Video_Ids_By_PkArgs = {
  _inc?: InputMaybe<Ingest_Lesson_Video_Ids_Inc_Input>;
  _set?: InputMaybe<Ingest_Lesson_Video_Ids_Set_Input>;
  pk_columns: Ingest_Lesson_Video_Ids_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Ingest_Quiz_IngestArgs = {
  _inc?: InputMaybe<Ingest_Quiz_Ingest_Inc_Input>;
  _set?: InputMaybe<Ingest_Quiz_Ingest_Set_Input>;
  where: Ingest_Quiz_Ingest_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Ingest_Quiz_Ingest_By_PkArgs = {
  _inc?: InputMaybe<Ingest_Quiz_Ingest_Inc_Input>;
  _set?: InputMaybe<Ingest_Quiz_Ingest_Set_Input>;
  pk_columns: Ingest_Quiz_Ingest_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Ingest_Video_IngestArgs = {
  _append?: InputMaybe<Ingest_Video_Ingest_Append_Input>;
  _delete_at_path?: InputMaybe<Ingest_Video_Ingest_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Ingest_Video_Ingest_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Ingest_Video_Ingest_Delete_Key_Input>;
  _inc?: InputMaybe<Ingest_Video_Ingest_Inc_Input>;
  _prepend?: InputMaybe<Ingest_Video_Ingest_Prepend_Input>;
  _set?: InputMaybe<Ingest_Video_Ingest_Set_Input>;
  where: Ingest_Video_Ingest_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Ingest_Video_Ingest_By_PkArgs = {
  _append?: InputMaybe<Ingest_Video_Ingest_Append_Input>;
  _delete_at_path?: InputMaybe<Ingest_Video_Ingest_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Ingest_Video_Ingest_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Ingest_Video_Ingest_Delete_Key_Input>;
  _inc?: InputMaybe<Ingest_Video_Ingest_Inc_Input>;
  _prepend?: InputMaybe<Ingest_Video_Ingest_Prepend_Input>;
  _set?: InputMaybe<Ingest_Video_Ingest_Set_Input>;
  pk_columns: Ingest_Video_Ingest_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Key_StagesArgs = {
  _inc?: InputMaybe<Key_Stages_Inc_Input>;
  _set?: InputMaybe<Key_Stages_Set_Input>;
  where: Key_Stages_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Key_Stages_By_PkArgs = {
  _inc?: InputMaybe<Key_Stages_Inc_Input>;
  _set?: InputMaybe<Key_Stages_Set_Input>;
  pk_columns: Key_Stages_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_QuizzesArgs = {
  _inc?: InputMaybe<Lesson_Quizzes_Inc_Input>;
  _set?: InputMaybe<Lesson_Quizzes_Set_Input>;
  where: Lesson_Quizzes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Quizzes_By_PkArgs = {
  _inc?: InputMaybe<Lesson_Quizzes_Inc_Input>;
  _set?: InputMaybe<Lesson_Quizzes_Set_Input>;
  pk_columns: Lesson_Quizzes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_LessonsArgs = {
  _inc?: InputMaybe<Lessons_Inc_Input>;
  _set?: InputMaybe<Lessons_Set_Input>;
  where: Lessons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lessons_By_PkArgs = {
  _inc?: InputMaybe<Lessons_Inc_Input>;
  _set?: InputMaybe<Lessons_Set_Input>;
  pk_columns: Lessons_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Asset_ReviewsArgs = {
  _inc?: InputMaybe<Management_Asset_Reviews_Inc_Input>;
  _set?: InputMaybe<Management_Asset_Reviews_Set_Input>;
  where: Management_Asset_Reviews_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Asset_Reviews_By_PkArgs = {
  _inc?: InputMaybe<Management_Asset_Reviews_Inc_Input>;
  _set?: InputMaybe<Management_Asset_Reviews_Set_Input>;
  pk_columns: Management_Asset_Reviews_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Asset_TypesArgs = {
  _set?: InputMaybe<Management_Asset_Types_Set_Input>;
  where: Management_Asset_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Asset_Types_By_PkArgs = {
  _set?: InputMaybe<Management_Asset_Types_Set_Input>;
  pk_columns: Management_Asset_Types_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Management_AssetsArgs = {
  _inc?: InputMaybe<Management_Assets_Inc_Input>;
  _set?: InputMaybe<Management_Assets_Set_Input>;
  where: Management_Assets_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Assets_By_PkArgs = {
  _inc?: InputMaybe<Management_Assets_Inc_Input>;
  _set?: InputMaybe<Management_Assets_Set_Input>;
  pk_columns: Management_Assets_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Lesson_QuizzesArgs = {
  _inc?: InputMaybe<Management_Lesson_Quizzes_Inc_Input>;
  _set?: InputMaybe<Management_Lesson_Quizzes_Set_Input>;
  where: Management_Lesson_Quizzes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Lesson_Quizzes_By_PkArgs = {
  _inc?: InputMaybe<Management_Lesson_Quizzes_Inc_Input>;
  _set?: InputMaybe<Management_Lesson_Quizzes_Set_Input>;
  pk_columns: Management_Lesson_Quizzes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Lesson_ReviewsArgs = {
  _inc?: InputMaybe<Management_Lesson_Reviews_Inc_Input>;
  _set?: InputMaybe<Management_Lesson_Reviews_Set_Input>;
  where: Management_Lesson_Reviews_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Lesson_Reviews_By_PkArgs = {
  _inc?: InputMaybe<Management_Lesson_Reviews_Inc_Input>;
  _set?: InputMaybe<Management_Lesson_Reviews_Set_Input>;
  pk_columns: Management_Lesson_Reviews_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Management_LessonsArgs = {
  _inc?: InputMaybe<Management_Lessons_Inc_Input>;
  _set?: InputMaybe<Management_Lessons_Set_Input>;
  where: Management_Lessons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Lessons_By_PkArgs = {
  _inc?: InputMaybe<Management_Lessons_Inc_Input>;
  _set?: InputMaybe<Management_Lessons_Set_Input>;
  pk_columns: Management_Lessons_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Management_QuestionsArgs = {
  _inc?: InputMaybe<Management_Questions_Inc_Input>;
  _set?: InputMaybe<Management_Questions_Set_Input>;
  where: Management_Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Questions_By_PkArgs = {
  _inc?: InputMaybe<Management_Questions_Inc_Input>;
  _set?: InputMaybe<Management_Questions_Set_Input>;
  pk_columns: Management_Questions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Quiz_QuestionsArgs = {
  _inc?: InputMaybe<Management_Quiz_Questions_Inc_Input>;
  _set?: InputMaybe<Management_Quiz_Questions_Set_Input>;
  where: Management_Quiz_Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Quiz_Questions_By_PkArgs = {
  _inc?: InputMaybe<Management_Quiz_Questions_Inc_Input>;
  _set?: InputMaybe<Management_Quiz_Questions_Set_Input>;
  pk_columns: Management_Quiz_Questions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Quiz_ReviewsArgs = {
  _inc?: InputMaybe<Management_Quiz_Reviews_Inc_Input>;
  _set?: InputMaybe<Management_Quiz_Reviews_Set_Input>;
  where: Management_Quiz_Reviews_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Quiz_Reviews_By_PkArgs = {
  _inc?: InputMaybe<Management_Quiz_Reviews_Inc_Input>;
  _set?: InputMaybe<Management_Quiz_Reviews_Set_Input>;
  pk_columns: Management_Quiz_Reviews_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Management_QuizzesArgs = {
  _inc?: InputMaybe<Management_Quizzes_Inc_Input>;
  _set?: InputMaybe<Management_Quizzes_Set_Input>;
  where: Management_Quizzes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Quizzes_By_PkArgs = {
  _inc?: InputMaybe<Management_Quizzes_Inc_Input>;
  _set?: InputMaybe<Management_Quizzes_Set_Input>;
  pk_columns: Management_Quizzes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Management_ReviewsArgs = {
  _inc?: InputMaybe<Management_Reviews_Inc_Input>;
  _set?: InputMaybe<Management_Reviews_Set_Input>;
  where: Management_Reviews_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Reviews_By_PkArgs = {
  _inc?: InputMaybe<Management_Reviews_Inc_Input>;
  _set?: InputMaybe<Management_Reviews_Set_Input>;
  pk_columns: Management_Reviews_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Unit_LessonsArgs = {
  _inc?: InputMaybe<Management_Unit_Lessons_Inc_Input>;
  _set?: InputMaybe<Management_Unit_Lessons_Set_Input>;
  where: Management_Unit_Lessons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Unit_Lessons_By_PkArgs = {
  _inc?: InputMaybe<Management_Unit_Lessons_Inc_Input>;
  _set?: InputMaybe<Management_Unit_Lessons_Set_Input>;
  pk_columns: Management_Unit_Lessons_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Video_ReviewsArgs = {
  _inc?: InputMaybe<Management_Video_Reviews_Inc_Input>;
  _set?: InputMaybe<Management_Video_Reviews_Set_Input>;
  where: Management_Video_Reviews_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Video_Reviews_By_PkArgs = {
  _inc?: InputMaybe<Management_Video_Reviews_Inc_Input>;
  _set?: InputMaybe<Management_Video_Reviews_Set_Input>;
  pk_columns: Management_Video_Reviews_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Management_VideosArgs = {
  _set?: InputMaybe<Management_Videos_Set_Input>;
  where: Management_Videos_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Management_Videos_By_PkArgs = {
  _set?: InputMaybe<Management_Videos_Set_Input>;
  pk_columns: Management_Videos_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Mv_All_Year_GroupsArgs = {
  _set?: InputMaybe<Mv_All_Year_Groups_Set_Input>;
  where: Mv_All_Year_Groups_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Mv_DownloadsArgs = {
  _set?: InputMaybe<Mv_Downloads_Set_Input>;
  where: Mv_Downloads_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Mv_Key_StagesArgs = {
  _set?: InputMaybe<Mv_Key_Stages_Set_Input>;
  where: Mv_Key_Stages_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Mv_Learning_ThemesArgs = {
  _inc?: InputMaybe<Mv_Learning_Themes_Inc_Input>;
  _set?: InputMaybe<Mv_Learning_Themes_Set_Input>;
  where: Mv_Learning_Themes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Mv_LessonsArgs = {
  _inc?: InputMaybe<Mv_Lessons_Inc_Input>;
  _set?: InputMaybe<Mv_Lessons_Set_Input>;
  where: Mv_Lessons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Mv_QuestionsArgs = {
  _inc?: InputMaybe<Mv_Questions_Inc_Input>;
  _set?: InputMaybe<Mv_Questions_Set_Input>;
  where: Mv_Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Mv_QuizzesArgs = {
  _inc?: InputMaybe<Mv_Quizzes_Inc_Input>;
  _set?: InputMaybe<Mv_Quizzes_Set_Input>;
  where: Mv_Quizzes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Mv_SubjectsArgs = {
  _inc?: InputMaybe<Mv_Subjects_Inc_Input>;
  _set?: InputMaybe<Mv_Subjects_Set_Input>;
  where: Mv_Subjects_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Mv_TiersArgs = {
  _inc?: InputMaybe<Mv_Tiers_Inc_Input>;
  _set?: InputMaybe<Mv_Tiers_Set_Input>;
  where: Mv_Tiers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Mv_UnitsArgs = {
  _inc?: InputMaybe<Mv_Units_Inc_Input>;
  _set?: InputMaybe<Mv_Units_Set_Input>;
  where: Mv_Units_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Paper_TiersArgs = {
  _inc?: InputMaybe<Paper_Tiers_Inc_Input>;
  _set?: InputMaybe<Paper_Tiers_Set_Input>;
  where: Paper_Tiers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Paper_Tiers_By_PkArgs = {
  _inc?: InputMaybe<Paper_Tiers_Inc_Input>;
  _set?: InputMaybe<Paper_Tiers_Set_Input>;
  pk_columns: Paper_Tiers_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_PhasesArgs = {
  _inc?: InputMaybe<Phases_Inc_Input>;
  _set?: InputMaybe<Phases_Set_Input>;
  where: Phases_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Phases_By_PkArgs = {
  _inc?: InputMaybe<Phases_Inc_Input>;
  _set?: InputMaybe<Phases_Set_Input>;
  pk_columns: Phases_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Programme_Of_StudyArgs = {
  _inc?: InputMaybe<Programme_Of_Study_Inc_Input>;
  _set?: InputMaybe<Programme_Of_Study_Set_Input>;
  where: Programme_Of_Study_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Programme_Of_Study_By_PkArgs = {
  _inc?: InputMaybe<Programme_Of_Study_Inc_Input>;
  _set?: InputMaybe<Programme_Of_Study_Set_Input>;
  pk_columns: Programme_Of_Study_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Programme_Of_Study_UnitArgs = {
  _inc?: InputMaybe<Programme_Of_Study_Unit_Inc_Input>;
  _set?: InputMaybe<Programme_Of_Study_Unit_Set_Input>;
  where: Programme_Of_Study_Unit_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Programme_Of_Study_Unit_By_PkArgs = {
  _inc?: InputMaybe<Programme_Of_Study_Unit_Inc_Input>;
  _set?: InputMaybe<Programme_Of_Study_Unit_Set_Input>;
  pk_columns: Programme_Of_Study_Unit_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_QuestionsArgs = {
  _inc?: InputMaybe<Questions_Inc_Input>;
  _set?: InputMaybe<Questions_Set_Input>;
  where: Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Questions_By_PkArgs = {
  _inc?: InputMaybe<Questions_Inc_Input>;
  _set?: InputMaybe<Questions_Set_Input>;
  pk_columns: Questions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Quiz_QuestionsArgs = {
  _inc?: InputMaybe<Quiz_Questions_Inc_Input>;
  _set?: InputMaybe<Quiz_Questions_Set_Input>;
  where: Quiz_Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Quiz_Questions_ArchiveArgs = {
  _inc?: InputMaybe<Quiz_Questions_Archive_Inc_Input>;
  _set?: InputMaybe<Quiz_Questions_Archive_Set_Input>;
  where: Quiz_Questions_Archive_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Quiz_Questions_By_PkArgs = {
  _inc?: InputMaybe<Quiz_Questions_Inc_Input>;
  _set?: InputMaybe<Quiz_Questions_Set_Input>;
  pk_columns: Quiz_Questions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Quiz_TypesArgs = {
  _set?: InputMaybe<Quiz_Types_Set_Input>;
  where: Quiz_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Quiz_Types_By_PkArgs = {
  _set?: InputMaybe<Quiz_Types_Set_Input>;
  pk_columns: Quiz_Types_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_QuizzesArgs = {
  _inc?: InputMaybe<Quizzes_Inc_Input>;
  _set?: InputMaybe<Quizzes_Set_Input>;
  where: Quizzes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Quizzes_By_PkArgs = {
  _inc?: InputMaybe<Quizzes_Inc_Input>;
  _set?: InputMaybe<Quizzes_Set_Input>;
  pk_columns: Quizzes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Resource_TypesArgs = {
  _set?: InputMaybe<Resource_Types_Set_Input>;
  where: Resource_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Resource_Types_By_PkArgs = {
  _set?: InputMaybe<Resource_Types_Set_Input>;
  pk_columns: Resource_Types_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Teacher_Field_Of_StudiesArgs = {
  _inc?: InputMaybe<Teacher_Field_Of_Studies_Inc_Input>;
  _set?: InputMaybe<Teacher_Field_Of_Studies_Set_Input>;
  where: Teacher_Field_Of_Studies_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Teacher_Field_Of_Studies_By_PkArgs = {
  _inc?: InputMaybe<Teacher_Field_Of_Studies_Inc_Input>;
  _set?: InputMaybe<Teacher_Field_Of_Studies_Set_Input>;
  pk_columns: Teacher_Field_Of_Studies_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Teacher_Key_StagesArgs = {
  _inc?: InputMaybe<Teacher_Key_Stages_Inc_Input>;
  _set?: InputMaybe<Teacher_Key_Stages_Set_Input>;
  where: Teacher_Key_Stages_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Teacher_Key_Stages_By_PkArgs = {
  _inc?: InputMaybe<Teacher_Key_Stages_Inc_Input>;
  _set?: InputMaybe<Teacher_Key_Stages_Set_Input>;
  pk_columns: Teacher_Key_Stages_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Teacher_PhasesArgs = {
  _inc?: InputMaybe<Teacher_Phases_Inc_Input>;
  _set?: InputMaybe<Teacher_Phases_Set_Input>;
  where: Teacher_Phases_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Teacher_Phases_By_PkArgs = {
  _inc?: InputMaybe<Teacher_Phases_Inc_Input>;
  _set?: InputMaybe<Teacher_Phases_Set_Input>;
  pk_columns: Teacher_Phases_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Teacher_TherapiesArgs = {
  _inc?: InputMaybe<Teacher_Therapies_Inc_Input>;
  _set?: InputMaybe<Teacher_Therapies_Set_Input>;
  where: Teacher_Therapies_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Teacher_Therapies_By_PkArgs = {
  _inc?: InputMaybe<Teacher_Therapies_Inc_Input>;
  _set?: InputMaybe<Teacher_Therapies_Set_Input>;
  pk_columns: Teacher_Therapies_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TeachersArgs = {
  _inc?: InputMaybe<Teachers_Inc_Input>;
  _set?: InputMaybe<Teachers_Set_Input>;
  where: Teachers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Teachers_By_PkArgs = {
  _inc?: InputMaybe<Teachers_Inc_Input>;
  _set?: InputMaybe<Teachers_Set_Input>;
  pk_columns: Teachers_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ThemesArgs = {
  _inc?: InputMaybe<Themes_Inc_Input>;
  _set?: InputMaybe<Themes_Set_Input>;
  where: Themes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Themes_As_TopicsArgs = {
  _inc?: InputMaybe<Themes_As_Topics_Inc_Input>;
  _set?: InputMaybe<Themes_As_Topics_Set_Input>;
  where: Themes_As_Topics_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Themes_By_PkArgs = {
  _inc?: InputMaybe<Themes_Inc_Input>;
  _set?: InputMaybe<Themes_Set_Input>;
  pk_columns: Themes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TherapiesArgs = {
  _set?: InputMaybe<Therapies_Set_Input>;
  where: Therapies_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Therapies_By_PkArgs = {
  _set?: InputMaybe<Therapies_Set_Input>;
  pk_columns: Therapies_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Therapy_UnitsArgs = {
  _inc?: InputMaybe<Therapy_Units_Inc_Input>;
  _set?: InputMaybe<Therapy_Units_Set_Input>;
  where: Therapy_Units_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Therapy_Units_By_PkArgs = {
  _inc?: InputMaybe<Therapy_Units_Inc_Input>;
  _set?: InputMaybe<Therapy_Units_Set_Input>;
  pk_columns: Therapy_Units_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Timetabled_LessonsArgs = {
  _inc?: InputMaybe<Timetabled_Lessons_Inc_Input>;
  _set?: InputMaybe<Timetabled_Lessons_Set_Input>;
  where: Timetabled_Lessons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Timetabled_Lessons_By_PkArgs = {
  _inc?: InputMaybe<Timetabled_Lessons_Inc_Input>;
  _set?: InputMaybe<Timetabled_Lessons_Set_Input>;
  pk_columns: Timetabled_Lessons_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Timetabled_WeeksArgs = {
  _inc?: InputMaybe<Timetabled_Weeks_Inc_Input>;
  _set?: InputMaybe<Timetabled_Weeks_Set_Input>;
  where: Timetabled_Weeks_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Timetabled_Weeks_By_PkArgs = {
  _inc?: InputMaybe<Timetabled_Weeks_Inc_Input>;
  _set?: InputMaybe<Timetabled_Weeks_Set_Input>;
  pk_columns: Timetabled_Weeks_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TimetablesArgs = {
  _set?: InputMaybe<Timetables_Set_Input>;
  where: Timetables_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Timetables_By_PkArgs = {
  _set?: InputMaybe<Timetables_Set_Input>;
  pk_columns: Timetables_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Unit_LessonsArgs = {
  _inc?: InputMaybe<Unit_Lessons_Inc_Input>;
  _set?: InputMaybe<Unit_Lessons_Set_Input>;
  where: Unit_Lessons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Unit_Lessons_By_PkArgs = {
  _inc?: InputMaybe<Unit_Lessons_Inc_Input>;
  _set?: InputMaybe<Unit_Lessons_Set_Input>;
  pk_columns: Unit_Lessons_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Unit_QuizzesArgs = {
  _inc?: InputMaybe<Unit_Quizzes_Inc_Input>;
  _set?: InputMaybe<Unit_Quizzes_Set_Input>;
  where: Unit_Quizzes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Unit_Quizzes_By_PkArgs = {
  _inc?: InputMaybe<Unit_Quizzes_Inc_Input>;
  _set?: InputMaybe<Unit_Quizzes_Set_Input>;
  pk_columns: Unit_Quizzes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_UnitsArgs = {
  _inc?: InputMaybe<Units_Inc_Input>;
  _set?: InputMaybe<Units_Set_Input>;
  where: Units_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Units_As_TopicsArgs = {
  _inc?: InputMaybe<Units_As_Topics_Inc_Input>;
  _set?: InputMaybe<Units_As_Topics_Set_Input>;
  where: Units_As_Topics_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Units_By_PkArgs = {
  _inc?: InputMaybe<Units_Inc_Input>;
  _set?: InputMaybe<Units_Set_Input>;
  pk_columns: Units_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_VideosArgs = {
  _inc?: InputMaybe<Videos_Inc_Input>;
  _set?: InputMaybe<Videos_Set_Input>;
  where: Videos_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Videos_By_PkArgs = {
  _inc?: InputMaybe<Videos_Inc_Input>;
  _set?: InputMaybe<Videos_Set_Input>;
  pk_columns: Videos_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_WeeksArgs = {
  _inc?: InputMaybe<Weeks_Inc_Input>;
  _set?: InputMaybe<Weeks_Set_Input>;
  where: Weeks_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Weeks_By_PkArgs = {
  _inc?: InputMaybe<Weeks_Inc_Input>;
  _set?: InputMaybe<Weeks_Set_Input>;
  pk_columns: Weeks_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_YearsArgs = {
  _inc?: InputMaybe<Years_Inc_Input>;
  _set?: InputMaybe<Years_Set_Input>;
  where: Years_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Years_By_PkArgs = {
  _inc?: InputMaybe<Years_Inc_Input>;
  _set?: InputMaybe<Years_Set_Input>;
  pk_columns: Years_Pk_Columns_Input;
};

/** columns and relationships of "mv_all_year_groups" */
export type Mv_All_Year_Groups = {
  __typename?: 'mv_all_year_groups';
  key_stage_slug?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
};

/** aggregated selection of "mv_all_year_groups" */
export type Mv_All_Year_Groups_Aggregate = {
  __typename?: 'mv_all_year_groups_aggregate';
  aggregate?: Maybe<Mv_All_Year_Groups_Aggregate_Fields>;
  nodes: Array<Mv_All_Year_Groups>;
};

/** aggregate fields of "mv_all_year_groups" */
export type Mv_All_Year_Groups_Aggregate_Fields = {
  __typename?: 'mv_all_year_groups_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Mv_All_Year_Groups_Max_Fields>;
  min?: Maybe<Mv_All_Year_Groups_Min_Fields>;
};


/** aggregate fields of "mv_all_year_groups" */
export type Mv_All_Year_Groups_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Mv_All_Year_Groups_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mv_all_year_groups" */
export type Mv_All_Year_Groups_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Mv_All_Year_Groups_Max_Order_By>;
  min?: InputMaybe<Mv_All_Year_Groups_Min_Order_By>;
};

/** input type for inserting array relation for remote table "mv_all_year_groups" */
export type Mv_All_Year_Groups_Arr_Rel_Insert_Input = {
  data: Array<Mv_All_Year_Groups_Insert_Input>;
};

/** Boolean expression to filter rows from the table "mv_all_year_groups". All fields are combined with a logical 'AND'. */
export type Mv_All_Year_Groups_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Mv_All_Year_Groups_Bool_Exp>>>;
  _not?: InputMaybe<Mv_All_Year_Groups_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Mv_All_Year_Groups_Bool_Exp>>>;
  key_stage_slug?: InputMaybe<String_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
};

/** input type for inserting data into table "mv_all_year_groups" */
export type Mv_All_Year_Groups_Insert_Input = {
  key_stage_slug?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Mv_All_Year_Groups_Max_Fields = {
  __typename?: 'mv_all_year_groups_max_fields';
  key_stage_slug?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "mv_all_year_groups" */
export type Mv_All_Year_Groups_Max_Order_By = {
  key_stage_slug?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Mv_All_Year_Groups_Min_Fields = {
  __typename?: 'mv_all_year_groups_min_fields';
  key_stage_slug?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "mv_all_year_groups" */
export type Mv_All_Year_Groups_Min_Order_By = {
  key_stage_slug?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "mv_all_year_groups" */
export type Mv_All_Year_Groups_Mutation_Response = {
  __typename?: 'mv_all_year_groups_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Mv_All_Year_Groups>;
};

/** input type for inserting object relation for remote table "mv_all_year_groups" */
export type Mv_All_Year_Groups_Obj_Rel_Insert_Input = {
  data: Mv_All_Year_Groups_Insert_Input;
};

/** ordering options when selecting data from "mv_all_year_groups" */
export type Mv_All_Year_Groups_Order_By = {
  key_stage_slug?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** select columns of table "mv_all_year_groups" */
export enum Mv_All_Year_Groups_Select_Column {
  /** column name */
  KeyStageSlug = 'key_stage_slug',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title'
}

/** input type for updating data in table "mv_all_year_groups" */
export type Mv_All_Year_Groups_Set_Input = {
  key_stage_slug?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "mv_downloads" */
export type Mv_Downloads = {
  __typename?: 'mv_downloads';
  downloads?: Maybe<Scalars['json']>;
  has_downloadable_resources?: Maybe<Scalars['Boolean']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  theme_slug?: Maybe<Scalars['String']>;
  theme_title?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  unit_slug?: Maybe<Scalars['String']>;
  unit_title?: Maybe<Scalars['String']>;
};


/** columns and relationships of "mv_downloads" */
export type Mv_DownloadsDownloadsArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "mv_downloads" */
export type Mv_Downloads_Aggregate = {
  __typename?: 'mv_downloads_aggregate';
  aggregate?: Maybe<Mv_Downloads_Aggregate_Fields>;
  nodes: Array<Mv_Downloads>;
};

/** aggregate fields of "mv_downloads" */
export type Mv_Downloads_Aggregate_Fields = {
  __typename?: 'mv_downloads_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Mv_Downloads_Max_Fields>;
  min?: Maybe<Mv_Downloads_Min_Fields>;
};


/** aggregate fields of "mv_downloads" */
export type Mv_Downloads_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Mv_Downloads_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mv_downloads" */
export type Mv_Downloads_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Mv_Downloads_Max_Order_By>;
  min?: InputMaybe<Mv_Downloads_Min_Order_By>;
};

/** input type for inserting array relation for remote table "mv_downloads" */
export type Mv_Downloads_Arr_Rel_Insert_Input = {
  data: Array<Mv_Downloads_Insert_Input>;
};

/** Boolean expression to filter rows from the table "mv_downloads". All fields are combined with a logical 'AND'. */
export type Mv_Downloads_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Mv_Downloads_Bool_Exp>>>;
  _not?: InputMaybe<Mv_Downloads_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Mv_Downloads_Bool_Exp>>>;
  downloads?: InputMaybe<Json_Comparison_Exp>;
  has_downloadable_resources?: InputMaybe<Boolean_Comparison_Exp>;
  key_stage_slug?: InputMaybe<String_Comparison_Exp>;
  key_stage_title?: InputMaybe<String_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  subject_slug?: InputMaybe<String_Comparison_Exp>;
  subject_title?: InputMaybe<String_Comparison_Exp>;
  theme_slug?: InputMaybe<String_Comparison_Exp>;
  theme_title?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  unit_slug?: InputMaybe<String_Comparison_Exp>;
  unit_title?: InputMaybe<String_Comparison_Exp>;
};

/** input type for inserting data into table "mv_downloads" */
export type Mv_Downloads_Insert_Input = {
  downloads?: InputMaybe<Scalars['json']>;
  has_downloadable_resources?: InputMaybe<Scalars['Boolean']>;
  key_stage_slug?: InputMaybe<Scalars['String']>;
  key_stage_title?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  subject_slug?: InputMaybe<Scalars['String']>;
  subject_title?: InputMaybe<Scalars['String']>;
  theme_slug?: InputMaybe<Scalars['String']>;
  theme_title?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  unit_slug?: InputMaybe<Scalars['String']>;
  unit_title?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Mv_Downloads_Max_Fields = {
  __typename?: 'mv_downloads_max_fields';
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  theme_slug?: Maybe<Scalars['String']>;
  theme_title?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  unit_slug?: Maybe<Scalars['String']>;
  unit_title?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "mv_downloads" */
export type Mv_Downloads_Max_Order_By = {
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  theme_slug?: InputMaybe<Order_By>;
  theme_title?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unit_slug?: InputMaybe<Order_By>;
  unit_title?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Mv_Downloads_Min_Fields = {
  __typename?: 'mv_downloads_min_fields';
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  theme_slug?: Maybe<Scalars['String']>;
  theme_title?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  unit_slug?: Maybe<Scalars['String']>;
  unit_title?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "mv_downloads" */
export type Mv_Downloads_Min_Order_By = {
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  theme_slug?: InputMaybe<Order_By>;
  theme_title?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unit_slug?: InputMaybe<Order_By>;
  unit_title?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "mv_downloads" */
export type Mv_Downloads_Mutation_Response = {
  __typename?: 'mv_downloads_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Mv_Downloads>;
};

/** input type for inserting object relation for remote table "mv_downloads" */
export type Mv_Downloads_Obj_Rel_Insert_Input = {
  data: Mv_Downloads_Insert_Input;
};

/** ordering options when selecting data from "mv_downloads" */
export type Mv_Downloads_Order_By = {
  downloads?: InputMaybe<Order_By>;
  has_downloadable_resources?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  theme_slug?: InputMaybe<Order_By>;
  theme_title?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unit_slug?: InputMaybe<Order_By>;
  unit_title?: InputMaybe<Order_By>;
};

/** select columns of table "mv_downloads" */
export enum Mv_Downloads_Select_Column {
  /** column name */
  Downloads = 'downloads',
  /** column name */
  HasDownloadableResources = 'has_downloadable_resources',
  /** column name */
  KeyStageSlug = 'key_stage_slug',
  /** column name */
  KeyStageTitle = 'key_stage_title',
  /** column name */
  Slug = 'slug',
  /** column name */
  SubjectSlug = 'subject_slug',
  /** column name */
  SubjectTitle = 'subject_title',
  /** column name */
  ThemeSlug = 'theme_slug',
  /** column name */
  ThemeTitle = 'theme_title',
  /** column name */
  Title = 'title',
  /** column name */
  UnitSlug = 'unit_slug',
  /** column name */
  UnitTitle = 'unit_title'
}

/** input type for updating data in table "mv_downloads" */
export type Mv_Downloads_Set_Input = {
  downloads?: InputMaybe<Scalars['json']>;
  has_downloadable_resources?: InputMaybe<Scalars['Boolean']>;
  key_stage_slug?: InputMaybe<Scalars['String']>;
  key_stage_title?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  subject_slug?: InputMaybe<Scalars['String']>;
  subject_title?: InputMaybe<Scalars['String']>;
  theme_slug?: InputMaybe<Scalars['String']>;
  theme_title?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  unit_slug?: InputMaybe<Scalars['String']>;
  unit_title?: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "mv_key_stages" */
export type Mv_Key_Stages = {
  __typename?: 'mv_key_stages';
  short_code?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
};

/** aggregated selection of "mv_key_stages" */
export type Mv_Key_Stages_Aggregate = {
  __typename?: 'mv_key_stages_aggregate';
  aggregate?: Maybe<Mv_Key_Stages_Aggregate_Fields>;
  nodes: Array<Mv_Key_Stages>;
};

/** aggregate fields of "mv_key_stages" */
export type Mv_Key_Stages_Aggregate_Fields = {
  __typename?: 'mv_key_stages_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Mv_Key_Stages_Max_Fields>;
  min?: Maybe<Mv_Key_Stages_Min_Fields>;
};


/** aggregate fields of "mv_key_stages" */
export type Mv_Key_Stages_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Mv_Key_Stages_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mv_key_stages" */
export type Mv_Key_Stages_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Mv_Key_Stages_Max_Order_By>;
  min?: InputMaybe<Mv_Key_Stages_Min_Order_By>;
};

/** input type for inserting array relation for remote table "mv_key_stages" */
export type Mv_Key_Stages_Arr_Rel_Insert_Input = {
  data: Array<Mv_Key_Stages_Insert_Input>;
};

/** Boolean expression to filter rows from the table "mv_key_stages". All fields are combined with a logical 'AND'. */
export type Mv_Key_Stages_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Mv_Key_Stages_Bool_Exp>>>;
  _not?: InputMaybe<Mv_Key_Stages_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Mv_Key_Stages_Bool_Exp>>>;
  short_code?: InputMaybe<String_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
};

/** input type for inserting data into table "mv_key_stages" */
export type Mv_Key_Stages_Insert_Input = {
  short_code?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Mv_Key_Stages_Max_Fields = {
  __typename?: 'mv_key_stages_max_fields';
  short_code?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "mv_key_stages" */
export type Mv_Key_Stages_Max_Order_By = {
  short_code?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Mv_Key_Stages_Min_Fields = {
  __typename?: 'mv_key_stages_min_fields';
  short_code?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "mv_key_stages" */
export type Mv_Key_Stages_Min_Order_By = {
  short_code?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "mv_key_stages" */
export type Mv_Key_Stages_Mutation_Response = {
  __typename?: 'mv_key_stages_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Mv_Key_Stages>;
};

/** input type for inserting object relation for remote table "mv_key_stages" */
export type Mv_Key_Stages_Obj_Rel_Insert_Input = {
  data: Mv_Key_Stages_Insert_Input;
};

/** ordering options when selecting data from "mv_key_stages" */
export type Mv_Key_Stages_Order_By = {
  short_code?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** select columns of table "mv_key_stages" */
export enum Mv_Key_Stages_Select_Column {
  /** column name */
  ShortCode = 'short_code',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title'
}

/** input type for updating data in table "mv_key_stages" */
export type Mv_Key_Stages_Set_Input = {
  short_code?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "mv_learning_themes" */
export type Mv_Learning_Themes = {
  __typename?: 'mv_learning_themes';
  id?: Maybe<Scalars['Int']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  tier_name?: Maybe<Scalars['String']>;
  tier_slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
};

/** aggregated selection of "mv_learning_themes" */
export type Mv_Learning_Themes_Aggregate = {
  __typename?: 'mv_learning_themes_aggregate';
  aggregate?: Maybe<Mv_Learning_Themes_Aggregate_Fields>;
  nodes: Array<Mv_Learning_Themes>;
};

/** aggregate fields of "mv_learning_themes" */
export type Mv_Learning_Themes_Aggregate_Fields = {
  __typename?: 'mv_learning_themes_aggregate_fields';
  avg?: Maybe<Mv_Learning_Themes_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Mv_Learning_Themes_Max_Fields>;
  min?: Maybe<Mv_Learning_Themes_Min_Fields>;
  stddev?: Maybe<Mv_Learning_Themes_Stddev_Fields>;
  stddev_pop?: Maybe<Mv_Learning_Themes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Mv_Learning_Themes_Stddev_Samp_Fields>;
  sum?: Maybe<Mv_Learning_Themes_Sum_Fields>;
  var_pop?: Maybe<Mv_Learning_Themes_Var_Pop_Fields>;
  var_samp?: Maybe<Mv_Learning_Themes_Var_Samp_Fields>;
  variance?: Maybe<Mv_Learning_Themes_Variance_Fields>;
};


/** aggregate fields of "mv_learning_themes" */
export type Mv_Learning_Themes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Mv_Learning_Themes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mv_learning_themes" */
export type Mv_Learning_Themes_Aggregate_Order_By = {
  avg?: InputMaybe<Mv_Learning_Themes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Mv_Learning_Themes_Max_Order_By>;
  min?: InputMaybe<Mv_Learning_Themes_Min_Order_By>;
  stddev?: InputMaybe<Mv_Learning_Themes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Mv_Learning_Themes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Mv_Learning_Themes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Mv_Learning_Themes_Sum_Order_By>;
  var_pop?: InputMaybe<Mv_Learning_Themes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Mv_Learning_Themes_Var_Samp_Order_By>;
  variance?: InputMaybe<Mv_Learning_Themes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "mv_learning_themes" */
export type Mv_Learning_Themes_Arr_Rel_Insert_Input = {
  data: Array<Mv_Learning_Themes_Insert_Input>;
};

/** aggregate avg on columns */
export type Mv_Learning_Themes_Avg_Fields = {
  __typename?: 'mv_learning_themes_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mv_learning_themes" */
export type Mv_Learning_Themes_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mv_learning_themes". All fields are combined with a logical 'AND'. */
export type Mv_Learning_Themes_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Mv_Learning_Themes_Bool_Exp>>>;
  _not?: InputMaybe<Mv_Learning_Themes_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Mv_Learning_Themes_Bool_Exp>>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  key_stage_slug?: InputMaybe<String_Comparison_Exp>;
  key_stage_title?: InputMaybe<String_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  subject_slug?: InputMaybe<String_Comparison_Exp>;
  subject_title?: InputMaybe<String_Comparison_Exp>;
  tier_name?: InputMaybe<String_Comparison_Exp>;
  tier_slug?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
};

/** input type for incrementing integer column in table "mv_learning_themes" */
export type Mv_Learning_Themes_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "mv_learning_themes" */
export type Mv_Learning_Themes_Insert_Input = {
  id?: InputMaybe<Scalars['Int']>;
  key_stage_slug?: InputMaybe<Scalars['String']>;
  key_stage_title?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  subject_slug?: InputMaybe<Scalars['String']>;
  subject_title?: InputMaybe<Scalars['String']>;
  tier_name?: InputMaybe<Scalars['String']>;
  tier_slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Mv_Learning_Themes_Max_Fields = {
  __typename?: 'mv_learning_themes_max_fields';
  id?: Maybe<Scalars['Int']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  tier_name?: Maybe<Scalars['String']>;
  tier_slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "mv_learning_themes" */
export type Mv_Learning_Themes_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  tier_name?: InputMaybe<Order_By>;
  tier_slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Mv_Learning_Themes_Min_Fields = {
  __typename?: 'mv_learning_themes_min_fields';
  id?: Maybe<Scalars['Int']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  tier_name?: Maybe<Scalars['String']>;
  tier_slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "mv_learning_themes" */
export type Mv_Learning_Themes_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  tier_name?: InputMaybe<Order_By>;
  tier_slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "mv_learning_themes" */
export type Mv_Learning_Themes_Mutation_Response = {
  __typename?: 'mv_learning_themes_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Mv_Learning_Themes>;
};

/** input type for inserting object relation for remote table "mv_learning_themes" */
export type Mv_Learning_Themes_Obj_Rel_Insert_Input = {
  data: Mv_Learning_Themes_Insert_Input;
};

/** ordering options when selecting data from "mv_learning_themes" */
export type Mv_Learning_Themes_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  tier_name?: InputMaybe<Order_By>;
  tier_slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** select columns of table "mv_learning_themes" */
export enum Mv_Learning_Themes_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  KeyStageSlug = 'key_stage_slug',
  /** column name */
  KeyStageTitle = 'key_stage_title',
  /** column name */
  Slug = 'slug',
  /** column name */
  SubjectSlug = 'subject_slug',
  /** column name */
  SubjectTitle = 'subject_title',
  /** column name */
  TierName = 'tier_name',
  /** column name */
  TierSlug = 'tier_slug',
  /** column name */
  Title = 'title'
}

/** input type for updating data in table "mv_learning_themes" */
export type Mv_Learning_Themes_Set_Input = {
  id?: InputMaybe<Scalars['Int']>;
  key_stage_slug?: InputMaybe<Scalars['String']>;
  key_stage_title?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  subject_slug?: InputMaybe<Scalars['String']>;
  subject_title?: InputMaybe<Scalars['String']>;
  tier_name?: InputMaybe<Scalars['String']>;
  tier_slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Mv_Learning_Themes_Stddev_Fields = {
  __typename?: 'mv_learning_themes_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mv_learning_themes" */
export type Mv_Learning_Themes_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Mv_Learning_Themes_Stddev_Pop_Fields = {
  __typename?: 'mv_learning_themes_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mv_learning_themes" */
export type Mv_Learning_Themes_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Mv_Learning_Themes_Stddev_Samp_Fields = {
  __typename?: 'mv_learning_themes_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mv_learning_themes" */
export type Mv_Learning_Themes_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Mv_Learning_Themes_Sum_Fields = {
  __typename?: 'mv_learning_themes_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "mv_learning_themes" */
export type Mv_Learning_Themes_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Mv_Learning_Themes_Var_Pop_Fields = {
  __typename?: 'mv_learning_themes_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mv_learning_themes" */
export type Mv_Learning_Themes_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Mv_Learning_Themes_Var_Samp_Fields = {
  __typename?: 'mv_learning_themes_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mv_learning_themes" */
export type Mv_Learning_Themes_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Mv_Learning_Themes_Variance_Fields = {
  __typename?: 'mv_learning_themes_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mv_learning_themes" */
export type Mv_Learning_Themes_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "mv_lessons" */
export type Mv_Lessons = {
  __typename?: 'mv_lessons';
  content_guidance?: Maybe<Scalars['String']>;
  core_content?: Maybe<Scalars['json']>;
  description?: Maybe<Scalars['String']>;
  equipment_required?: Maybe<Scalars['String']>;
  expired?: Maybe<Scalars['Boolean']>;
  has_copyright_material?: Maybe<Scalars['Boolean']>;
  has_downloadable_resources?: Maybe<Scalars['Boolean']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  position_in_unit?: Maybe<Scalars['Int']>;
  presentation_count?: Maybe<Scalars['bigint']>;
  presentation_url?: Maybe<Scalars['String']>;
  quiz_count?: Maybe<Scalars['bigint']>;
  slug?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  supervision_level?: Maybe<Scalars['String']>;
  theme_slug?: Maybe<Scalars['String']>;
  theme_title?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  transcript?: Maybe<Scalars['String']>;
  unit_slug?: Maybe<Scalars['String']>;
  unit_title?: Maybe<Scalars['String']>;
  video_count?: Maybe<Scalars['Int']>;
  video_mux_playback_id?: Maybe<Scalars['String']>;
  video_with_sign_language_mux_playback_id?: Maybe<Scalars['String']>;
  worksheet_count?: Maybe<Scalars['bigint']>;
  worksheet_url?: Maybe<Scalars['String']>;
};


/** columns and relationships of "mv_lessons" */
export type Mv_LessonsCore_ContentArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "mv_lessons" */
export type Mv_Lessons_Aggregate = {
  __typename?: 'mv_lessons_aggregate';
  aggregate?: Maybe<Mv_Lessons_Aggregate_Fields>;
  nodes: Array<Mv_Lessons>;
};

/** aggregate fields of "mv_lessons" */
export type Mv_Lessons_Aggregate_Fields = {
  __typename?: 'mv_lessons_aggregate_fields';
  avg?: Maybe<Mv_Lessons_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Mv_Lessons_Max_Fields>;
  min?: Maybe<Mv_Lessons_Min_Fields>;
  stddev?: Maybe<Mv_Lessons_Stddev_Fields>;
  stddev_pop?: Maybe<Mv_Lessons_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Mv_Lessons_Stddev_Samp_Fields>;
  sum?: Maybe<Mv_Lessons_Sum_Fields>;
  var_pop?: Maybe<Mv_Lessons_Var_Pop_Fields>;
  var_samp?: Maybe<Mv_Lessons_Var_Samp_Fields>;
  variance?: Maybe<Mv_Lessons_Variance_Fields>;
};


/** aggregate fields of "mv_lessons" */
export type Mv_Lessons_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Mv_Lessons_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mv_lessons" */
export type Mv_Lessons_Aggregate_Order_By = {
  avg?: InputMaybe<Mv_Lessons_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Mv_Lessons_Max_Order_By>;
  min?: InputMaybe<Mv_Lessons_Min_Order_By>;
  stddev?: InputMaybe<Mv_Lessons_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Mv_Lessons_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Mv_Lessons_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Mv_Lessons_Sum_Order_By>;
  var_pop?: InputMaybe<Mv_Lessons_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Mv_Lessons_Var_Samp_Order_By>;
  variance?: InputMaybe<Mv_Lessons_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "mv_lessons" */
export type Mv_Lessons_Arr_Rel_Insert_Input = {
  data: Array<Mv_Lessons_Insert_Input>;
};

/** aggregate avg on columns */
export type Mv_Lessons_Avg_Fields = {
  __typename?: 'mv_lessons_avg_fields';
  position_in_unit?: Maybe<Scalars['Float']>;
  presentation_count?: Maybe<Scalars['Float']>;
  quiz_count?: Maybe<Scalars['Float']>;
  video_count?: Maybe<Scalars['Float']>;
  worksheet_count?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mv_lessons" */
export type Mv_Lessons_Avg_Order_By = {
  position_in_unit?: InputMaybe<Order_By>;
  presentation_count?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  video_count?: InputMaybe<Order_By>;
  worksheet_count?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mv_lessons". All fields are combined with a logical 'AND'. */
export type Mv_Lessons_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Mv_Lessons_Bool_Exp>>>;
  _not?: InputMaybe<Mv_Lessons_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Mv_Lessons_Bool_Exp>>>;
  content_guidance?: InputMaybe<String_Comparison_Exp>;
  core_content?: InputMaybe<Json_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  equipment_required?: InputMaybe<String_Comparison_Exp>;
  expired?: InputMaybe<Boolean_Comparison_Exp>;
  has_copyright_material?: InputMaybe<Boolean_Comparison_Exp>;
  has_downloadable_resources?: InputMaybe<Boolean_Comparison_Exp>;
  key_stage_slug?: InputMaybe<String_Comparison_Exp>;
  key_stage_title?: InputMaybe<String_Comparison_Exp>;
  position_in_unit?: InputMaybe<Int_Comparison_Exp>;
  presentation_count?: InputMaybe<Bigint_Comparison_Exp>;
  presentation_url?: InputMaybe<String_Comparison_Exp>;
  quiz_count?: InputMaybe<Bigint_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  subject_slug?: InputMaybe<String_Comparison_Exp>;
  subject_title?: InputMaybe<String_Comparison_Exp>;
  supervision_level?: InputMaybe<String_Comparison_Exp>;
  theme_slug?: InputMaybe<String_Comparison_Exp>;
  theme_title?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  transcript?: InputMaybe<String_Comparison_Exp>;
  unit_slug?: InputMaybe<String_Comparison_Exp>;
  unit_title?: InputMaybe<String_Comparison_Exp>;
  video_count?: InputMaybe<Int_Comparison_Exp>;
  video_mux_playback_id?: InputMaybe<String_Comparison_Exp>;
  video_with_sign_language_mux_playback_id?: InputMaybe<String_Comparison_Exp>;
  worksheet_count?: InputMaybe<Bigint_Comparison_Exp>;
  worksheet_url?: InputMaybe<String_Comparison_Exp>;
};

/** input type for incrementing integer column in table "mv_lessons" */
export type Mv_Lessons_Inc_Input = {
  position_in_unit?: InputMaybe<Scalars['Int']>;
  presentation_count?: InputMaybe<Scalars['bigint']>;
  quiz_count?: InputMaybe<Scalars['bigint']>;
  video_count?: InputMaybe<Scalars['Int']>;
  worksheet_count?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "mv_lessons" */
export type Mv_Lessons_Insert_Input = {
  content_guidance?: InputMaybe<Scalars['String']>;
  core_content?: InputMaybe<Scalars['json']>;
  description?: InputMaybe<Scalars['String']>;
  equipment_required?: InputMaybe<Scalars['String']>;
  expired?: InputMaybe<Scalars['Boolean']>;
  has_copyright_material?: InputMaybe<Scalars['Boolean']>;
  has_downloadable_resources?: InputMaybe<Scalars['Boolean']>;
  key_stage_slug?: InputMaybe<Scalars['String']>;
  key_stage_title?: InputMaybe<Scalars['String']>;
  position_in_unit?: InputMaybe<Scalars['Int']>;
  presentation_count?: InputMaybe<Scalars['bigint']>;
  presentation_url?: InputMaybe<Scalars['String']>;
  quiz_count?: InputMaybe<Scalars['bigint']>;
  slug?: InputMaybe<Scalars['String']>;
  subject_slug?: InputMaybe<Scalars['String']>;
  subject_title?: InputMaybe<Scalars['String']>;
  supervision_level?: InputMaybe<Scalars['String']>;
  theme_slug?: InputMaybe<Scalars['String']>;
  theme_title?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  transcript?: InputMaybe<Scalars['String']>;
  unit_slug?: InputMaybe<Scalars['String']>;
  unit_title?: InputMaybe<Scalars['String']>;
  video_count?: InputMaybe<Scalars['Int']>;
  video_mux_playback_id?: InputMaybe<Scalars['String']>;
  video_with_sign_language_mux_playback_id?: InputMaybe<Scalars['String']>;
  worksheet_count?: InputMaybe<Scalars['bigint']>;
  worksheet_url?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Mv_Lessons_Max_Fields = {
  __typename?: 'mv_lessons_max_fields';
  content_guidance?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  equipment_required?: Maybe<Scalars['String']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  position_in_unit?: Maybe<Scalars['Int']>;
  presentation_count?: Maybe<Scalars['bigint']>;
  presentation_url?: Maybe<Scalars['String']>;
  quiz_count?: Maybe<Scalars['bigint']>;
  slug?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  supervision_level?: Maybe<Scalars['String']>;
  theme_slug?: Maybe<Scalars['String']>;
  theme_title?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  transcript?: Maybe<Scalars['String']>;
  unit_slug?: Maybe<Scalars['String']>;
  unit_title?: Maybe<Scalars['String']>;
  video_count?: Maybe<Scalars['Int']>;
  video_mux_playback_id?: Maybe<Scalars['String']>;
  video_with_sign_language_mux_playback_id?: Maybe<Scalars['String']>;
  worksheet_count?: Maybe<Scalars['bigint']>;
  worksheet_url?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "mv_lessons" */
export type Mv_Lessons_Max_Order_By = {
  content_guidance?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  equipment_required?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  presentation_count?: InputMaybe<Order_By>;
  presentation_url?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  supervision_level?: InputMaybe<Order_By>;
  theme_slug?: InputMaybe<Order_By>;
  theme_title?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  transcript?: InputMaybe<Order_By>;
  unit_slug?: InputMaybe<Order_By>;
  unit_title?: InputMaybe<Order_By>;
  video_count?: InputMaybe<Order_By>;
  video_mux_playback_id?: InputMaybe<Order_By>;
  video_with_sign_language_mux_playback_id?: InputMaybe<Order_By>;
  worksheet_count?: InputMaybe<Order_By>;
  worksheet_url?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Mv_Lessons_Min_Fields = {
  __typename?: 'mv_lessons_min_fields';
  content_guidance?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  equipment_required?: Maybe<Scalars['String']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  position_in_unit?: Maybe<Scalars['Int']>;
  presentation_count?: Maybe<Scalars['bigint']>;
  presentation_url?: Maybe<Scalars['String']>;
  quiz_count?: Maybe<Scalars['bigint']>;
  slug?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  supervision_level?: Maybe<Scalars['String']>;
  theme_slug?: Maybe<Scalars['String']>;
  theme_title?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  transcript?: Maybe<Scalars['String']>;
  unit_slug?: Maybe<Scalars['String']>;
  unit_title?: Maybe<Scalars['String']>;
  video_count?: Maybe<Scalars['Int']>;
  video_mux_playback_id?: Maybe<Scalars['String']>;
  video_with_sign_language_mux_playback_id?: Maybe<Scalars['String']>;
  worksheet_count?: Maybe<Scalars['bigint']>;
  worksheet_url?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "mv_lessons" */
export type Mv_Lessons_Min_Order_By = {
  content_guidance?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  equipment_required?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  presentation_count?: InputMaybe<Order_By>;
  presentation_url?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  supervision_level?: InputMaybe<Order_By>;
  theme_slug?: InputMaybe<Order_By>;
  theme_title?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  transcript?: InputMaybe<Order_By>;
  unit_slug?: InputMaybe<Order_By>;
  unit_title?: InputMaybe<Order_By>;
  video_count?: InputMaybe<Order_By>;
  video_mux_playback_id?: InputMaybe<Order_By>;
  video_with_sign_language_mux_playback_id?: InputMaybe<Order_By>;
  worksheet_count?: InputMaybe<Order_By>;
  worksheet_url?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "mv_lessons" */
export type Mv_Lessons_Mutation_Response = {
  __typename?: 'mv_lessons_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Mv_Lessons>;
};

/** input type for inserting object relation for remote table "mv_lessons" */
export type Mv_Lessons_Obj_Rel_Insert_Input = {
  data: Mv_Lessons_Insert_Input;
};

/** ordering options when selecting data from "mv_lessons" */
export type Mv_Lessons_Order_By = {
  content_guidance?: InputMaybe<Order_By>;
  core_content?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  equipment_required?: InputMaybe<Order_By>;
  expired?: InputMaybe<Order_By>;
  has_copyright_material?: InputMaybe<Order_By>;
  has_downloadable_resources?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  presentation_count?: InputMaybe<Order_By>;
  presentation_url?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  supervision_level?: InputMaybe<Order_By>;
  theme_slug?: InputMaybe<Order_By>;
  theme_title?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  transcript?: InputMaybe<Order_By>;
  unit_slug?: InputMaybe<Order_By>;
  unit_title?: InputMaybe<Order_By>;
  video_count?: InputMaybe<Order_By>;
  video_mux_playback_id?: InputMaybe<Order_By>;
  video_with_sign_language_mux_playback_id?: InputMaybe<Order_By>;
  worksheet_count?: InputMaybe<Order_By>;
  worksheet_url?: InputMaybe<Order_By>;
};

/** select columns of table "mv_lessons" */
export enum Mv_Lessons_Select_Column {
  /** column name */
  ContentGuidance = 'content_guidance',
  /** column name */
  CoreContent = 'core_content',
  /** column name */
  Description = 'description',
  /** column name */
  EquipmentRequired = 'equipment_required',
  /** column name */
  Expired = 'expired',
  /** column name */
  HasCopyrightMaterial = 'has_copyright_material',
  /** column name */
  HasDownloadableResources = 'has_downloadable_resources',
  /** column name */
  KeyStageSlug = 'key_stage_slug',
  /** column name */
  KeyStageTitle = 'key_stage_title',
  /** column name */
  PositionInUnit = 'position_in_unit',
  /** column name */
  PresentationCount = 'presentation_count',
  /** column name */
  PresentationUrl = 'presentation_url',
  /** column name */
  QuizCount = 'quiz_count',
  /** column name */
  Slug = 'slug',
  /** column name */
  SubjectSlug = 'subject_slug',
  /** column name */
  SubjectTitle = 'subject_title',
  /** column name */
  SupervisionLevel = 'supervision_level',
  /** column name */
  ThemeSlug = 'theme_slug',
  /** column name */
  ThemeTitle = 'theme_title',
  /** column name */
  Title = 'title',
  /** column name */
  Transcript = 'transcript',
  /** column name */
  UnitSlug = 'unit_slug',
  /** column name */
  UnitTitle = 'unit_title',
  /** column name */
  VideoCount = 'video_count',
  /** column name */
  VideoMuxPlaybackId = 'video_mux_playback_id',
  /** column name */
  VideoWithSignLanguageMuxPlaybackId = 'video_with_sign_language_mux_playback_id',
  /** column name */
  WorksheetCount = 'worksheet_count',
  /** column name */
  WorksheetUrl = 'worksheet_url'
}

/** input type for updating data in table "mv_lessons" */
export type Mv_Lessons_Set_Input = {
  content_guidance?: InputMaybe<Scalars['String']>;
  core_content?: InputMaybe<Scalars['json']>;
  description?: InputMaybe<Scalars['String']>;
  equipment_required?: InputMaybe<Scalars['String']>;
  expired?: InputMaybe<Scalars['Boolean']>;
  has_copyright_material?: InputMaybe<Scalars['Boolean']>;
  has_downloadable_resources?: InputMaybe<Scalars['Boolean']>;
  key_stage_slug?: InputMaybe<Scalars['String']>;
  key_stage_title?: InputMaybe<Scalars['String']>;
  position_in_unit?: InputMaybe<Scalars['Int']>;
  presentation_count?: InputMaybe<Scalars['bigint']>;
  presentation_url?: InputMaybe<Scalars['String']>;
  quiz_count?: InputMaybe<Scalars['bigint']>;
  slug?: InputMaybe<Scalars['String']>;
  subject_slug?: InputMaybe<Scalars['String']>;
  subject_title?: InputMaybe<Scalars['String']>;
  supervision_level?: InputMaybe<Scalars['String']>;
  theme_slug?: InputMaybe<Scalars['String']>;
  theme_title?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  transcript?: InputMaybe<Scalars['String']>;
  unit_slug?: InputMaybe<Scalars['String']>;
  unit_title?: InputMaybe<Scalars['String']>;
  video_count?: InputMaybe<Scalars['Int']>;
  video_mux_playback_id?: InputMaybe<Scalars['String']>;
  video_with_sign_language_mux_playback_id?: InputMaybe<Scalars['String']>;
  worksheet_count?: InputMaybe<Scalars['bigint']>;
  worksheet_url?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Mv_Lessons_Stddev_Fields = {
  __typename?: 'mv_lessons_stddev_fields';
  position_in_unit?: Maybe<Scalars['Float']>;
  presentation_count?: Maybe<Scalars['Float']>;
  quiz_count?: Maybe<Scalars['Float']>;
  video_count?: Maybe<Scalars['Float']>;
  worksheet_count?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mv_lessons" */
export type Mv_Lessons_Stddev_Order_By = {
  position_in_unit?: InputMaybe<Order_By>;
  presentation_count?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  video_count?: InputMaybe<Order_By>;
  worksheet_count?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Mv_Lessons_Stddev_Pop_Fields = {
  __typename?: 'mv_lessons_stddev_pop_fields';
  position_in_unit?: Maybe<Scalars['Float']>;
  presentation_count?: Maybe<Scalars['Float']>;
  quiz_count?: Maybe<Scalars['Float']>;
  video_count?: Maybe<Scalars['Float']>;
  worksheet_count?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mv_lessons" */
export type Mv_Lessons_Stddev_Pop_Order_By = {
  position_in_unit?: InputMaybe<Order_By>;
  presentation_count?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  video_count?: InputMaybe<Order_By>;
  worksheet_count?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Mv_Lessons_Stddev_Samp_Fields = {
  __typename?: 'mv_lessons_stddev_samp_fields';
  position_in_unit?: Maybe<Scalars['Float']>;
  presentation_count?: Maybe<Scalars['Float']>;
  quiz_count?: Maybe<Scalars['Float']>;
  video_count?: Maybe<Scalars['Float']>;
  worksheet_count?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mv_lessons" */
export type Mv_Lessons_Stddev_Samp_Order_By = {
  position_in_unit?: InputMaybe<Order_By>;
  presentation_count?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  video_count?: InputMaybe<Order_By>;
  worksheet_count?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Mv_Lessons_Sum_Fields = {
  __typename?: 'mv_lessons_sum_fields';
  position_in_unit?: Maybe<Scalars['Int']>;
  presentation_count?: Maybe<Scalars['bigint']>;
  quiz_count?: Maybe<Scalars['bigint']>;
  video_count?: Maybe<Scalars['Int']>;
  worksheet_count?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "mv_lessons" */
export type Mv_Lessons_Sum_Order_By = {
  position_in_unit?: InputMaybe<Order_By>;
  presentation_count?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  video_count?: InputMaybe<Order_By>;
  worksheet_count?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Mv_Lessons_Var_Pop_Fields = {
  __typename?: 'mv_lessons_var_pop_fields';
  position_in_unit?: Maybe<Scalars['Float']>;
  presentation_count?: Maybe<Scalars['Float']>;
  quiz_count?: Maybe<Scalars['Float']>;
  video_count?: Maybe<Scalars['Float']>;
  worksheet_count?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mv_lessons" */
export type Mv_Lessons_Var_Pop_Order_By = {
  position_in_unit?: InputMaybe<Order_By>;
  presentation_count?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  video_count?: InputMaybe<Order_By>;
  worksheet_count?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Mv_Lessons_Var_Samp_Fields = {
  __typename?: 'mv_lessons_var_samp_fields';
  position_in_unit?: Maybe<Scalars['Float']>;
  presentation_count?: Maybe<Scalars['Float']>;
  quiz_count?: Maybe<Scalars['Float']>;
  video_count?: Maybe<Scalars['Float']>;
  worksheet_count?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mv_lessons" */
export type Mv_Lessons_Var_Samp_Order_By = {
  position_in_unit?: InputMaybe<Order_By>;
  presentation_count?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  video_count?: InputMaybe<Order_By>;
  worksheet_count?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Mv_Lessons_Variance_Fields = {
  __typename?: 'mv_lessons_variance_fields';
  position_in_unit?: Maybe<Scalars['Float']>;
  presentation_count?: Maybe<Scalars['Float']>;
  quiz_count?: Maybe<Scalars['Float']>;
  video_count?: Maybe<Scalars['Float']>;
  worksheet_count?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mv_lessons" */
export type Mv_Lessons_Variance_Order_By = {
  position_in_unit?: InputMaybe<Order_By>;
  presentation_count?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  video_count?: InputMaybe<Order_By>;
  worksheet_count?: InputMaybe<Order_By>;
};

/** columns and relationships of "mv_questions" */
export type Mv_Questions = {
  __typename?: 'mv_questions';
  active?: Maybe<Scalars['Boolean']>;
  answer?: Maybe<Scalars['json']>;
  choice_images?: Maybe<Scalars['json']>;
  choices?: Maybe<Scalars['json']>;
  display_number?: Maybe<Scalars['String']>;
  feedback_correct?: Maybe<Scalars['String']>;
  feedback_incorrect?: Maybe<Scalars['String']>;
  images?: Maybe<Scalars['json']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  lesson_slug?: Maybe<Scalars['String']>;
  lesson_title?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  points?: Maybe<Scalars['Int']>;
  question_id?: Maybe<Scalars['Int']>;
  quiz_type?: Maybe<Scalars['String']>;
  required?: Maybe<Scalars['Boolean']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  unit_slug?: Maybe<Scalars['String']>;
  unit_title?: Maybe<Scalars['String']>;
};


/** columns and relationships of "mv_questions" */
export type Mv_QuestionsAnswerArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "mv_questions" */
export type Mv_QuestionsChoice_ImagesArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "mv_questions" */
export type Mv_QuestionsChoicesArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "mv_questions" */
export type Mv_QuestionsImagesArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "mv_questions" */
export type Mv_Questions_Aggregate = {
  __typename?: 'mv_questions_aggregate';
  aggregate?: Maybe<Mv_Questions_Aggregate_Fields>;
  nodes: Array<Mv_Questions>;
};

/** aggregate fields of "mv_questions" */
export type Mv_Questions_Aggregate_Fields = {
  __typename?: 'mv_questions_aggregate_fields';
  avg?: Maybe<Mv_Questions_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Mv_Questions_Max_Fields>;
  min?: Maybe<Mv_Questions_Min_Fields>;
  stddev?: Maybe<Mv_Questions_Stddev_Fields>;
  stddev_pop?: Maybe<Mv_Questions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Mv_Questions_Stddev_Samp_Fields>;
  sum?: Maybe<Mv_Questions_Sum_Fields>;
  var_pop?: Maybe<Mv_Questions_Var_Pop_Fields>;
  var_samp?: Maybe<Mv_Questions_Var_Samp_Fields>;
  variance?: Maybe<Mv_Questions_Variance_Fields>;
};


/** aggregate fields of "mv_questions" */
export type Mv_Questions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Mv_Questions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mv_questions" */
export type Mv_Questions_Aggregate_Order_By = {
  avg?: InputMaybe<Mv_Questions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Mv_Questions_Max_Order_By>;
  min?: InputMaybe<Mv_Questions_Min_Order_By>;
  stddev?: InputMaybe<Mv_Questions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Mv_Questions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Mv_Questions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Mv_Questions_Sum_Order_By>;
  var_pop?: InputMaybe<Mv_Questions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Mv_Questions_Var_Samp_Order_By>;
  variance?: InputMaybe<Mv_Questions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "mv_questions" */
export type Mv_Questions_Arr_Rel_Insert_Input = {
  data: Array<Mv_Questions_Insert_Input>;
};

/** aggregate avg on columns */
export type Mv_Questions_Avg_Fields = {
  __typename?: 'mv_questions_avg_fields';
  order?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mv_questions" */
export type Mv_Questions_Avg_Order_By = {
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mv_questions". All fields are combined with a logical 'AND'. */
export type Mv_Questions_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Mv_Questions_Bool_Exp>>>;
  _not?: InputMaybe<Mv_Questions_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Mv_Questions_Bool_Exp>>>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  answer?: InputMaybe<Json_Comparison_Exp>;
  choice_images?: InputMaybe<Json_Comparison_Exp>;
  choices?: InputMaybe<Json_Comparison_Exp>;
  display_number?: InputMaybe<String_Comparison_Exp>;
  feedback_correct?: InputMaybe<String_Comparison_Exp>;
  feedback_incorrect?: InputMaybe<String_Comparison_Exp>;
  images?: InputMaybe<Json_Comparison_Exp>;
  key_stage_slug?: InputMaybe<String_Comparison_Exp>;
  key_stage_title?: InputMaybe<String_Comparison_Exp>;
  lesson_slug?: InputMaybe<String_Comparison_Exp>;
  lesson_title?: InputMaybe<String_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
  points?: InputMaybe<Int_Comparison_Exp>;
  question_id?: InputMaybe<Int_Comparison_Exp>;
  quiz_type?: InputMaybe<String_Comparison_Exp>;
  required?: InputMaybe<Boolean_Comparison_Exp>;
  subject_slug?: InputMaybe<String_Comparison_Exp>;
  subject_title?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  unit_slug?: InputMaybe<String_Comparison_Exp>;
  unit_title?: InputMaybe<String_Comparison_Exp>;
};

/** input type for incrementing integer column in table "mv_questions" */
export type Mv_Questions_Inc_Input = {
  order?: InputMaybe<Scalars['Int']>;
  points?: InputMaybe<Scalars['Int']>;
  question_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "mv_questions" */
export type Mv_Questions_Insert_Input = {
  active?: InputMaybe<Scalars['Boolean']>;
  answer?: InputMaybe<Scalars['json']>;
  choice_images?: InputMaybe<Scalars['json']>;
  choices?: InputMaybe<Scalars['json']>;
  display_number?: InputMaybe<Scalars['String']>;
  feedback_correct?: InputMaybe<Scalars['String']>;
  feedback_incorrect?: InputMaybe<Scalars['String']>;
  images?: InputMaybe<Scalars['json']>;
  key_stage_slug?: InputMaybe<Scalars['String']>;
  key_stage_title?: InputMaybe<Scalars['String']>;
  lesson_slug?: InputMaybe<Scalars['String']>;
  lesson_title?: InputMaybe<Scalars['String']>;
  order?: InputMaybe<Scalars['Int']>;
  points?: InputMaybe<Scalars['Int']>;
  question_id?: InputMaybe<Scalars['Int']>;
  quiz_type?: InputMaybe<Scalars['String']>;
  required?: InputMaybe<Scalars['Boolean']>;
  subject_slug?: InputMaybe<Scalars['String']>;
  subject_title?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  unit_slug?: InputMaybe<Scalars['String']>;
  unit_title?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Mv_Questions_Max_Fields = {
  __typename?: 'mv_questions_max_fields';
  display_number?: Maybe<Scalars['String']>;
  feedback_correct?: Maybe<Scalars['String']>;
  feedback_incorrect?: Maybe<Scalars['String']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  lesson_slug?: Maybe<Scalars['String']>;
  lesson_title?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  points?: Maybe<Scalars['Int']>;
  question_id?: Maybe<Scalars['Int']>;
  quiz_type?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  unit_slug?: Maybe<Scalars['String']>;
  unit_title?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "mv_questions" */
export type Mv_Questions_Max_Order_By = {
  display_number?: InputMaybe<Order_By>;
  feedback_correct?: InputMaybe<Order_By>;
  feedback_incorrect?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  lesson_slug?: InputMaybe<Order_By>;
  lesson_title?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_type?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  unit_slug?: InputMaybe<Order_By>;
  unit_title?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Mv_Questions_Min_Fields = {
  __typename?: 'mv_questions_min_fields';
  display_number?: Maybe<Scalars['String']>;
  feedback_correct?: Maybe<Scalars['String']>;
  feedback_incorrect?: Maybe<Scalars['String']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  lesson_slug?: Maybe<Scalars['String']>;
  lesson_title?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  points?: Maybe<Scalars['Int']>;
  question_id?: Maybe<Scalars['Int']>;
  quiz_type?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  unit_slug?: Maybe<Scalars['String']>;
  unit_title?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "mv_questions" */
export type Mv_Questions_Min_Order_By = {
  display_number?: InputMaybe<Order_By>;
  feedback_correct?: InputMaybe<Order_By>;
  feedback_incorrect?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  lesson_slug?: InputMaybe<Order_By>;
  lesson_title?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_type?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  unit_slug?: InputMaybe<Order_By>;
  unit_title?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "mv_questions" */
export type Mv_Questions_Mutation_Response = {
  __typename?: 'mv_questions_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Mv_Questions>;
};

/** input type for inserting object relation for remote table "mv_questions" */
export type Mv_Questions_Obj_Rel_Insert_Input = {
  data: Mv_Questions_Insert_Input;
};

/** ordering options when selecting data from "mv_questions" */
export type Mv_Questions_Order_By = {
  active?: InputMaybe<Order_By>;
  answer?: InputMaybe<Order_By>;
  choice_images?: InputMaybe<Order_By>;
  choices?: InputMaybe<Order_By>;
  display_number?: InputMaybe<Order_By>;
  feedback_correct?: InputMaybe<Order_By>;
  feedback_incorrect?: InputMaybe<Order_By>;
  images?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  lesson_slug?: InputMaybe<Order_By>;
  lesson_title?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_type?: InputMaybe<Order_By>;
  required?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  unit_slug?: InputMaybe<Order_By>;
  unit_title?: InputMaybe<Order_By>;
};

/** select columns of table "mv_questions" */
export enum Mv_Questions_Select_Column {
  /** column name */
  Active = 'active',
  /** column name */
  Answer = 'answer',
  /** column name */
  ChoiceImages = 'choice_images',
  /** column name */
  Choices = 'choices',
  /** column name */
  DisplayNumber = 'display_number',
  /** column name */
  FeedbackCorrect = 'feedback_correct',
  /** column name */
  FeedbackIncorrect = 'feedback_incorrect',
  /** column name */
  Images = 'images',
  /** column name */
  KeyStageSlug = 'key_stage_slug',
  /** column name */
  KeyStageTitle = 'key_stage_title',
  /** column name */
  LessonSlug = 'lesson_slug',
  /** column name */
  LessonTitle = 'lesson_title',
  /** column name */
  Order = 'order',
  /** column name */
  Points = 'points',
  /** column name */
  QuestionId = 'question_id',
  /** column name */
  QuizType = 'quiz_type',
  /** column name */
  Required = 'required',
  /** column name */
  SubjectSlug = 'subject_slug',
  /** column name */
  SubjectTitle = 'subject_title',
  /** column name */
  Title = 'title',
  /** column name */
  Type = 'type',
  /** column name */
  UnitSlug = 'unit_slug',
  /** column name */
  UnitTitle = 'unit_title'
}

/** input type for updating data in table "mv_questions" */
export type Mv_Questions_Set_Input = {
  active?: InputMaybe<Scalars['Boolean']>;
  answer?: InputMaybe<Scalars['json']>;
  choice_images?: InputMaybe<Scalars['json']>;
  choices?: InputMaybe<Scalars['json']>;
  display_number?: InputMaybe<Scalars['String']>;
  feedback_correct?: InputMaybe<Scalars['String']>;
  feedback_incorrect?: InputMaybe<Scalars['String']>;
  images?: InputMaybe<Scalars['json']>;
  key_stage_slug?: InputMaybe<Scalars['String']>;
  key_stage_title?: InputMaybe<Scalars['String']>;
  lesson_slug?: InputMaybe<Scalars['String']>;
  lesson_title?: InputMaybe<Scalars['String']>;
  order?: InputMaybe<Scalars['Int']>;
  points?: InputMaybe<Scalars['Int']>;
  question_id?: InputMaybe<Scalars['Int']>;
  quiz_type?: InputMaybe<Scalars['String']>;
  required?: InputMaybe<Scalars['Boolean']>;
  subject_slug?: InputMaybe<Scalars['String']>;
  subject_title?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  unit_slug?: InputMaybe<Scalars['String']>;
  unit_title?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Mv_Questions_Stddev_Fields = {
  __typename?: 'mv_questions_stddev_fields';
  order?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mv_questions" */
export type Mv_Questions_Stddev_Order_By = {
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Mv_Questions_Stddev_Pop_Fields = {
  __typename?: 'mv_questions_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mv_questions" */
export type Mv_Questions_Stddev_Pop_Order_By = {
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Mv_Questions_Stddev_Samp_Fields = {
  __typename?: 'mv_questions_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mv_questions" */
export type Mv_Questions_Stddev_Samp_Order_By = {
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Mv_Questions_Sum_Fields = {
  __typename?: 'mv_questions_sum_fields';
  order?: Maybe<Scalars['Int']>;
  points?: Maybe<Scalars['Int']>;
  question_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "mv_questions" */
export type Mv_Questions_Sum_Order_By = {
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Mv_Questions_Var_Pop_Fields = {
  __typename?: 'mv_questions_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mv_questions" */
export type Mv_Questions_Var_Pop_Order_By = {
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Mv_Questions_Var_Samp_Fields = {
  __typename?: 'mv_questions_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mv_questions" */
export type Mv_Questions_Var_Samp_Order_By = {
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Mv_Questions_Variance_Fields = {
  __typename?: 'mv_questions_variance_fields';
  order?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mv_questions" */
export type Mv_Questions_Variance_Order_By = {
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "mv_quizzes" */
export type Mv_Quizzes = {
  __typename?: 'mv_quizzes';
  description?: Maybe<Scalars['String']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  lesson_slug?: Maybe<Scalars['String']>;
  lesson_title?: Maybe<Scalars['String']>;
  max_points?: Maybe<Scalars['Int']>;
  question_count?: Maybe<Scalars['bigint']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  unit_slug?: Maybe<Scalars['String']>;
  unit_title?: Maybe<Scalars['String']>;
};

/** aggregated selection of "mv_quizzes" */
export type Mv_Quizzes_Aggregate = {
  __typename?: 'mv_quizzes_aggregate';
  aggregate?: Maybe<Mv_Quizzes_Aggregate_Fields>;
  nodes: Array<Mv_Quizzes>;
};

/** aggregate fields of "mv_quizzes" */
export type Mv_Quizzes_Aggregate_Fields = {
  __typename?: 'mv_quizzes_aggregate_fields';
  avg?: Maybe<Mv_Quizzes_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Mv_Quizzes_Max_Fields>;
  min?: Maybe<Mv_Quizzes_Min_Fields>;
  stddev?: Maybe<Mv_Quizzes_Stddev_Fields>;
  stddev_pop?: Maybe<Mv_Quizzes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Mv_Quizzes_Stddev_Samp_Fields>;
  sum?: Maybe<Mv_Quizzes_Sum_Fields>;
  var_pop?: Maybe<Mv_Quizzes_Var_Pop_Fields>;
  var_samp?: Maybe<Mv_Quizzes_Var_Samp_Fields>;
  variance?: Maybe<Mv_Quizzes_Variance_Fields>;
};


/** aggregate fields of "mv_quizzes" */
export type Mv_Quizzes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Mv_Quizzes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mv_quizzes" */
export type Mv_Quizzes_Aggregate_Order_By = {
  avg?: InputMaybe<Mv_Quizzes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Mv_Quizzes_Max_Order_By>;
  min?: InputMaybe<Mv_Quizzes_Min_Order_By>;
  stddev?: InputMaybe<Mv_Quizzes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Mv_Quizzes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Mv_Quizzes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Mv_Quizzes_Sum_Order_By>;
  var_pop?: InputMaybe<Mv_Quizzes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Mv_Quizzes_Var_Samp_Order_By>;
  variance?: InputMaybe<Mv_Quizzes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "mv_quizzes" */
export type Mv_Quizzes_Arr_Rel_Insert_Input = {
  data: Array<Mv_Quizzes_Insert_Input>;
};

/** aggregate avg on columns */
export type Mv_Quizzes_Avg_Fields = {
  __typename?: 'mv_quizzes_avg_fields';
  max_points?: Maybe<Scalars['Float']>;
  question_count?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mv_quizzes" */
export type Mv_Quizzes_Avg_Order_By = {
  max_points?: InputMaybe<Order_By>;
  question_count?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mv_quizzes". All fields are combined with a logical 'AND'. */
export type Mv_Quizzes_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Mv_Quizzes_Bool_Exp>>>;
  _not?: InputMaybe<Mv_Quizzes_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Mv_Quizzes_Bool_Exp>>>;
  description?: InputMaybe<String_Comparison_Exp>;
  key_stage_slug?: InputMaybe<String_Comparison_Exp>;
  key_stage_title?: InputMaybe<String_Comparison_Exp>;
  lesson_slug?: InputMaybe<String_Comparison_Exp>;
  lesson_title?: InputMaybe<String_Comparison_Exp>;
  max_points?: InputMaybe<Int_Comparison_Exp>;
  question_count?: InputMaybe<Bigint_Comparison_Exp>;
  subject_slug?: InputMaybe<String_Comparison_Exp>;
  subject_title?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  unit_slug?: InputMaybe<String_Comparison_Exp>;
  unit_title?: InputMaybe<String_Comparison_Exp>;
};

/** input type for incrementing integer column in table "mv_quizzes" */
export type Mv_Quizzes_Inc_Input = {
  max_points?: InputMaybe<Scalars['Int']>;
  question_count?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "mv_quizzes" */
export type Mv_Quizzes_Insert_Input = {
  description?: InputMaybe<Scalars['String']>;
  key_stage_slug?: InputMaybe<Scalars['String']>;
  key_stage_title?: InputMaybe<Scalars['String']>;
  lesson_slug?: InputMaybe<Scalars['String']>;
  lesson_title?: InputMaybe<Scalars['String']>;
  max_points?: InputMaybe<Scalars['Int']>;
  question_count?: InputMaybe<Scalars['bigint']>;
  subject_slug?: InputMaybe<Scalars['String']>;
  subject_title?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  unit_slug?: InputMaybe<Scalars['String']>;
  unit_title?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Mv_Quizzes_Max_Fields = {
  __typename?: 'mv_quizzes_max_fields';
  description?: Maybe<Scalars['String']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  lesson_slug?: Maybe<Scalars['String']>;
  lesson_title?: Maybe<Scalars['String']>;
  max_points?: Maybe<Scalars['Int']>;
  question_count?: Maybe<Scalars['bigint']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  unit_slug?: Maybe<Scalars['String']>;
  unit_title?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "mv_quizzes" */
export type Mv_Quizzes_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  lesson_slug?: InputMaybe<Order_By>;
  lesson_title?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
  question_count?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  unit_slug?: InputMaybe<Order_By>;
  unit_title?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Mv_Quizzes_Min_Fields = {
  __typename?: 'mv_quizzes_min_fields';
  description?: Maybe<Scalars['String']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  lesson_slug?: Maybe<Scalars['String']>;
  lesson_title?: Maybe<Scalars['String']>;
  max_points?: Maybe<Scalars['Int']>;
  question_count?: Maybe<Scalars['bigint']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  unit_slug?: Maybe<Scalars['String']>;
  unit_title?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "mv_quizzes" */
export type Mv_Quizzes_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  lesson_slug?: InputMaybe<Order_By>;
  lesson_title?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
  question_count?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  unit_slug?: InputMaybe<Order_By>;
  unit_title?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "mv_quizzes" */
export type Mv_Quizzes_Mutation_Response = {
  __typename?: 'mv_quizzes_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Mv_Quizzes>;
};

/** input type for inserting object relation for remote table "mv_quizzes" */
export type Mv_Quizzes_Obj_Rel_Insert_Input = {
  data: Mv_Quizzes_Insert_Input;
};

/** ordering options when selecting data from "mv_quizzes" */
export type Mv_Quizzes_Order_By = {
  description?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  lesson_slug?: InputMaybe<Order_By>;
  lesson_title?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
  question_count?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  unit_slug?: InputMaybe<Order_By>;
  unit_title?: InputMaybe<Order_By>;
};

/** select columns of table "mv_quizzes" */
export enum Mv_Quizzes_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  KeyStageSlug = 'key_stage_slug',
  /** column name */
  KeyStageTitle = 'key_stage_title',
  /** column name */
  LessonSlug = 'lesson_slug',
  /** column name */
  LessonTitle = 'lesson_title',
  /** column name */
  MaxPoints = 'max_points',
  /** column name */
  QuestionCount = 'question_count',
  /** column name */
  SubjectSlug = 'subject_slug',
  /** column name */
  SubjectTitle = 'subject_title',
  /** column name */
  Title = 'title',
  /** column name */
  Type = 'type',
  /** column name */
  UnitSlug = 'unit_slug',
  /** column name */
  UnitTitle = 'unit_title'
}

/** input type for updating data in table "mv_quizzes" */
export type Mv_Quizzes_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  key_stage_slug?: InputMaybe<Scalars['String']>;
  key_stage_title?: InputMaybe<Scalars['String']>;
  lesson_slug?: InputMaybe<Scalars['String']>;
  lesson_title?: InputMaybe<Scalars['String']>;
  max_points?: InputMaybe<Scalars['Int']>;
  question_count?: InputMaybe<Scalars['bigint']>;
  subject_slug?: InputMaybe<Scalars['String']>;
  subject_title?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  unit_slug?: InputMaybe<Scalars['String']>;
  unit_title?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Mv_Quizzes_Stddev_Fields = {
  __typename?: 'mv_quizzes_stddev_fields';
  max_points?: Maybe<Scalars['Float']>;
  question_count?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mv_quizzes" */
export type Mv_Quizzes_Stddev_Order_By = {
  max_points?: InputMaybe<Order_By>;
  question_count?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Mv_Quizzes_Stddev_Pop_Fields = {
  __typename?: 'mv_quizzes_stddev_pop_fields';
  max_points?: Maybe<Scalars['Float']>;
  question_count?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mv_quizzes" */
export type Mv_Quizzes_Stddev_Pop_Order_By = {
  max_points?: InputMaybe<Order_By>;
  question_count?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Mv_Quizzes_Stddev_Samp_Fields = {
  __typename?: 'mv_quizzes_stddev_samp_fields';
  max_points?: Maybe<Scalars['Float']>;
  question_count?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mv_quizzes" */
export type Mv_Quizzes_Stddev_Samp_Order_By = {
  max_points?: InputMaybe<Order_By>;
  question_count?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Mv_Quizzes_Sum_Fields = {
  __typename?: 'mv_quizzes_sum_fields';
  max_points?: Maybe<Scalars['Int']>;
  question_count?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "mv_quizzes" */
export type Mv_Quizzes_Sum_Order_By = {
  max_points?: InputMaybe<Order_By>;
  question_count?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Mv_Quizzes_Var_Pop_Fields = {
  __typename?: 'mv_quizzes_var_pop_fields';
  max_points?: Maybe<Scalars['Float']>;
  question_count?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mv_quizzes" */
export type Mv_Quizzes_Var_Pop_Order_By = {
  max_points?: InputMaybe<Order_By>;
  question_count?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Mv_Quizzes_Var_Samp_Fields = {
  __typename?: 'mv_quizzes_var_samp_fields';
  max_points?: Maybe<Scalars['Float']>;
  question_count?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mv_quizzes" */
export type Mv_Quizzes_Var_Samp_Order_By = {
  max_points?: InputMaybe<Order_By>;
  question_count?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Mv_Quizzes_Variance_Fields = {
  __typename?: 'mv_quizzes_variance_fields';
  max_points?: Maybe<Scalars['Float']>;
  question_count?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mv_quizzes" */
export type Mv_Quizzes_Variance_Order_By = {
  max_points?: InputMaybe<Order_By>;
  question_count?: InputMaybe<Order_By>;
};

/** columns and relationships of "mv_subjects" */
export type Mv_Subjects = {
  __typename?: 'mv_subjects';
  active_unit_count?: Maybe<Scalars['bigint']>;
  key_stage_short_code?: Maybe<Scalars['String']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  lesson_count?: Maybe<Scalars['numeric']>;
  slug?: Maybe<Scalars['String']>;
  tier_count?: Maybe<Scalars['bigint']>;
  title?: Maybe<Scalars['String']>;
  unit_count?: Maybe<Scalars['bigint']>;
};

/** aggregated selection of "mv_subjects" */
export type Mv_Subjects_Aggregate = {
  __typename?: 'mv_subjects_aggregate';
  aggregate?: Maybe<Mv_Subjects_Aggregate_Fields>;
  nodes: Array<Mv_Subjects>;
};

/** aggregate fields of "mv_subjects" */
export type Mv_Subjects_Aggregate_Fields = {
  __typename?: 'mv_subjects_aggregate_fields';
  avg?: Maybe<Mv_Subjects_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Mv_Subjects_Max_Fields>;
  min?: Maybe<Mv_Subjects_Min_Fields>;
  stddev?: Maybe<Mv_Subjects_Stddev_Fields>;
  stddev_pop?: Maybe<Mv_Subjects_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Mv_Subjects_Stddev_Samp_Fields>;
  sum?: Maybe<Mv_Subjects_Sum_Fields>;
  var_pop?: Maybe<Mv_Subjects_Var_Pop_Fields>;
  var_samp?: Maybe<Mv_Subjects_Var_Samp_Fields>;
  variance?: Maybe<Mv_Subjects_Variance_Fields>;
};


/** aggregate fields of "mv_subjects" */
export type Mv_Subjects_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Mv_Subjects_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mv_subjects" */
export type Mv_Subjects_Aggregate_Order_By = {
  avg?: InputMaybe<Mv_Subjects_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Mv_Subjects_Max_Order_By>;
  min?: InputMaybe<Mv_Subjects_Min_Order_By>;
  stddev?: InputMaybe<Mv_Subjects_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Mv_Subjects_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Mv_Subjects_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Mv_Subjects_Sum_Order_By>;
  var_pop?: InputMaybe<Mv_Subjects_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Mv_Subjects_Var_Samp_Order_By>;
  variance?: InputMaybe<Mv_Subjects_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "mv_subjects" */
export type Mv_Subjects_Arr_Rel_Insert_Input = {
  data: Array<Mv_Subjects_Insert_Input>;
};

/** aggregate avg on columns */
export type Mv_Subjects_Avg_Fields = {
  __typename?: 'mv_subjects_avg_fields';
  active_unit_count?: Maybe<Scalars['Float']>;
  lesson_count?: Maybe<Scalars['Float']>;
  tier_count?: Maybe<Scalars['Float']>;
  unit_count?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mv_subjects" */
export type Mv_Subjects_Avg_Order_By = {
  active_unit_count?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  tier_count?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mv_subjects". All fields are combined with a logical 'AND'. */
export type Mv_Subjects_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Mv_Subjects_Bool_Exp>>>;
  _not?: InputMaybe<Mv_Subjects_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Mv_Subjects_Bool_Exp>>>;
  active_unit_count?: InputMaybe<Bigint_Comparison_Exp>;
  key_stage_short_code?: InputMaybe<String_Comparison_Exp>;
  key_stage_slug?: InputMaybe<String_Comparison_Exp>;
  key_stage_title?: InputMaybe<String_Comparison_Exp>;
  lesson_count?: InputMaybe<Numeric_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  tier_count?: InputMaybe<Bigint_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  unit_count?: InputMaybe<Bigint_Comparison_Exp>;
};

/** input type for incrementing integer column in table "mv_subjects" */
export type Mv_Subjects_Inc_Input = {
  active_unit_count?: InputMaybe<Scalars['bigint']>;
  lesson_count?: InputMaybe<Scalars['numeric']>;
  tier_count?: InputMaybe<Scalars['bigint']>;
  unit_count?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "mv_subjects" */
export type Mv_Subjects_Insert_Input = {
  active_unit_count?: InputMaybe<Scalars['bigint']>;
  key_stage_short_code?: InputMaybe<Scalars['String']>;
  key_stage_slug?: InputMaybe<Scalars['String']>;
  key_stage_title?: InputMaybe<Scalars['String']>;
  lesson_count?: InputMaybe<Scalars['numeric']>;
  slug?: InputMaybe<Scalars['String']>;
  tier_count?: InputMaybe<Scalars['bigint']>;
  title?: InputMaybe<Scalars['String']>;
  unit_count?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type Mv_Subjects_Max_Fields = {
  __typename?: 'mv_subjects_max_fields';
  active_unit_count?: Maybe<Scalars['bigint']>;
  key_stage_short_code?: Maybe<Scalars['String']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  lesson_count?: Maybe<Scalars['numeric']>;
  slug?: Maybe<Scalars['String']>;
  tier_count?: Maybe<Scalars['bigint']>;
  title?: Maybe<Scalars['String']>;
  unit_count?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "mv_subjects" */
export type Mv_Subjects_Max_Order_By = {
  active_unit_count?: InputMaybe<Order_By>;
  key_stage_short_code?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  tier_count?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Mv_Subjects_Min_Fields = {
  __typename?: 'mv_subjects_min_fields';
  active_unit_count?: Maybe<Scalars['bigint']>;
  key_stage_short_code?: Maybe<Scalars['String']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  lesson_count?: Maybe<Scalars['numeric']>;
  slug?: Maybe<Scalars['String']>;
  tier_count?: Maybe<Scalars['bigint']>;
  title?: Maybe<Scalars['String']>;
  unit_count?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "mv_subjects" */
export type Mv_Subjects_Min_Order_By = {
  active_unit_count?: InputMaybe<Order_By>;
  key_stage_short_code?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  tier_count?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "mv_subjects" */
export type Mv_Subjects_Mutation_Response = {
  __typename?: 'mv_subjects_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Mv_Subjects>;
};

/** input type for inserting object relation for remote table "mv_subjects" */
export type Mv_Subjects_Obj_Rel_Insert_Input = {
  data: Mv_Subjects_Insert_Input;
};

/** ordering options when selecting data from "mv_subjects" */
export type Mv_Subjects_Order_By = {
  active_unit_count?: InputMaybe<Order_By>;
  key_stage_short_code?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  tier_count?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** select columns of table "mv_subjects" */
export enum Mv_Subjects_Select_Column {
  /** column name */
  ActiveUnitCount = 'active_unit_count',
  /** column name */
  KeyStageShortCode = 'key_stage_short_code',
  /** column name */
  KeyStageSlug = 'key_stage_slug',
  /** column name */
  KeyStageTitle = 'key_stage_title',
  /** column name */
  LessonCount = 'lesson_count',
  /** column name */
  Slug = 'slug',
  /** column name */
  TierCount = 'tier_count',
  /** column name */
  Title = 'title',
  /** column name */
  UnitCount = 'unit_count'
}

/** input type for updating data in table "mv_subjects" */
export type Mv_Subjects_Set_Input = {
  active_unit_count?: InputMaybe<Scalars['bigint']>;
  key_stage_short_code?: InputMaybe<Scalars['String']>;
  key_stage_slug?: InputMaybe<Scalars['String']>;
  key_stage_title?: InputMaybe<Scalars['String']>;
  lesson_count?: InputMaybe<Scalars['numeric']>;
  slug?: InputMaybe<Scalars['String']>;
  tier_count?: InputMaybe<Scalars['bigint']>;
  title?: InputMaybe<Scalars['String']>;
  unit_count?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type Mv_Subjects_Stddev_Fields = {
  __typename?: 'mv_subjects_stddev_fields';
  active_unit_count?: Maybe<Scalars['Float']>;
  lesson_count?: Maybe<Scalars['Float']>;
  tier_count?: Maybe<Scalars['Float']>;
  unit_count?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mv_subjects" */
export type Mv_Subjects_Stddev_Order_By = {
  active_unit_count?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  tier_count?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Mv_Subjects_Stddev_Pop_Fields = {
  __typename?: 'mv_subjects_stddev_pop_fields';
  active_unit_count?: Maybe<Scalars['Float']>;
  lesson_count?: Maybe<Scalars['Float']>;
  tier_count?: Maybe<Scalars['Float']>;
  unit_count?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mv_subjects" */
export type Mv_Subjects_Stddev_Pop_Order_By = {
  active_unit_count?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  tier_count?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Mv_Subjects_Stddev_Samp_Fields = {
  __typename?: 'mv_subjects_stddev_samp_fields';
  active_unit_count?: Maybe<Scalars['Float']>;
  lesson_count?: Maybe<Scalars['Float']>;
  tier_count?: Maybe<Scalars['Float']>;
  unit_count?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mv_subjects" */
export type Mv_Subjects_Stddev_Samp_Order_By = {
  active_unit_count?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  tier_count?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Mv_Subjects_Sum_Fields = {
  __typename?: 'mv_subjects_sum_fields';
  active_unit_count?: Maybe<Scalars['bigint']>;
  lesson_count?: Maybe<Scalars['numeric']>;
  tier_count?: Maybe<Scalars['bigint']>;
  unit_count?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "mv_subjects" */
export type Mv_Subjects_Sum_Order_By = {
  active_unit_count?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  tier_count?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Mv_Subjects_Var_Pop_Fields = {
  __typename?: 'mv_subjects_var_pop_fields';
  active_unit_count?: Maybe<Scalars['Float']>;
  lesson_count?: Maybe<Scalars['Float']>;
  tier_count?: Maybe<Scalars['Float']>;
  unit_count?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mv_subjects" */
export type Mv_Subjects_Var_Pop_Order_By = {
  active_unit_count?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  tier_count?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Mv_Subjects_Var_Samp_Fields = {
  __typename?: 'mv_subjects_var_samp_fields';
  active_unit_count?: Maybe<Scalars['Float']>;
  lesson_count?: Maybe<Scalars['Float']>;
  tier_count?: Maybe<Scalars['Float']>;
  unit_count?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mv_subjects" */
export type Mv_Subjects_Var_Samp_Order_By = {
  active_unit_count?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  tier_count?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Mv_Subjects_Variance_Fields = {
  __typename?: 'mv_subjects_variance_fields';
  active_unit_count?: Maybe<Scalars['Float']>;
  lesson_count?: Maybe<Scalars['Float']>;
  tier_count?: Maybe<Scalars['Float']>;
  unit_count?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mv_subjects" */
export type Mv_Subjects_Variance_Order_By = {
  active_unit_count?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  tier_count?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** columns and relationships of "mv_tiers" */
export type Mv_Tiers = {
  __typename?: 'mv_tiers';
  key_stage_slug?: Maybe<Scalars['String']>;
  lesson_count?: Maybe<Scalars['bigint']>;
  slug?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  unit_count?: Maybe<Scalars['bigint']>;
};

/** aggregated selection of "mv_tiers" */
export type Mv_Tiers_Aggregate = {
  __typename?: 'mv_tiers_aggregate';
  aggregate?: Maybe<Mv_Tiers_Aggregate_Fields>;
  nodes: Array<Mv_Tiers>;
};

/** aggregate fields of "mv_tiers" */
export type Mv_Tiers_Aggregate_Fields = {
  __typename?: 'mv_tiers_aggregate_fields';
  avg?: Maybe<Mv_Tiers_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Mv_Tiers_Max_Fields>;
  min?: Maybe<Mv_Tiers_Min_Fields>;
  stddev?: Maybe<Mv_Tiers_Stddev_Fields>;
  stddev_pop?: Maybe<Mv_Tiers_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Mv_Tiers_Stddev_Samp_Fields>;
  sum?: Maybe<Mv_Tiers_Sum_Fields>;
  var_pop?: Maybe<Mv_Tiers_Var_Pop_Fields>;
  var_samp?: Maybe<Mv_Tiers_Var_Samp_Fields>;
  variance?: Maybe<Mv_Tiers_Variance_Fields>;
};


/** aggregate fields of "mv_tiers" */
export type Mv_Tiers_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Mv_Tiers_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mv_tiers" */
export type Mv_Tiers_Aggregate_Order_By = {
  avg?: InputMaybe<Mv_Tiers_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Mv_Tiers_Max_Order_By>;
  min?: InputMaybe<Mv_Tiers_Min_Order_By>;
  stddev?: InputMaybe<Mv_Tiers_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Mv_Tiers_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Mv_Tiers_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Mv_Tiers_Sum_Order_By>;
  var_pop?: InputMaybe<Mv_Tiers_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Mv_Tiers_Var_Samp_Order_By>;
  variance?: InputMaybe<Mv_Tiers_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "mv_tiers" */
export type Mv_Tiers_Arr_Rel_Insert_Input = {
  data: Array<Mv_Tiers_Insert_Input>;
};

/** aggregate avg on columns */
export type Mv_Tiers_Avg_Fields = {
  __typename?: 'mv_tiers_avg_fields';
  lesson_count?: Maybe<Scalars['Float']>;
  unit_count?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mv_tiers" */
export type Mv_Tiers_Avg_Order_By = {
  lesson_count?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mv_tiers". All fields are combined with a logical 'AND'. */
export type Mv_Tiers_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Mv_Tiers_Bool_Exp>>>;
  _not?: InputMaybe<Mv_Tiers_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Mv_Tiers_Bool_Exp>>>;
  key_stage_slug?: InputMaybe<String_Comparison_Exp>;
  lesson_count?: InputMaybe<Bigint_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  subject_slug?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  unit_count?: InputMaybe<Bigint_Comparison_Exp>;
};

/** input type for incrementing integer column in table "mv_tiers" */
export type Mv_Tiers_Inc_Input = {
  lesson_count?: InputMaybe<Scalars['bigint']>;
  unit_count?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "mv_tiers" */
export type Mv_Tiers_Insert_Input = {
  key_stage_slug?: InputMaybe<Scalars['String']>;
  lesson_count?: InputMaybe<Scalars['bigint']>;
  slug?: InputMaybe<Scalars['String']>;
  subject_slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  unit_count?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type Mv_Tiers_Max_Fields = {
  __typename?: 'mv_tiers_max_fields';
  key_stage_slug?: Maybe<Scalars['String']>;
  lesson_count?: Maybe<Scalars['bigint']>;
  slug?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  unit_count?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "mv_tiers" */
export type Mv_Tiers_Max_Order_By = {
  key_stage_slug?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Mv_Tiers_Min_Fields = {
  __typename?: 'mv_tiers_min_fields';
  key_stage_slug?: Maybe<Scalars['String']>;
  lesson_count?: Maybe<Scalars['bigint']>;
  slug?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  unit_count?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "mv_tiers" */
export type Mv_Tiers_Min_Order_By = {
  key_stage_slug?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "mv_tiers" */
export type Mv_Tiers_Mutation_Response = {
  __typename?: 'mv_tiers_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Mv_Tiers>;
};

/** input type for inserting object relation for remote table "mv_tiers" */
export type Mv_Tiers_Obj_Rel_Insert_Input = {
  data: Mv_Tiers_Insert_Input;
};

/** ordering options when selecting data from "mv_tiers" */
export type Mv_Tiers_Order_By = {
  key_stage_slug?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** select columns of table "mv_tiers" */
export enum Mv_Tiers_Select_Column {
  /** column name */
  KeyStageSlug = 'key_stage_slug',
  /** column name */
  LessonCount = 'lesson_count',
  /** column name */
  Slug = 'slug',
  /** column name */
  SubjectSlug = 'subject_slug',
  /** column name */
  Title = 'title',
  /** column name */
  UnitCount = 'unit_count'
}

/** input type for updating data in table "mv_tiers" */
export type Mv_Tiers_Set_Input = {
  key_stage_slug?: InputMaybe<Scalars['String']>;
  lesson_count?: InputMaybe<Scalars['bigint']>;
  slug?: InputMaybe<Scalars['String']>;
  subject_slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  unit_count?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type Mv_Tiers_Stddev_Fields = {
  __typename?: 'mv_tiers_stddev_fields';
  lesson_count?: Maybe<Scalars['Float']>;
  unit_count?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mv_tiers" */
export type Mv_Tiers_Stddev_Order_By = {
  lesson_count?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Mv_Tiers_Stddev_Pop_Fields = {
  __typename?: 'mv_tiers_stddev_pop_fields';
  lesson_count?: Maybe<Scalars['Float']>;
  unit_count?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mv_tiers" */
export type Mv_Tiers_Stddev_Pop_Order_By = {
  lesson_count?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Mv_Tiers_Stddev_Samp_Fields = {
  __typename?: 'mv_tiers_stddev_samp_fields';
  lesson_count?: Maybe<Scalars['Float']>;
  unit_count?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mv_tiers" */
export type Mv_Tiers_Stddev_Samp_Order_By = {
  lesson_count?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Mv_Tiers_Sum_Fields = {
  __typename?: 'mv_tiers_sum_fields';
  lesson_count?: Maybe<Scalars['bigint']>;
  unit_count?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "mv_tiers" */
export type Mv_Tiers_Sum_Order_By = {
  lesson_count?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Mv_Tiers_Var_Pop_Fields = {
  __typename?: 'mv_tiers_var_pop_fields';
  lesson_count?: Maybe<Scalars['Float']>;
  unit_count?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mv_tiers" */
export type Mv_Tiers_Var_Pop_Order_By = {
  lesson_count?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Mv_Tiers_Var_Samp_Fields = {
  __typename?: 'mv_tiers_var_samp_fields';
  lesson_count?: Maybe<Scalars['Float']>;
  unit_count?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mv_tiers" */
export type Mv_Tiers_Var_Samp_Order_By = {
  lesson_count?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Mv_Tiers_Variance_Fields = {
  __typename?: 'mv_tiers_variance_fields';
  lesson_count?: Maybe<Scalars['Float']>;
  unit_count?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mv_tiers" */
export type Mv_Tiers_Variance_Order_By = {
  lesson_count?: InputMaybe<Order_By>;
  unit_count?: InputMaybe<Order_By>;
};

/** columns and relationships of "mv_units" */
export type Mv_Units = {
  __typename?: 'mv_units';
  expired?: Maybe<Scalars['Boolean']>;
  expired_lesson_count?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['Int']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  lesson_count?: Maybe<Scalars['bigint']>;
  programme_of_study_id?: Maybe<Scalars['Int']>;
  quiz_count?: Maybe<Scalars['bigint']>;
  slug?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  theme_slug?: Maybe<Scalars['String']>;
  theme_title?: Maybe<Scalars['String']>;
  tier_name?: Maybe<Scalars['String']>;
  tier_slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  unit_study_order?: Maybe<Scalars['Int']>;
  year?: Maybe<Scalars['String']>;
};

/** aggregated selection of "mv_units" */
export type Mv_Units_Aggregate = {
  __typename?: 'mv_units_aggregate';
  aggregate?: Maybe<Mv_Units_Aggregate_Fields>;
  nodes: Array<Mv_Units>;
};

/** aggregate fields of "mv_units" */
export type Mv_Units_Aggregate_Fields = {
  __typename?: 'mv_units_aggregate_fields';
  avg?: Maybe<Mv_Units_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Mv_Units_Max_Fields>;
  min?: Maybe<Mv_Units_Min_Fields>;
  stddev?: Maybe<Mv_Units_Stddev_Fields>;
  stddev_pop?: Maybe<Mv_Units_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Mv_Units_Stddev_Samp_Fields>;
  sum?: Maybe<Mv_Units_Sum_Fields>;
  var_pop?: Maybe<Mv_Units_Var_Pop_Fields>;
  var_samp?: Maybe<Mv_Units_Var_Samp_Fields>;
  variance?: Maybe<Mv_Units_Variance_Fields>;
};


/** aggregate fields of "mv_units" */
export type Mv_Units_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Mv_Units_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mv_units" */
export type Mv_Units_Aggregate_Order_By = {
  avg?: InputMaybe<Mv_Units_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Mv_Units_Max_Order_By>;
  min?: InputMaybe<Mv_Units_Min_Order_By>;
  stddev?: InputMaybe<Mv_Units_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Mv_Units_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Mv_Units_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Mv_Units_Sum_Order_By>;
  var_pop?: InputMaybe<Mv_Units_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Mv_Units_Var_Samp_Order_By>;
  variance?: InputMaybe<Mv_Units_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "mv_units" */
export type Mv_Units_Arr_Rel_Insert_Input = {
  data: Array<Mv_Units_Insert_Input>;
};

/** aggregate avg on columns */
export type Mv_Units_Avg_Fields = {
  __typename?: 'mv_units_avg_fields';
  expired_lesson_count?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  lesson_count?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  quiz_count?: Maybe<Scalars['Float']>;
  unit_study_order?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mv_units" */
export type Mv_Units_Avg_Order_By = {
  expired_lesson_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  unit_study_order?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mv_units". All fields are combined with a logical 'AND'. */
export type Mv_Units_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Mv_Units_Bool_Exp>>>;
  _not?: InputMaybe<Mv_Units_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Mv_Units_Bool_Exp>>>;
  expired?: InputMaybe<Boolean_Comparison_Exp>;
  expired_lesson_count?: InputMaybe<Bigint_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  key_stage_slug?: InputMaybe<String_Comparison_Exp>;
  key_stage_title?: InputMaybe<String_Comparison_Exp>;
  lesson_count?: InputMaybe<Bigint_Comparison_Exp>;
  programme_of_study_id?: InputMaybe<Int_Comparison_Exp>;
  quiz_count?: InputMaybe<Bigint_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  subject_slug?: InputMaybe<String_Comparison_Exp>;
  subject_title?: InputMaybe<String_Comparison_Exp>;
  theme_slug?: InputMaybe<String_Comparison_Exp>;
  theme_title?: InputMaybe<String_Comparison_Exp>;
  tier_name?: InputMaybe<String_Comparison_Exp>;
  tier_slug?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  unit_study_order?: InputMaybe<Int_Comparison_Exp>;
  year?: InputMaybe<String_Comparison_Exp>;
};

/** input type for incrementing integer column in table "mv_units" */
export type Mv_Units_Inc_Input = {
  expired_lesson_count?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['Int']>;
  lesson_count?: InputMaybe<Scalars['bigint']>;
  programme_of_study_id?: InputMaybe<Scalars['Int']>;
  quiz_count?: InputMaybe<Scalars['bigint']>;
  unit_study_order?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "mv_units" */
export type Mv_Units_Insert_Input = {
  expired?: InputMaybe<Scalars['Boolean']>;
  expired_lesson_count?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['Int']>;
  key_stage_slug?: InputMaybe<Scalars['String']>;
  key_stage_title?: InputMaybe<Scalars['String']>;
  lesson_count?: InputMaybe<Scalars['bigint']>;
  programme_of_study_id?: InputMaybe<Scalars['Int']>;
  quiz_count?: InputMaybe<Scalars['bigint']>;
  slug?: InputMaybe<Scalars['String']>;
  subject_slug?: InputMaybe<Scalars['String']>;
  subject_title?: InputMaybe<Scalars['String']>;
  theme_slug?: InputMaybe<Scalars['String']>;
  theme_title?: InputMaybe<Scalars['String']>;
  tier_name?: InputMaybe<Scalars['String']>;
  tier_slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  unit_study_order?: InputMaybe<Scalars['Int']>;
  year?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Mv_Units_Max_Fields = {
  __typename?: 'mv_units_max_fields';
  expired_lesson_count?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['Int']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  lesson_count?: Maybe<Scalars['bigint']>;
  programme_of_study_id?: Maybe<Scalars['Int']>;
  quiz_count?: Maybe<Scalars['bigint']>;
  slug?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  theme_slug?: Maybe<Scalars['String']>;
  theme_title?: Maybe<Scalars['String']>;
  tier_name?: Maybe<Scalars['String']>;
  tier_slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  unit_study_order?: Maybe<Scalars['Int']>;
  year?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "mv_units" */
export type Mv_Units_Max_Order_By = {
  expired_lesson_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  theme_slug?: InputMaybe<Order_By>;
  theme_title?: InputMaybe<Order_By>;
  tier_name?: InputMaybe<Order_By>;
  tier_slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unit_study_order?: InputMaybe<Order_By>;
  year?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Mv_Units_Min_Fields = {
  __typename?: 'mv_units_min_fields';
  expired_lesson_count?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['Int']>;
  key_stage_slug?: Maybe<Scalars['String']>;
  key_stage_title?: Maybe<Scalars['String']>;
  lesson_count?: Maybe<Scalars['bigint']>;
  programme_of_study_id?: Maybe<Scalars['Int']>;
  quiz_count?: Maybe<Scalars['bigint']>;
  slug?: Maybe<Scalars['String']>;
  subject_slug?: Maybe<Scalars['String']>;
  subject_title?: Maybe<Scalars['String']>;
  theme_slug?: Maybe<Scalars['String']>;
  theme_title?: Maybe<Scalars['String']>;
  tier_name?: Maybe<Scalars['String']>;
  tier_slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  unit_study_order?: Maybe<Scalars['Int']>;
  year?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "mv_units" */
export type Mv_Units_Min_Order_By = {
  expired_lesson_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  theme_slug?: InputMaybe<Order_By>;
  theme_title?: InputMaybe<Order_By>;
  tier_name?: InputMaybe<Order_By>;
  tier_slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unit_study_order?: InputMaybe<Order_By>;
  year?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "mv_units" */
export type Mv_Units_Mutation_Response = {
  __typename?: 'mv_units_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Mv_Units>;
};

/** input type for inserting object relation for remote table "mv_units" */
export type Mv_Units_Obj_Rel_Insert_Input = {
  data: Mv_Units_Insert_Input;
};

/** ordering options when selecting data from "mv_units" */
export type Mv_Units_Order_By = {
  expired?: InputMaybe<Order_By>;
  expired_lesson_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  key_stage_slug?: InputMaybe<Order_By>;
  key_stage_title?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  subject_slug?: InputMaybe<Order_By>;
  subject_title?: InputMaybe<Order_By>;
  theme_slug?: InputMaybe<Order_By>;
  theme_title?: InputMaybe<Order_By>;
  tier_name?: InputMaybe<Order_By>;
  tier_slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unit_study_order?: InputMaybe<Order_By>;
  year?: InputMaybe<Order_By>;
};

/** select columns of table "mv_units" */
export enum Mv_Units_Select_Column {
  /** column name */
  Expired = 'expired',
  /** column name */
  ExpiredLessonCount = 'expired_lesson_count',
  /** column name */
  Id = 'id',
  /** column name */
  KeyStageSlug = 'key_stage_slug',
  /** column name */
  KeyStageTitle = 'key_stage_title',
  /** column name */
  LessonCount = 'lesson_count',
  /** column name */
  ProgrammeOfStudyId = 'programme_of_study_id',
  /** column name */
  QuizCount = 'quiz_count',
  /** column name */
  Slug = 'slug',
  /** column name */
  SubjectSlug = 'subject_slug',
  /** column name */
  SubjectTitle = 'subject_title',
  /** column name */
  ThemeSlug = 'theme_slug',
  /** column name */
  ThemeTitle = 'theme_title',
  /** column name */
  TierName = 'tier_name',
  /** column name */
  TierSlug = 'tier_slug',
  /** column name */
  Title = 'title',
  /** column name */
  UnitStudyOrder = 'unit_study_order',
  /** column name */
  Year = 'year'
}

/** input type for updating data in table "mv_units" */
export type Mv_Units_Set_Input = {
  expired?: InputMaybe<Scalars['Boolean']>;
  expired_lesson_count?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['Int']>;
  key_stage_slug?: InputMaybe<Scalars['String']>;
  key_stage_title?: InputMaybe<Scalars['String']>;
  lesson_count?: InputMaybe<Scalars['bigint']>;
  programme_of_study_id?: InputMaybe<Scalars['Int']>;
  quiz_count?: InputMaybe<Scalars['bigint']>;
  slug?: InputMaybe<Scalars['String']>;
  subject_slug?: InputMaybe<Scalars['String']>;
  subject_title?: InputMaybe<Scalars['String']>;
  theme_slug?: InputMaybe<Scalars['String']>;
  theme_title?: InputMaybe<Scalars['String']>;
  tier_name?: InputMaybe<Scalars['String']>;
  tier_slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  unit_study_order?: InputMaybe<Scalars['Int']>;
  year?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Mv_Units_Stddev_Fields = {
  __typename?: 'mv_units_stddev_fields';
  expired_lesson_count?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  lesson_count?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  quiz_count?: Maybe<Scalars['Float']>;
  unit_study_order?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mv_units" */
export type Mv_Units_Stddev_Order_By = {
  expired_lesson_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  unit_study_order?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Mv_Units_Stddev_Pop_Fields = {
  __typename?: 'mv_units_stddev_pop_fields';
  expired_lesson_count?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  lesson_count?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  quiz_count?: Maybe<Scalars['Float']>;
  unit_study_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mv_units" */
export type Mv_Units_Stddev_Pop_Order_By = {
  expired_lesson_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  unit_study_order?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Mv_Units_Stddev_Samp_Fields = {
  __typename?: 'mv_units_stddev_samp_fields';
  expired_lesson_count?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  lesson_count?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  quiz_count?: Maybe<Scalars['Float']>;
  unit_study_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mv_units" */
export type Mv_Units_Stddev_Samp_Order_By = {
  expired_lesson_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  unit_study_order?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Mv_Units_Sum_Fields = {
  __typename?: 'mv_units_sum_fields';
  expired_lesson_count?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['Int']>;
  lesson_count?: Maybe<Scalars['bigint']>;
  programme_of_study_id?: Maybe<Scalars['Int']>;
  quiz_count?: Maybe<Scalars['bigint']>;
  unit_study_order?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "mv_units" */
export type Mv_Units_Sum_Order_By = {
  expired_lesson_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  unit_study_order?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Mv_Units_Var_Pop_Fields = {
  __typename?: 'mv_units_var_pop_fields';
  expired_lesson_count?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  lesson_count?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  quiz_count?: Maybe<Scalars['Float']>;
  unit_study_order?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mv_units" */
export type Mv_Units_Var_Pop_Order_By = {
  expired_lesson_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  unit_study_order?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Mv_Units_Var_Samp_Fields = {
  __typename?: 'mv_units_var_samp_fields';
  expired_lesson_count?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  lesson_count?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  quiz_count?: Maybe<Scalars['Float']>;
  unit_study_order?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mv_units" */
export type Mv_Units_Var_Samp_Order_By = {
  expired_lesson_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  unit_study_order?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Mv_Units_Variance_Fields = {
  __typename?: 'mv_units_variance_fields';
  expired_lesson_count?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  lesson_count?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  quiz_count?: Maybe<Scalars['Float']>;
  unit_study_order?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mv_units" */
export type Mv_Units_Variance_Order_By = {
  expired_lesson_count?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_count?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  quiz_count?: InputMaybe<Order_By>;
  unit_study_order?: InputMaybe<Order_By>;
};

/** expression to compare columns of type numeric. All fields are combined with logical 'AND'. */
export type Numeric_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['numeric']>;
  _gt?: InputMaybe<Scalars['numeric']>;
  _gte?: InputMaybe<Scalars['numeric']>;
  _in?: InputMaybe<Array<Scalars['numeric']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['numeric']>;
  _lte?: InputMaybe<Scalars['numeric']>;
  _neq?: InputMaybe<Scalars['numeric']>;
  _nin?: InputMaybe<Array<Scalars['numeric']>>;
};

/** column ordering options */
export enum Order_By {
  /** in the ascending order, nulls last */
  Asc = 'asc',
  /** in the ascending order, nulls first */
  AscNullsFirst = 'asc_nulls_first',
  /** in the ascending order, nulls last */
  AscNullsLast = 'asc_nulls_last',
  /** in the descending order, nulls first */
  Desc = 'desc',
  /** in the descending order, nulls first */
  DescNullsFirst = 'desc_nulls_first',
  /** in the descending order, nulls last */
  DescNullsLast = 'desc_nulls_last'
}

/** columns and relationships of "paper_tiers" */
export type Paper_Tiers = {
  __typename?: 'paper_tiers';
  created_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['Int'];
  name: Scalars['String'];
  /** An array relationship */
  programme_of_studies: Array<Programme_Of_Study>;
  /** An aggregated array relationship */
  programme_of_studies_aggregate: Programme_Of_Study_Aggregate;
  slug: Scalars['String'];
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "paper_tiers" */
export type Paper_TiersProgramme_Of_StudiesArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Bool_Exp>;
};


/** columns and relationships of "paper_tiers" */
export type Paper_TiersProgramme_Of_Studies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Bool_Exp>;
};

/** aggregated selection of "paper_tiers" */
export type Paper_Tiers_Aggregate = {
  __typename?: 'paper_tiers_aggregate';
  aggregate?: Maybe<Paper_Tiers_Aggregate_Fields>;
  nodes: Array<Paper_Tiers>;
};

/** aggregate fields of "paper_tiers" */
export type Paper_Tiers_Aggregate_Fields = {
  __typename?: 'paper_tiers_aggregate_fields';
  avg?: Maybe<Paper_Tiers_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Paper_Tiers_Max_Fields>;
  min?: Maybe<Paper_Tiers_Min_Fields>;
  stddev?: Maybe<Paper_Tiers_Stddev_Fields>;
  stddev_pop?: Maybe<Paper_Tiers_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Paper_Tiers_Stddev_Samp_Fields>;
  sum?: Maybe<Paper_Tiers_Sum_Fields>;
  var_pop?: Maybe<Paper_Tiers_Var_Pop_Fields>;
  var_samp?: Maybe<Paper_Tiers_Var_Samp_Fields>;
  variance?: Maybe<Paper_Tiers_Variance_Fields>;
};


/** aggregate fields of "paper_tiers" */
export type Paper_Tiers_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Paper_Tiers_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "paper_tiers" */
export type Paper_Tiers_Aggregate_Order_By = {
  avg?: InputMaybe<Paper_Tiers_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Paper_Tiers_Max_Order_By>;
  min?: InputMaybe<Paper_Tiers_Min_Order_By>;
  stddev?: InputMaybe<Paper_Tiers_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Paper_Tiers_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Paper_Tiers_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Paper_Tiers_Sum_Order_By>;
  var_pop?: InputMaybe<Paper_Tiers_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Paper_Tiers_Var_Samp_Order_By>;
  variance?: InputMaybe<Paper_Tiers_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "paper_tiers" */
export type Paper_Tiers_Arr_Rel_Insert_Input = {
  data: Array<Paper_Tiers_Insert_Input>;
  on_conflict?: InputMaybe<Paper_Tiers_On_Conflict>;
};

/** aggregate avg on columns */
export type Paper_Tiers_Avg_Fields = {
  __typename?: 'paper_tiers_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "paper_tiers" */
export type Paper_Tiers_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "paper_tiers". All fields are combined with a logical 'AND'. */
export type Paper_Tiers_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Paper_Tiers_Bool_Exp>>>;
  _not?: InputMaybe<Paper_Tiers_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Paper_Tiers_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  programme_of_studies?: InputMaybe<Programme_Of_Study_Bool_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "paper_tiers" */
export enum Paper_Tiers_Constraint {
  /** unique or primary key constraint */
  PaperTierNameKey = 'paper_tier_name_key',
  /** unique or primary key constraint */
  PaperTierPkey = 'paper_tier_pkey',
  /** unique or primary key constraint */
  PaperTiersSlugKey = 'paper_tiers_slug_key'
}

/** input type for incrementing integer column in table "paper_tiers" */
export type Paper_Tiers_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "paper_tiers" */
export type Paper_Tiers_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  programme_of_studies?: InputMaybe<Programme_Of_Study_Arr_Rel_Insert_Input>;
  slug?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Paper_Tiers_Max_Fields = {
  __typename?: 'paper_tiers_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "paper_tiers" */
export type Paper_Tiers_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Paper_Tiers_Min_Fields = {
  __typename?: 'paper_tiers_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "paper_tiers" */
export type Paper_Tiers_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "paper_tiers" */
export type Paper_Tiers_Mutation_Response = {
  __typename?: 'paper_tiers_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Paper_Tiers>;
};

/** input type for inserting object relation for remote table "paper_tiers" */
export type Paper_Tiers_Obj_Rel_Insert_Input = {
  data: Paper_Tiers_Insert_Input;
  on_conflict?: InputMaybe<Paper_Tiers_On_Conflict>;
};

/** on conflict condition type for table "paper_tiers" */
export type Paper_Tiers_On_Conflict = {
  constraint: Paper_Tiers_Constraint;
  update_columns: Array<Paper_Tiers_Update_Column>;
  where?: InputMaybe<Paper_Tiers_Bool_Exp>;
};

/** ordering options when selecting data from "paper_tiers" */
export type Paper_Tiers_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  programme_of_studies_aggregate?: InputMaybe<Programme_Of_Study_Aggregate_Order_By>;
  slug?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "paper_tiers" */
export type Paper_Tiers_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "paper_tiers" */
export enum Paper_Tiers_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Slug = 'slug',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "paper_tiers" */
export type Paper_Tiers_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Paper_Tiers_Stddev_Fields = {
  __typename?: 'paper_tiers_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "paper_tiers" */
export type Paper_Tiers_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Paper_Tiers_Stddev_Pop_Fields = {
  __typename?: 'paper_tiers_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "paper_tiers" */
export type Paper_Tiers_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Paper_Tiers_Stddev_Samp_Fields = {
  __typename?: 'paper_tiers_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "paper_tiers" */
export type Paper_Tiers_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Paper_Tiers_Sum_Fields = {
  __typename?: 'paper_tiers_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "paper_tiers" */
export type Paper_Tiers_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "paper_tiers" */
export enum Paper_Tiers_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Slug = 'slug',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Paper_Tiers_Var_Pop_Fields = {
  __typename?: 'paper_tiers_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "paper_tiers" */
export type Paper_Tiers_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Paper_Tiers_Var_Samp_Fields = {
  __typename?: 'paper_tiers_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "paper_tiers" */
export type Paper_Tiers_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Paper_Tiers_Variance_Fields = {
  __typename?: 'paper_tiers_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "paper_tiers" */
export type Paper_Tiers_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "phases" */
export type Phases = {
  __typename?: 'phases';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  ingest_id: Scalars['String'];
  /** An array relationship */
  key_stages: Array<Key_Stages>;
  /** An aggregated array relationship */
  key_stages_aggregate: Key_Stages_Aggregate;
  slug?: Maybe<Scalars['String']>;
  /** An array relationship */
  teacher_phases: Array<Teacher_Phases>;
  /** An aggregated array relationship */
  teacher_phases_aggregate: Teacher_Phases_Aggregate;
  title: Scalars['String'];
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  years: Array<Years>;
  /** An aggregated array relationship */
  years_aggregate: Years_Aggregate;
};


/** columns and relationships of "phases" */
export type PhasesKey_StagesArgs = {
  distinct_on?: InputMaybe<Array<Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Key_Stages_Order_By>>;
  where?: InputMaybe<Key_Stages_Bool_Exp>;
};


/** columns and relationships of "phases" */
export type PhasesKey_Stages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Key_Stages_Order_By>>;
  where?: InputMaybe<Key_Stages_Bool_Exp>;
};


/** columns and relationships of "phases" */
export type PhasesTeacher_PhasesArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Phases_Order_By>>;
  where?: InputMaybe<Teacher_Phases_Bool_Exp>;
};


/** columns and relationships of "phases" */
export type PhasesTeacher_Phases_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Phases_Order_By>>;
  where?: InputMaybe<Teacher_Phases_Bool_Exp>;
};


/** columns and relationships of "phases" */
export type PhasesYearsArgs = {
  distinct_on?: InputMaybe<Array<Years_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Years_Order_By>>;
  where?: InputMaybe<Years_Bool_Exp>;
};


/** columns and relationships of "phases" */
export type PhasesYears_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Years_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Years_Order_By>>;
  where?: InputMaybe<Years_Bool_Exp>;
};

/** aggregated selection of "phases" */
export type Phases_Aggregate = {
  __typename?: 'phases_aggregate';
  aggregate?: Maybe<Phases_Aggregate_Fields>;
  nodes: Array<Phases>;
};

/** aggregate fields of "phases" */
export type Phases_Aggregate_Fields = {
  __typename?: 'phases_aggregate_fields';
  avg?: Maybe<Phases_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Phases_Max_Fields>;
  min?: Maybe<Phases_Min_Fields>;
  stddev?: Maybe<Phases_Stddev_Fields>;
  stddev_pop?: Maybe<Phases_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Phases_Stddev_Samp_Fields>;
  sum?: Maybe<Phases_Sum_Fields>;
  var_pop?: Maybe<Phases_Var_Pop_Fields>;
  var_samp?: Maybe<Phases_Var_Samp_Fields>;
  variance?: Maybe<Phases_Variance_Fields>;
};


/** aggregate fields of "phases" */
export type Phases_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Phases_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "phases" */
export type Phases_Aggregate_Order_By = {
  avg?: InputMaybe<Phases_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Phases_Max_Order_By>;
  min?: InputMaybe<Phases_Min_Order_By>;
  stddev?: InputMaybe<Phases_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Phases_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Phases_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Phases_Sum_Order_By>;
  var_pop?: InputMaybe<Phases_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Phases_Var_Samp_Order_By>;
  variance?: InputMaybe<Phases_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "phases" */
export type Phases_Arr_Rel_Insert_Input = {
  data: Array<Phases_Insert_Input>;
  on_conflict?: InputMaybe<Phases_On_Conflict>;
};

/** aggregate avg on columns */
export type Phases_Avg_Fields = {
  __typename?: 'phases_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "phases" */
export type Phases_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "phases". All fields are combined with a logical 'AND'. */
export type Phases_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Phases_Bool_Exp>>>;
  _not?: InputMaybe<Phases_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Phases_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  key_stages?: InputMaybe<Key_Stages_Bool_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  teacher_phases?: InputMaybe<Teacher_Phases_Bool_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  years?: InputMaybe<Years_Bool_Exp>;
};

/** unique or primary key constraints on table "phases" */
export enum Phases_Constraint {
  /** unique or primary key constraint */
  PhaseIngestIdKey = 'phase_ingest_id_key',
  /** unique or primary key constraint */
  PhasePkey = 'phase_pkey',
  /** unique or primary key constraint */
  PhaseSlugKey = 'phase_slug_key'
}

/** input type for incrementing integer column in table "phases" */
export type Phases_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "phases" */
export type Phases_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  key_stages?: InputMaybe<Key_Stages_Arr_Rel_Insert_Input>;
  slug?: InputMaybe<Scalars['String']>;
  teacher_phases?: InputMaybe<Teacher_Phases_Arr_Rel_Insert_Input>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  years?: InputMaybe<Years_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Phases_Max_Fields = {
  __typename?: 'phases_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "phases" */
export type Phases_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Phases_Min_Fields = {
  __typename?: 'phases_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "phases" */
export type Phases_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "phases" */
export type Phases_Mutation_Response = {
  __typename?: 'phases_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Phases>;
};

/** input type for inserting object relation for remote table "phases" */
export type Phases_Obj_Rel_Insert_Input = {
  data: Phases_Insert_Input;
  on_conflict?: InputMaybe<Phases_On_Conflict>;
};

/** on conflict condition type for table "phases" */
export type Phases_On_Conflict = {
  constraint: Phases_Constraint;
  update_columns: Array<Phases_Update_Column>;
  where?: InputMaybe<Phases_Bool_Exp>;
};

/** ordering options when selecting data from "phases" */
export type Phases_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  key_stages_aggregate?: InputMaybe<Key_Stages_Aggregate_Order_By>;
  slug?: InputMaybe<Order_By>;
  teacher_phases_aggregate?: InputMaybe<Teacher_Phases_Aggregate_Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  years_aggregate?: InputMaybe<Years_Aggregate_Order_By>;
};

/** primary key columns input for table: "phases" */
export type Phases_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "phases" */
export enum Phases_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "phases" */
export type Phases_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Phases_Stddev_Fields = {
  __typename?: 'phases_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "phases" */
export type Phases_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Phases_Stddev_Pop_Fields = {
  __typename?: 'phases_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "phases" */
export type Phases_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Phases_Stddev_Samp_Fields = {
  __typename?: 'phases_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "phases" */
export type Phases_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Phases_Sum_Fields = {
  __typename?: 'phases_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "phases" */
export type Phases_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "phases" */
export enum Phases_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Phases_Var_Pop_Fields = {
  __typename?: 'phases_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "phases" */
export type Phases_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Phases_Var_Samp_Fields = {
  __typename?: 'phases_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "phases" */
export type Phases_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Phases_Variance_Fields = {
  __typename?: 'phases_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "phases" */
export type Phases_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "programme_of_study" */
export type Programme_Of_Study = {
  __typename?: 'programme_of_study';
  created_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  curriculum_document?: Maybe<Curriculum_Documents>;
  curriculum_document_id?: Maybe<Scalars['uuid']>;
  /** An array relationship */
  curriculums_programme_of_studies: Array<Curriculums_Programme_Of_Study>;
  /** An aggregated array relationship */
  curriculums_programme_of_studies_aggregate: Curriculums_Programme_Of_Study_Aggregate;
  /** An object relationship */
  field_of_study: Field_Of_Study;
  field_of_study_id: Scalars['Int'];
  id: Scalars['Int'];
  ingest_id: Scalars['String'];
  /** An object relationship */
  paper_tier?: Maybe<Paper_Tiers>;
  paper_tier_id?: Maybe<Scalars['Int']>;
  /** An array relationship */
  programme_of_study_units: Array<Programme_Of_Study_Unit>;
  /** An aggregated array relationship */
  programme_of_study_units_aggregate: Programme_Of_Study_Unit_Aggregate;
  slug?: Maybe<Scalars['String']>;
  title: Scalars['String'];
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  year: Years;
  year_id: Scalars['Int'];
};


/** columns and relationships of "programme_of_study" */
export type Programme_Of_StudyCurriculums_Programme_Of_StudiesArgs = {
  distinct_on?: InputMaybe<Array<Curriculums_Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Curriculums_Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Curriculums_Programme_Of_Study_Bool_Exp>;
};


/** columns and relationships of "programme_of_study" */
export type Programme_Of_StudyCurriculums_Programme_Of_Studies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Curriculums_Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Curriculums_Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Curriculums_Programme_Of_Study_Bool_Exp>;
};


/** columns and relationships of "programme_of_study" */
export type Programme_Of_StudyProgramme_Of_Study_UnitsArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Unit_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Unit_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Unit_Bool_Exp>;
};


/** columns and relationships of "programme_of_study" */
export type Programme_Of_StudyProgramme_Of_Study_Units_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Unit_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Unit_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Unit_Bool_Exp>;
};

/** aggregated selection of "programme_of_study" */
export type Programme_Of_Study_Aggregate = {
  __typename?: 'programme_of_study_aggregate';
  aggregate?: Maybe<Programme_Of_Study_Aggregate_Fields>;
  nodes: Array<Programme_Of_Study>;
};

/** aggregate fields of "programme_of_study" */
export type Programme_Of_Study_Aggregate_Fields = {
  __typename?: 'programme_of_study_aggregate_fields';
  avg?: Maybe<Programme_Of_Study_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Programme_Of_Study_Max_Fields>;
  min?: Maybe<Programme_Of_Study_Min_Fields>;
  stddev?: Maybe<Programme_Of_Study_Stddev_Fields>;
  stddev_pop?: Maybe<Programme_Of_Study_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Programme_Of_Study_Stddev_Samp_Fields>;
  sum?: Maybe<Programme_Of_Study_Sum_Fields>;
  var_pop?: Maybe<Programme_Of_Study_Var_Pop_Fields>;
  var_samp?: Maybe<Programme_Of_Study_Var_Samp_Fields>;
  variance?: Maybe<Programme_Of_Study_Variance_Fields>;
};


/** aggregate fields of "programme_of_study" */
export type Programme_Of_Study_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Programme_Of_Study_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "programme_of_study" */
export type Programme_Of_Study_Aggregate_Order_By = {
  avg?: InputMaybe<Programme_Of_Study_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Programme_Of_Study_Max_Order_By>;
  min?: InputMaybe<Programme_Of_Study_Min_Order_By>;
  stddev?: InputMaybe<Programme_Of_Study_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Programme_Of_Study_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Programme_Of_Study_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Programme_Of_Study_Sum_Order_By>;
  var_pop?: InputMaybe<Programme_Of_Study_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Programme_Of_Study_Var_Samp_Order_By>;
  variance?: InputMaybe<Programme_Of_Study_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "programme_of_study" */
export type Programme_Of_Study_Arr_Rel_Insert_Input = {
  data: Array<Programme_Of_Study_Insert_Input>;
  on_conflict?: InputMaybe<Programme_Of_Study_On_Conflict>;
};

/** aggregate avg on columns */
export type Programme_Of_Study_Avg_Fields = {
  __typename?: 'programme_of_study_avg_fields';
  field_of_study_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  paper_tier_id?: Maybe<Scalars['Float']>;
  year_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "programme_of_study" */
export type Programme_Of_Study_Avg_Order_By = {
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paper_tier_id?: InputMaybe<Order_By>;
  year_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "programme_of_study". All fields are combined with a logical 'AND'. */
export type Programme_Of_Study_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Programme_Of_Study_Bool_Exp>>>;
  _not?: InputMaybe<Programme_Of_Study_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Programme_Of_Study_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  curriculum_document?: InputMaybe<Curriculum_Documents_Bool_Exp>;
  curriculum_document_id?: InputMaybe<Uuid_Comparison_Exp>;
  curriculums_programme_of_studies?: InputMaybe<Curriculums_Programme_Of_Study_Bool_Exp>;
  field_of_study?: InputMaybe<Field_Of_Study_Bool_Exp>;
  field_of_study_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  paper_tier?: InputMaybe<Paper_Tiers_Bool_Exp>;
  paper_tier_id?: InputMaybe<Int_Comparison_Exp>;
  programme_of_study_units?: InputMaybe<Programme_Of_Study_Unit_Bool_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  year?: InputMaybe<Years_Bool_Exp>;
  year_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "programme_of_study" */
export enum Programme_Of_Study_Constraint {
  /** unique or primary key constraint */
  ProgrammeOfStudyIngestIdKey = 'programme_of_study_ingest_id_key',
  /** unique or primary key constraint */
  ProgrammeOfStudyPkey = 'programme_of_study_pkey',
  /** unique or primary key constraint */
  ProgrammeOfStudySlugKey = 'programme_of_study_slug_key'
}

/** input type for incrementing integer column in table "programme_of_study" */
export type Programme_Of_Study_Inc_Input = {
  field_of_study_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  paper_tier_id?: InputMaybe<Scalars['Int']>;
  year_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "programme_of_study" */
export type Programme_Of_Study_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  curriculum_document?: InputMaybe<Curriculum_Documents_Obj_Rel_Insert_Input>;
  curriculum_document_id?: InputMaybe<Scalars['uuid']>;
  curriculums_programme_of_studies?: InputMaybe<Curriculums_Programme_Of_Study_Arr_Rel_Insert_Input>;
  field_of_study?: InputMaybe<Field_Of_Study_Obj_Rel_Insert_Input>;
  field_of_study_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  paper_tier?: InputMaybe<Paper_Tiers_Obj_Rel_Insert_Input>;
  paper_tier_id?: InputMaybe<Scalars['Int']>;
  programme_of_study_units?: InputMaybe<Programme_Of_Study_Unit_Arr_Rel_Insert_Input>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  year?: InputMaybe<Years_Obj_Rel_Insert_Input>;
  year_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Programme_Of_Study_Max_Fields = {
  __typename?: 'programme_of_study_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  curriculum_document_id?: Maybe<Scalars['uuid']>;
  field_of_study_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  paper_tier_id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  year_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "programme_of_study" */
export type Programme_Of_Study_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  curriculum_document_id?: InputMaybe<Order_By>;
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  paper_tier_id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  year_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Programme_Of_Study_Min_Fields = {
  __typename?: 'programme_of_study_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  curriculum_document_id?: Maybe<Scalars['uuid']>;
  field_of_study_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  paper_tier_id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  year_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "programme_of_study" */
export type Programme_Of_Study_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  curriculum_document_id?: InputMaybe<Order_By>;
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  paper_tier_id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  year_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "programme_of_study" */
export type Programme_Of_Study_Mutation_Response = {
  __typename?: 'programme_of_study_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Programme_Of_Study>;
};

/** input type for inserting object relation for remote table "programme_of_study" */
export type Programme_Of_Study_Obj_Rel_Insert_Input = {
  data: Programme_Of_Study_Insert_Input;
  on_conflict?: InputMaybe<Programme_Of_Study_On_Conflict>;
};

/** on conflict condition type for table "programme_of_study" */
export type Programme_Of_Study_On_Conflict = {
  constraint: Programme_Of_Study_Constraint;
  update_columns: Array<Programme_Of_Study_Update_Column>;
  where?: InputMaybe<Programme_Of_Study_Bool_Exp>;
};

/** ordering options when selecting data from "programme_of_study" */
export type Programme_Of_Study_Order_By = {
  created_at?: InputMaybe<Order_By>;
  curriculum_document?: InputMaybe<Curriculum_Documents_Order_By>;
  curriculum_document_id?: InputMaybe<Order_By>;
  curriculums_programme_of_studies_aggregate?: InputMaybe<Curriculums_Programme_Of_Study_Aggregate_Order_By>;
  field_of_study?: InputMaybe<Field_Of_Study_Order_By>;
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  paper_tier?: InputMaybe<Paper_Tiers_Order_By>;
  paper_tier_id?: InputMaybe<Order_By>;
  programme_of_study_units_aggregate?: InputMaybe<Programme_Of_Study_Unit_Aggregate_Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  year?: InputMaybe<Years_Order_By>;
  year_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "programme_of_study" */
export type Programme_Of_Study_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "programme_of_study" */
export enum Programme_Of_Study_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurriculumDocumentId = 'curriculum_document_id',
  /** column name */
  FieldOfStudyId = 'field_of_study_id',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  PaperTierId = 'paper_tier_id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  YearId = 'year_id'
}

/** input type for updating data in table "programme_of_study" */
export type Programme_Of_Study_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  curriculum_document_id?: InputMaybe<Scalars['uuid']>;
  field_of_study_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  paper_tier_id?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  year_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Programme_Of_Study_Stddev_Fields = {
  __typename?: 'programme_of_study_stddev_fields';
  field_of_study_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  paper_tier_id?: Maybe<Scalars['Float']>;
  year_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "programme_of_study" */
export type Programme_Of_Study_Stddev_Order_By = {
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paper_tier_id?: InputMaybe<Order_By>;
  year_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Programme_Of_Study_Stddev_Pop_Fields = {
  __typename?: 'programme_of_study_stddev_pop_fields';
  field_of_study_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  paper_tier_id?: Maybe<Scalars['Float']>;
  year_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "programme_of_study" */
export type Programme_Of_Study_Stddev_Pop_Order_By = {
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paper_tier_id?: InputMaybe<Order_By>;
  year_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Programme_Of_Study_Stddev_Samp_Fields = {
  __typename?: 'programme_of_study_stddev_samp_fields';
  field_of_study_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  paper_tier_id?: Maybe<Scalars['Float']>;
  year_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "programme_of_study" */
export type Programme_Of_Study_Stddev_Samp_Order_By = {
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paper_tier_id?: InputMaybe<Order_By>;
  year_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Programme_Of_Study_Sum_Fields = {
  __typename?: 'programme_of_study_sum_fields';
  field_of_study_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  paper_tier_id?: Maybe<Scalars['Int']>;
  year_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "programme_of_study" */
export type Programme_Of_Study_Sum_Order_By = {
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paper_tier_id?: InputMaybe<Order_By>;
  year_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "programme_of_study_unit" */
export type Programme_Of_Study_Unit = {
  __typename?: 'programme_of_study_unit';
  created_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['Int'];
  ingest_id?: Maybe<Scalars['String']>;
  /** An object relationship */
  programme_of_study: Programme_Of_Study;
  programme_of_study_id: Scalars['Int'];
  programme_of_study_order: Scalars['Int'];
  /** An object relationship */
  unit: Units;
  unit_id: Scalars['Int'];
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Aggregate = {
  __typename?: 'programme_of_study_unit_aggregate';
  aggregate?: Maybe<Programme_Of_Study_Unit_Aggregate_Fields>;
  nodes: Array<Programme_Of_Study_Unit>;
};

/** aggregate fields of "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Aggregate_Fields = {
  __typename?: 'programme_of_study_unit_aggregate_fields';
  avg?: Maybe<Programme_Of_Study_Unit_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Programme_Of_Study_Unit_Max_Fields>;
  min?: Maybe<Programme_Of_Study_Unit_Min_Fields>;
  stddev?: Maybe<Programme_Of_Study_Unit_Stddev_Fields>;
  stddev_pop?: Maybe<Programme_Of_Study_Unit_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Programme_Of_Study_Unit_Stddev_Samp_Fields>;
  sum?: Maybe<Programme_Of_Study_Unit_Sum_Fields>;
  var_pop?: Maybe<Programme_Of_Study_Unit_Var_Pop_Fields>;
  var_samp?: Maybe<Programme_Of_Study_Unit_Var_Samp_Fields>;
  variance?: Maybe<Programme_Of_Study_Unit_Variance_Fields>;
};


/** aggregate fields of "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Programme_Of_Study_Unit_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Aggregate_Order_By = {
  avg?: InputMaybe<Programme_Of_Study_Unit_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Programme_Of_Study_Unit_Max_Order_By>;
  min?: InputMaybe<Programme_Of_Study_Unit_Min_Order_By>;
  stddev?: InputMaybe<Programme_Of_Study_Unit_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Programme_Of_Study_Unit_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Programme_Of_Study_Unit_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Programme_Of_Study_Unit_Sum_Order_By>;
  var_pop?: InputMaybe<Programme_Of_Study_Unit_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Programme_Of_Study_Unit_Var_Samp_Order_By>;
  variance?: InputMaybe<Programme_Of_Study_Unit_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Arr_Rel_Insert_Input = {
  data: Array<Programme_Of_Study_Unit_Insert_Input>;
  on_conflict?: InputMaybe<Programme_Of_Study_Unit_On_Conflict>;
};

/** aggregate avg on columns */
export type Programme_Of_Study_Unit_Avg_Fields = {
  __typename?: 'programme_of_study_unit_avg_fields';
  id?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  programme_of_study_order?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  programme_of_study_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "programme_of_study_unit". All fields are combined with a logical 'AND'. */
export type Programme_Of_Study_Unit_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Programme_Of_Study_Unit_Bool_Exp>>>;
  _not?: InputMaybe<Programme_Of_Study_Unit_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Programme_Of_Study_Unit_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  programme_of_study?: InputMaybe<Programme_Of_Study_Bool_Exp>;
  programme_of_study_id?: InputMaybe<Int_Comparison_Exp>;
  programme_of_study_order?: InputMaybe<Int_Comparison_Exp>;
  unit?: InputMaybe<Units_Bool_Exp>;
  unit_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "programme_of_study_unit" */
export enum Programme_Of_Study_Unit_Constraint {
  /** unique or primary key constraint */
  ProgrammeOfStudyUnitIngestIdKey = 'programme_of_study_unit_ingest_id_key',
  /** unique or primary key constraint */
  ProgrammeOfStudyUnitPkey = 'programme_of_study_unit_pkey'
}

/** input type for incrementing integer column in table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  programme_of_study_id?: InputMaybe<Scalars['Int']>;
  programme_of_study_order?: InputMaybe<Scalars['Int']>;
  unit_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  programme_of_study?: InputMaybe<Programme_Of_Study_Obj_Rel_Insert_Input>;
  programme_of_study_id?: InputMaybe<Scalars['Int']>;
  programme_of_study_order?: InputMaybe<Scalars['Int']>;
  unit?: InputMaybe<Units_Obj_Rel_Insert_Input>;
  unit_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Programme_Of_Study_Unit_Max_Fields = {
  __typename?: 'programme_of_study_unit_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  programme_of_study_id?: Maybe<Scalars['Int']>;
  programme_of_study_order?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  programme_of_study_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Programme_Of_Study_Unit_Min_Fields = {
  __typename?: 'programme_of_study_unit_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  programme_of_study_id?: Maybe<Scalars['Int']>;
  programme_of_study_order?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  programme_of_study_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Mutation_Response = {
  __typename?: 'programme_of_study_unit_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Programme_Of_Study_Unit>;
};

/** input type for inserting object relation for remote table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Obj_Rel_Insert_Input = {
  data: Programme_Of_Study_Unit_Insert_Input;
  on_conflict?: InputMaybe<Programme_Of_Study_Unit_On_Conflict>;
};

/** on conflict condition type for table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_On_Conflict = {
  constraint: Programme_Of_Study_Unit_Constraint;
  update_columns: Array<Programme_Of_Study_Unit_Update_Column>;
  where?: InputMaybe<Programme_Of_Study_Unit_Bool_Exp>;
};

/** ordering options when selecting data from "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  programme_of_study?: InputMaybe<Programme_Of_Study_Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  programme_of_study_order?: InputMaybe<Order_By>;
  unit?: InputMaybe<Units_Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "programme_of_study_unit" */
export enum Programme_Of_Study_Unit_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  ProgrammeOfStudyId = 'programme_of_study_id',
  /** column name */
  ProgrammeOfStudyOrder = 'programme_of_study_order',
  /** column name */
  UnitId = 'unit_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  programme_of_study_id?: InputMaybe<Scalars['Int']>;
  programme_of_study_order?: InputMaybe<Scalars['Int']>;
  unit_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Programme_Of_Study_Unit_Stddev_Fields = {
  __typename?: 'programme_of_study_unit_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  programme_of_study_order?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  programme_of_study_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Programme_Of_Study_Unit_Stddev_Pop_Fields = {
  __typename?: 'programme_of_study_unit_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  programme_of_study_order?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  programme_of_study_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Programme_Of_Study_Unit_Stddev_Samp_Fields = {
  __typename?: 'programme_of_study_unit_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  programme_of_study_order?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  programme_of_study_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Programme_Of_Study_Unit_Sum_Fields = {
  __typename?: 'programme_of_study_unit_sum_fields';
  id?: Maybe<Scalars['Int']>;
  programme_of_study_id?: Maybe<Scalars['Int']>;
  programme_of_study_order?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  programme_of_study_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** update columns of table "programme_of_study_unit" */
export enum Programme_Of_Study_Unit_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  ProgrammeOfStudyId = 'programme_of_study_id',
  /** column name */
  ProgrammeOfStudyOrder = 'programme_of_study_order',
  /** column name */
  UnitId = 'unit_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Programme_Of_Study_Unit_Var_Pop_Fields = {
  __typename?: 'programme_of_study_unit_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  programme_of_study_order?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  programme_of_study_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Programme_Of_Study_Unit_Var_Samp_Fields = {
  __typename?: 'programme_of_study_unit_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  programme_of_study_order?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  programme_of_study_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Programme_Of_Study_Unit_Variance_Fields = {
  __typename?: 'programme_of_study_unit_variance_fields';
  id?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  programme_of_study_order?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "programme_of_study_unit" */
export type Programme_Of_Study_Unit_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  programme_of_study_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** update columns of table "programme_of_study" */
export enum Programme_Of_Study_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurriculumDocumentId = 'curriculum_document_id',
  /** column name */
  FieldOfStudyId = 'field_of_study_id',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  PaperTierId = 'paper_tier_id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  YearId = 'year_id'
}

/** aggregate var_pop on columns */
export type Programme_Of_Study_Var_Pop_Fields = {
  __typename?: 'programme_of_study_var_pop_fields';
  field_of_study_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  paper_tier_id?: Maybe<Scalars['Float']>;
  year_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "programme_of_study" */
export type Programme_Of_Study_Var_Pop_Order_By = {
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paper_tier_id?: InputMaybe<Order_By>;
  year_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Programme_Of_Study_Var_Samp_Fields = {
  __typename?: 'programme_of_study_var_samp_fields';
  field_of_study_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  paper_tier_id?: Maybe<Scalars['Float']>;
  year_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "programme_of_study" */
export type Programme_Of_Study_Var_Samp_Order_By = {
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paper_tier_id?: InputMaybe<Order_By>;
  year_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Programme_Of_Study_Variance_Fields = {
  __typename?: 'programme_of_study_variance_fields';
  field_of_study_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  paper_tier_id?: Maybe<Scalars['Float']>;
  year_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "programme_of_study" */
export type Programme_Of_Study_Variance_Order_By = {
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paper_tier_id?: InputMaybe<Order_By>;
  year_id?: InputMaybe<Order_By>;
};

/** query root */
export type Query_Root = {
  __typename?: 'query_root';
  /** fetch data from the table: "academic_years" */
  academic_years: Array<Academic_Years>;
  /** fetch aggregated fields from the table: "academic_years" */
  academic_years_aggregate: Academic_Years_Aggregate;
  /** fetch data from the table: "academic_years" using primary key columns */
  academic_years_by_pk?: Maybe<Academic_Years>;
  /** fetch data from the table: "audit.asset_ingest_audits" */
  audit_asset_ingest_audits: Array<Audit_Asset_Ingest_Audits>;
  /** fetch aggregated fields from the table: "audit.asset_ingest_audits" */
  audit_asset_ingest_audits_aggregate: Audit_Asset_Ingest_Audits_Aggregate;
  /** fetch data from the table: "audit.lesson_audits" */
  audit_lesson_audits: Array<Audit_Lesson_Audits>;
  /** fetch aggregated fields from the table: "audit.lesson_audits" */
  audit_lesson_audits_aggregate: Audit_Lesson_Audits_Aggregate;
  /** fetch data from the table: "captions" */
  captions: Array<Captions>;
  /** fetch aggregated fields from the table: "captions" */
  captions_aggregate: Captions_Aggregate;
  /** fetch data from the table: "captions" using primary key columns */
  captions_by_pk?: Maybe<Captions>;
  /** fetch data from the table: "cohorts" */
  cohorts: Array<Cohorts>;
  /** fetch aggregated fields from the table: "cohorts" */
  cohorts_aggregate: Cohorts_Aggregate;
  /** fetch data from the table: "cohorts" using primary key columns */
  cohorts_by_pk?: Maybe<Cohorts>;
  /** fetch data from the table: "curriculum_documents" */
  curriculum_documents: Array<Curriculum_Documents>;
  /** fetch aggregated fields from the table: "curriculum_documents" */
  curriculum_documents_aggregate: Curriculum_Documents_Aggregate;
  /** fetch data from the table: "curriculum_documents" using primary key columns */
  curriculum_documents_by_pk?: Maybe<Curriculum_Documents>;
  /** fetch data from the table: "curriculums" */
  curriculums: Array<Curriculums>;
  /** fetch aggregated fields from the table: "curriculums" */
  curriculums_aggregate: Curriculums_Aggregate;
  /** fetch data from the table: "curriculums" using primary key columns */
  curriculums_by_pk?: Maybe<Curriculums>;
  /** fetch data from the table: "curriculums_programme_of_study" */
  curriculums_programme_of_study: Array<Curriculums_Programme_Of_Study>;
  /** fetch aggregated fields from the table: "curriculums_programme_of_study" */
  curriculums_programme_of_study_aggregate: Curriculums_Programme_Of_Study_Aggregate;
  /** fetch data from the table: "curriculums_programme_of_study" using primary key columns */
  curriculums_programme_of_study_by_pk?: Maybe<Curriculums_Programme_Of_Study>;
  /** fetch data from the table: "days" */
  days: Array<Days>;
  /** fetch aggregated fields from the table: "days" */
  days_aggregate: Days_Aggregate;
  /** fetch data from the table: "days" using primary key columns */
  days_by_pk?: Maybe<Days>;
  /** fetch data from the table: "field_of_study" */
  field_of_study: Array<Field_Of_Study>;
  /** fetch aggregated fields from the table: "field_of_study" */
  field_of_study_aggregate: Field_Of_Study_Aggregate;
  /** fetch data from the table: "field_of_study" using primary key columns */
  field_of_study_by_pk?: Maybe<Field_Of_Study>;
  /** fetch data from the table: "ingest.asset_ingest" */
  ingest_asset_ingest: Array<Ingest_Asset_Ingest>;
  /** fetch aggregated fields from the table: "ingest.asset_ingest" */
  ingest_asset_ingest_aggregate: Ingest_Asset_Ingest_Aggregate;
  /** fetch data from the table: "ingest.asset_ingest" using primary key columns */
  ingest_asset_ingest_by_pk?: Maybe<Ingest_Asset_Ingest>;
  /** fetch data from the table: "ingest.forms_on_drive" */
  ingest_forms_on_drive: Array<Ingest_Forms_On_Drive>;
  /** fetch aggregated fields from the table: "ingest.forms_on_drive" */
  ingest_forms_on_drive_aggregate: Ingest_Forms_On_Drive_Aggregate;
  /** fetch data from the table: "ingest.forms_on_drive" using primary key columns */
  ingest_forms_on_drive_by_pk?: Maybe<Ingest_Forms_On_Drive>;
  /** fetch data from the table: "ingest.intro_quiz_ingest" */
  ingest_intro_quiz_ingest: Array<Ingest_Intro_Quiz_Ingest>;
  /** fetch aggregated fields from the table: "ingest.intro_quiz_ingest" */
  ingest_intro_quiz_ingest_aggregate: Ingest_Intro_Quiz_Ingest_Aggregate;
  /** fetch data from the table: "ingest.intro_quiz_ingest" using primary key columns */
  ingest_intro_quiz_ingest_by_pk?: Maybe<Ingest_Intro_Quiz_Ingest>;
  /** fetch data from the table: "ingest.lesson_video_ids" */
  ingest_lesson_video_ids: Array<Ingest_Lesson_Video_Ids>;
  /** fetch aggregated fields from the table: "ingest.lesson_video_ids" */
  ingest_lesson_video_ids_aggregate: Ingest_Lesson_Video_Ids_Aggregate;
  /** fetch data from the table: "ingest.lesson_video_ids" using primary key columns */
  ingest_lesson_video_ids_by_pk?: Maybe<Ingest_Lesson_Video_Ids>;
  /** fetch data from the table: "ingest.quiz_ingest" */
  ingest_quiz_ingest: Array<Ingest_Quiz_Ingest>;
  /** fetch aggregated fields from the table: "ingest.quiz_ingest" */
  ingest_quiz_ingest_aggregate: Ingest_Quiz_Ingest_Aggregate;
  /** fetch data from the table: "ingest.quiz_ingest" using primary key columns */
  ingest_quiz_ingest_by_pk?: Maybe<Ingest_Quiz_Ingest>;
  /** fetch data from the table: "ingest.video_ingest" */
  ingest_video_ingest: Array<Ingest_Video_Ingest>;
  /** fetch aggregated fields from the table: "ingest.video_ingest" */
  ingest_video_ingest_aggregate: Ingest_Video_Ingest_Aggregate;
  /** fetch data from the table: "ingest.video_ingest" using primary key columns */
  ingest_video_ingest_by_pk?: Maybe<Ingest_Video_Ingest>;
  /** fetch data from the table: "key_stages" */
  key_stages: Array<Key_Stages>;
  /** fetch aggregated fields from the table: "key_stages" */
  key_stages_aggregate: Key_Stages_Aggregate;
  /** fetch data from the table: "key_stages" using primary key columns */
  key_stages_by_pk?: Maybe<Key_Stages>;
  /** fetch data from the table: "lesson_quizzes" */
  lesson_quizzes: Array<Lesson_Quizzes>;
  /** fetch aggregated fields from the table: "lesson_quizzes" */
  lesson_quizzes_aggregate: Lesson_Quizzes_Aggregate;
  /** fetch data from the table: "lesson_quizzes" using primary key columns */
  lesson_quizzes_by_pk?: Maybe<Lesson_Quizzes>;
  /** fetch data from the table: "lessons" */
  lessons: Array<Lessons>;
  /** fetch aggregated fields from the table: "lessons" */
  lessons_aggregate: Lessons_Aggregate;
  /** fetch data from the table: "lessons" using primary key columns */
  lessons_by_pk?: Maybe<Lessons>;
  /** fetch data from the table: "lessons_expanded" */
  lessons_expanded: Array<Lessons_Expanded>;
  /** fetch aggregated fields from the table: "lessons_expanded" */
  lessons_expanded_aggregate: Lessons_Expanded_Aggregate;
  /** fetch data from the table: "management.asset_reviews" */
  management_asset_reviews: Array<Management_Asset_Reviews>;
  /** fetch aggregated fields from the table: "management.asset_reviews" */
  management_asset_reviews_aggregate: Management_Asset_Reviews_Aggregate;
  /** fetch data from the table: "management.asset_reviews" using primary key columns */
  management_asset_reviews_by_pk?: Maybe<Management_Asset_Reviews>;
  /** fetch data from the table: "management.asset_types" */
  management_asset_types: Array<Management_Asset_Types>;
  /** fetch aggregated fields from the table: "management.asset_types" */
  management_asset_types_aggregate: Management_Asset_Types_Aggregate;
  /** fetch data from the table: "management.asset_types" using primary key columns */
  management_asset_types_by_pk?: Maybe<Management_Asset_Types>;
  /** fetch data from the table: "management.assets" */
  management_assets: Array<Management_Assets>;
  /** fetch aggregated fields from the table: "management.assets" */
  management_assets_aggregate: Management_Assets_Aggregate;
  /** fetch data from the table: "management.assets" using primary key columns */
  management_assets_by_pk?: Maybe<Management_Assets>;
  /** fetch data from the table: "management.lesson_quizzes" */
  management_lesson_quizzes: Array<Management_Lesson_Quizzes>;
  /** fetch aggregated fields from the table: "management.lesson_quizzes" */
  management_lesson_quizzes_aggregate: Management_Lesson_Quizzes_Aggregate;
  /** fetch data from the table: "management.lesson_quizzes" using primary key columns */
  management_lesson_quizzes_by_pk?: Maybe<Management_Lesson_Quizzes>;
  /** fetch data from the table: "management.lesson_reviews" */
  management_lesson_reviews: Array<Management_Lesson_Reviews>;
  /** fetch aggregated fields from the table: "management.lesson_reviews" */
  management_lesson_reviews_aggregate: Management_Lesson_Reviews_Aggregate;
  /** fetch data from the table: "management.lesson_reviews" using primary key columns */
  management_lesson_reviews_by_pk?: Maybe<Management_Lesson_Reviews>;
  /** fetch data from the table: "management.lessons" */
  management_lessons: Array<Management_Lessons>;
  /** fetch aggregated fields from the table: "management.lessons" */
  management_lessons_aggregate: Management_Lessons_Aggregate;
  /** fetch data from the table: "management.lessons" using primary key columns */
  management_lessons_by_pk?: Maybe<Management_Lessons>;
  /** fetch data from the table: "management.questions" */
  management_questions: Array<Management_Questions>;
  /** fetch aggregated fields from the table: "management.questions" */
  management_questions_aggregate: Management_Questions_Aggregate;
  /** fetch data from the table: "management.questions" using primary key columns */
  management_questions_by_pk?: Maybe<Management_Questions>;
  /** fetch data from the table: "management.quiz_questions" */
  management_quiz_questions: Array<Management_Quiz_Questions>;
  /** fetch aggregated fields from the table: "management.quiz_questions" */
  management_quiz_questions_aggregate: Management_Quiz_Questions_Aggregate;
  /** fetch data from the table: "management.quiz_questions" using primary key columns */
  management_quiz_questions_by_pk?: Maybe<Management_Quiz_Questions>;
  /** fetch data from the table: "management.quiz_reviews" */
  management_quiz_reviews: Array<Management_Quiz_Reviews>;
  /** fetch aggregated fields from the table: "management.quiz_reviews" */
  management_quiz_reviews_aggregate: Management_Quiz_Reviews_Aggregate;
  /** fetch data from the table: "management.quiz_reviews" using primary key columns */
  management_quiz_reviews_by_pk?: Maybe<Management_Quiz_Reviews>;
  /** fetch data from the table: "management.quizzes" */
  management_quizzes: Array<Management_Quizzes>;
  /** fetch aggregated fields from the table: "management.quizzes" */
  management_quizzes_aggregate: Management_Quizzes_Aggregate;
  /** fetch data from the table: "management.quizzes" using primary key columns */
  management_quizzes_by_pk?: Maybe<Management_Quizzes>;
  /** fetch data from the table: "management.reviews" */
  management_reviews: Array<Management_Reviews>;
  /** fetch aggregated fields from the table: "management.reviews" */
  management_reviews_aggregate: Management_Reviews_Aggregate;
  /** fetch data from the table: "management.reviews" using primary key columns */
  management_reviews_by_pk?: Maybe<Management_Reviews>;
  /** fetch data from the table: "management.unit_lessons" */
  management_unit_lessons: Array<Management_Unit_Lessons>;
  /** fetch aggregated fields from the table: "management.unit_lessons" */
  management_unit_lessons_aggregate: Management_Unit_Lessons_Aggregate;
  /** fetch data from the table: "management.unit_lessons" using primary key columns */
  management_unit_lessons_by_pk?: Maybe<Management_Unit_Lessons>;
  /** fetch data from the table: "management.video_reviews" */
  management_video_reviews: Array<Management_Video_Reviews>;
  /** fetch aggregated fields from the table: "management.video_reviews" */
  management_video_reviews_aggregate: Management_Video_Reviews_Aggregate;
  /** fetch data from the table: "management.video_reviews" using primary key columns */
  management_video_reviews_by_pk?: Maybe<Management_Video_Reviews>;
  /** fetch data from the table: "management.videos" */
  management_videos: Array<Management_Videos>;
  /** fetch aggregated fields from the table: "management.videos" */
  management_videos_aggregate: Management_Videos_Aggregate;
  /** fetch data from the table: "management.videos" using primary key columns */
  management_videos_by_pk?: Maybe<Management_Videos>;
  /** fetch data from the table: "mv_all_year_groups" */
  mv_all_year_groups: Array<Mv_All_Year_Groups>;
  /** fetch aggregated fields from the table: "mv_all_year_groups" */
  mv_all_year_groups_aggregate: Mv_All_Year_Groups_Aggregate;
  /** fetch data from the table: "mv_downloads" */
  mv_downloads: Array<Mv_Downloads>;
  /** fetch aggregated fields from the table: "mv_downloads" */
  mv_downloads_aggregate: Mv_Downloads_Aggregate;
  /** fetch data from the table: "mv_key_stages" */
  mv_key_stages: Array<Mv_Key_Stages>;
  /** fetch aggregated fields from the table: "mv_key_stages" */
  mv_key_stages_aggregate: Mv_Key_Stages_Aggregate;
  /** fetch data from the table: "mv_learning_themes" */
  mv_learning_themes: Array<Mv_Learning_Themes>;
  /** fetch aggregated fields from the table: "mv_learning_themes" */
  mv_learning_themes_aggregate: Mv_Learning_Themes_Aggregate;
  /** fetch data from the table: "mv_lessons" */
  mv_lessons: Array<Mv_Lessons>;
  /** fetch aggregated fields from the table: "mv_lessons" */
  mv_lessons_aggregate: Mv_Lessons_Aggregate;
  /** fetch data from the table: "mv_questions" */
  mv_questions: Array<Mv_Questions>;
  /** fetch aggregated fields from the table: "mv_questions" */
  mv_questions_aggregate: Mv_Questions_Aggregate;
  /** fetch data from the table: "mv_quizzes" */
  mv_quizzes: Array<Mv_Quizzes>;
  /** fetch aggregated fields from the table: "mv_quizzes" */
  mv_quizzes_aggregate: Mv_Quizzes_Aggregate;
  /** fetch data from the table: "mv_subjects" */
  mv_subjects: Array<Mv_Subjects>;
  /** fetch aggregated fields from the table: "mv_subjects" */
  mv_subjects_aggregate: Mv_Subjects_Aggregate;
  /** fetch data from the table: "mv_tiers" */
  mv_tiers: Array<Mv_Tiers>;
  /** fetch aggregated fields from the table: "mv_tiers" */
  mv_tiers_aggregate: Mv_Tiers_Aggregate;
  /** fetch data from the table: "mv_units" */
  mv_units: Array<Mv_Units>;
  /** fetch aggregated fields from the table: "mv_units" */
  mv_units_aggregate: Mv_Units_Aggregate;
  /** fetch data from the table: "paper_tiers" */
  paper_tiers: Array<Paper_Tiers>;
  /** fetch aggregated fields from the table: "paper_tiers" */
  paper_tiers_aggregate: Paper_Tiers_Aggregate;
  /** fetch data from the table: "paper_tiers" using primary key columns */
  paper_tiers_by_pk?: Maybe<Paper_Tiers>;
  /** fetch data from the table: "phases" */
  phases: Array<Phases>;
  /** fetch aggregated fields from the table: "phases" */
  phases_aggregate: Phases_Aggregate;
  /** fetch data from the table: "phases" using primary key columns */
  phases_by_pk?: Maybe<Phases>;
  /** fetch data from the table: "programme_of_study" */
  programme_of_study: Array<Programme_Of_Study>;
  /** fetch aggregated fields from the table: "programme_of_study" */
  programme_of_study_aggregate: Programme_Of_Study_Aggregate;
  /** fetch data from the table: "programme_of_study" using primary key columns */
  programme_of_study_by_pk?: Maybe<Programme_Of_Study>;
  /** fetch data from the table: "programme_of_study_unit" */
  programme_of_study_unit: Array<Programme_Of_Study_Unit>;
  /** fetch aggregated fields from the table: "programme_of_study_unit" */
  programme_of_study_unit_aggregate: Programme_Of_Study_Unit_Aggregate;
  /** fetch data from the table: "programme_of_study_unit" using primary key columns */
  programme_of_study_unit_by_pk?: Maybe<Programme_Of_Study_Unit>;
  /** fetch data from the table: "questions" */
  questions: Array<Questions>;
  /** fetch aggregated fields from the table: "questions" */
  questions_aggregate: Questions_Aggregate;
  /** fetch data from the table: "questions" using primary key columns */
  questions_by_pk?: Maybe<Questions>;
  /** fetch data from the table: "questions_expanded" */
  questions_expanded: Array<Questions_Expanded>;
  /** fetch aggregated fields from the table: "questions_expanded" */
  questions_expanded_aggregate: Questions_Expanded_Aggregate;
  /** fetch data from the table: "quiz_questions" */
  quiz_questions: Array<Quiz_Questions>;
  /** fetch aggregated fields from the table: "quiz_questions" */
  quiz_questions_aggregate: Quiz_Questions_Aggregate;
  /** fetch data from the table: "quiz_questions_archive" */
  quiz_questions_archive: Array<Quiz_Questions_Archive>;
  /** fetch aggregated fields from the table: "quiz_questions_archive" */
  quiz_questions_archive_aggregate: Quiz_Questions_Archive_Aggregate;
  /** fetch data from the table: "quiz_questions" using primary key columns */
  quiz_questions_by_pk?: Maybe<Quiz_Questions>;
  /** fetch data from the table: "quiz_types" */
  quiz_types: Array<Quiz_Types>;
  /** fetch aggregated fields from the table: "quiz_types" */
  quiz_types_aggregate: Quiz_Types_Aggregate;
  /** fetch data from the table: "quiz_types" using primary key columns */
  quiz_types_by_pk?: Maybe<Quiz_Types>;
  /** fetch data from the table: "quizzes" */
  quizzes: Array<Quizzes>;
  /** fetch aggregated fields from the table: "quizzes" */
  quizzes_aggregate: Quizzes_Aggregate;
  /** fetch data from the table: "quizzes" using primary key columns */
  quizzes_by_pk?: Maybe<Quizzes>;
  /** fetch data from the table: "resource_types" */
  resource_types: Array<Resource_Types>;
  /** fetch aggregated fields from the table: "resource_types" */
  resource_types_aggregate: Resource_Types_Aggregate;
  /** fetch data from the table: "resource_types" using primary key columns */
  resource_types_by_pk?: Maybe<Resource_Types>;
  /** fetch data from the table: "teacher_field_of_studies" */
  teacher_field_of_studies: Array<Teacher_Field_Of_Studies>;
  /** fetch aggregated fields from the table: "teacher_field_of_studies" */
  teacher_field_of_studies_aggregate: Teacher_Field_Of_Studies_Aggregate;
  /** fetch data from the table: "teacher_field_of_studies" using primary key columns */
  teacher_field_of_studies_by_pk?: Maybe<Teacher_Field_Of_Studies>;
  /** fetch data from the table: "teacher_key_stages" */
  teacher_key_stages: Array<Teacher_Key_Stages>;
  /** fetch aggregated fields from the table: "teacher_key_stages" */
  teacher_key_stages_aggregate: Teacher_Key_Stages_Aggregate;
  /** fetch data from the table: "teacher_key_stages" using primary key columns */
  teacher_key_stages_by_pk?: Maybe<Teacher_Key_Stages>;
  /** fetch data from the table: "teacher_phases" */
  teacher_phases: Array<Teacher_Phases>;
  /** fetch aggregated fields from the table: "teacher_phases" */
  teacher_phases_aggregate: Teacher_Phases_Aggregate;
  /** fetch data from the table: "teacher_phases" using primary key columns */
  teacher_phases_by_pk?: Maybe<Teacher_Phases>;
  /** fetch data from the table: "teacher_therapies" */
  teacher_therapies: Array<Teacher_Therapies>;
  /** fetch aggregated fields from the table: "teacher_therapies" */
  teacher_therapies_aggregate: Teacher_Therapies_Aggregate;
  /** fetch data from the table: "teacher_therapies" using primary key columns */
  teacher_therapies_by_pk?: Maybe<Teacher_Therapies>;
  /** fetch data from the table: "teachers" */
  teachers: Array<Teachers>;
  /** fetch aggregated fields from the table: "teachers" */
  teachers_aggregate: Teachers_Aggregate;
  /** fetch data from the table: "teachers" using primary key columns */
  teachers_by_pk?: Maybe<Teachers>;
  /** fetch data from the table: "themes" */
  themes: Array<Themes>;
  /** fetch aggregated fields from the table: "themes" */
  themes_aggregate: Themes_Aggregate;
  /** fetch data from the table: "themes_as_topics" */
  themes_as_topics: Array<Themes_As_Topics>;
  /** fetch aggregated fields from the table: "themes_as_topics" */
  themes_as_topics_aggregate: Themes_As_Topics_Aggregate;
  /** fetch data from the table: "themes" using primary key columns */
  themes_by_pk?: Maybe<Themes>;
  /** fetch data from the table: "therapies" */
  therapies: Array<Therapies>;
  /** fetch aggregated fields from the table: "therapies" */
  therapies_aggregate: Therapies_Aggregate;
  /** fetch data from the table: "therapies" using primary key columns */
  therapies_by_pk?: Maybe<Therapies>;
  /** fetch data from the table: "therapy_units" */
  therapy_units: Array<Therapy_Units>;
  /** fetch aggregated fields from the table: "therapy_units" */
  therapy_units_aggregate: Therapy_Units_Aggregate;
  /** fetch data from the table: "therapy_units" using primary key columns */
  therapy_units_by_pk?: Maybe<Therapy_Units>;
  /** fetch data from the table: "timetabled_lessons" */
  timetabled_lessons: Array<Timetabled_Lessons>;
  /** fetch aggregated fields from the table: "timetabled_lessons" */
  timetabled_lessons_aggregate: Timetabled_Lessons_Aggregate;
  /** fetch data from the table: "timetabled_lessons" using primary key columns */
  timetabled_lessons_by_pk?: Maybe<Timetabled_Lessons>;
  /** fetch data from the table: "timetabled_weeks" */
  timetabled_weeks: Array<Timetabled_Weeks>;
  /** fetch aggregated fields from the table: "timetabled_weeks" */
  timetabled_weeks_aggregate: Timetabled_Weeks_Aggregate;
  /** fetch data from the table: "timetabled_weeks" using primary key columns */
  timetabled_weeks_by_pk?: Maybe<Timetabled_Weeks>;
  /** fetch data from the table: "timetables" */
  timetables: Array<Timetables>;
  /** fetch aggregated fields from the table: "timetables" */
  timetables_aggregate: Timetables_Aggregate;
  /** fetch data from the table: "timetables" using primary key columns */
  timetables_by_pk?: Maybe<Timetables>;
  /** fetch data from the table: "topic_types" */
  topic_types: Array<Topic_Types>;
  /** fetch aggregated fields from the table: "topic_types" */
  topic_types_aggregate: Topic_Types_Aggregate;
  /** fetch data from the table: "units_as_topics" */
  topics: Array<Units_As_Topics>;
  /** fetch data from the table: "unit_lessons" */
  unit_lessons: Array<Unit_Lessons>;
  /** fetch aggregated fields from the table: "unit_lessons" */
  unit_lessons_aggregate: Unit_Lessons_Aggregate;
  /** fetch data from the table: "unit_lessons" using primary key columns */
  unit_lessons_by_pk?: Maybe<Unit_Lessons>;
  /** fetch data from the table: "unit_quizzes" */
  unit_quizzes: Array<Unit_Quizzes>;
  /** fetch aggregated fields from the table: "unit_quizzes" */
  unit_quizzes_aggregate: Unit_Quizzes_Aggregate;
  /** fetch data from the table: "unit_quizzes" using primary key columns */
  unit_quizzes_by_pk?: Maybe<Unit_Quizzes>;
  /** fetch data from the table: "units" */
  units: Array<Units>;
  /** fetch aggregated fields from the table: "units" */
  units_aggregate: Units_Aggregate;
  /** fetch aggregated fields from the table: "units_as_topics" */
  units_as_topics_aggregate: Units_As_Topics_Aggregate;
  /** fetch data from the table: "units" using primary key columns */
  units_by_pk?: Maybe<Units>;
  /** fetch data from the table: "videos" */
  videos: Array<Videos>;
  /** fetch aggregated fields from the table: "videos" */
  videos_aggregate: Videos_Aggregate;
  /** fetch data from the table: "videos" using primary key columns */
  videos_by_pk?: Maybe<Videos>;
  /** fetch data from the table: "vw_latest_updated_at" */
  vw_latest_updated_at: Array<Vw_Latest_Updated_At>;
  /** fetch aggregated fields from the table: "vw_latest_updated_at" */
  vw_latest_updated_at_aggregate: Vw_Latest_Updated_At_Aggregate;
  /** fetch data from the table: "weeks" */
  weeks: Array<Weeks>;
  /** fetch aggregated fields from the table: "weeks" */
  weeks_aggregate: Weeks_Aggregate;
  /** fetch data from the table: "weeks" using primary key columns */
  weeks_by_pk?: Maybe<Weeks>;
  /** fetch data from the table: "years" */
  years: Array<Years>;
  /** fetch aggregated fields from the table: "years" */
  years_aggregate: Years_Aggregate;
  /** fetch data from the table: "years" using primary key columns */
  years_by_pk?: Maybe<Years>;
};


/** query root */
export type Query_RootAcademic_YearsArgs = {
  distinct_on?: InputMaybe<Array<Academic_Years_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Academic_Years_Order_By>>;
  where?: InputMaybe<Academic_Years_Bool_Exp>;
};


/** query root */
export type Query_RootAcademic_Years_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Academic_Years_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Academic_Years_Order_By>>;
  where?: InputMaybe<Academic_Years_Bool_Exp>;
};


/** query root */
export type Query_RootAcademic_Years_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootAudit_Asset_Ingest_AuditsArgs = {
  distinct_on?: InputMaybe<Array<Audit_Asset_Ingest_Audits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Audit_Asset_Ingest_Audits_Order_By>>;
  where?: InputMaybe<Audit_Asset_Ingest_Audits_Bool_Exp>;
};


/** query root */
export type Query_RootAudit_Asset_Ingest_Audits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Audit_Asset_Ingest_Audits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Audit_Asset_Ingest_Audits_Order_By>>;
  where?: InputMaybe<Audit_Asset_Ingest_Audits_Bool_Exp>;
};


/** query root */
export type Query_RootAudit_Lesson_AuditsArgs = {
  distinct_on?: InputMaybe<Array<Audit_Lesson_Audits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Audit_Lesson_Audits_Order_By>>;
  where?: InputMaybe<Audit_Lesson_Audits_Bool_Exp>;
};


/** query root */
export type Query_RootAudit_Lesson_Audits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Audit_Lesson_Audits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Audit_Lesson_Audits_Order_By>>;
  where?: InputMaybe<Audit_Lesson_Audits_Bool_Exp>;
};


/** query root */
export type Query_RootCaptionsArgs = {
  distinct_on?: InputMaybe<Array<Captions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Captions_Order_By>>;
  where?: InputMaybe<Captions_Bool_Exp>;
};


/** query root */
export type Query_RootCaptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Captions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Captions_Order_By>>;
  where?: InputMaybe<Captions_Bool_Exp>;
};


/** query root */
export type Query_RootCaptions_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootCohortsArgs = {
  distinct_on?: InputMaybe<Array<Cohorts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Cohorts_Order_By>>;
  where?: InputMaybe<Cohorts_Bool_Exp>;
};


/** query root */
export type Query_RootCohorts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Cohorts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Cohorts_Order_By>>;
  where?: InputMaybe<Cohorts_Bool_Exp>;
};


/** query root */
export type Query_RootCohorts_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootCurriculum_DocumentsArgs = {
  distinct_on?: InputMaybe<Array<Curriculum_Documents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Curriculum_Documents_Order_By>>;
  where?: InputMaybe<Curriculum_Documents_Bool_Exp>;
};


/** query root */
export type Query_RootCurriculum_Documents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Curriculum_Documents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Curriculum_Documents_Order_By>>;
  where?: InputMaybe<Curriculum_Documents_Bool_Exp>;
};


/** query root */
export type Query_RootCurriculum_Documents_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootCurriculumsArgs = {
  distinct_on?: InputMaybe<Array<Curriculums_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Curriculums_Order_By>>;
  where?: InputMaybe<Curriculums_Bool_Exp>;
};


/** query root */
export type Query_RootCurriculums_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Curriculums_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Curriculums_Order_By>>;
  where?: InputMaybe<Curriculums_Bool_Exp>;
};


/** query root */
export type Query_RootCurriculums_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootCurriculums_Programme_Of_StudyArgs = {
  distinct_on?: InputMaybe<Array<Curriculums_Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Curriculums_Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Curriculums_Programme_Of_Study_Bool_Exp>;
};


/** query root */
export type Query_RootCurriculums_Programme_Of_Study_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Curriculums_Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Curriculums_Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Curriculums_Programme_Of_Study_Bool_Exp>;
};


/** query root */
export type Query_RootCurriculums_Programme_Of_Study_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootDaysArgs = {
  distinct_on?: InputMaybe<Array<Days_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Days_Order_By>>;
  where?: InputMaybe<Days_Bool_Exp>;
};


/** query root */
export type Query_RootDays_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Days_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Days_Order_By>>;
  where?: InputMaybe<Days_Bool_Exp>;
};


/** query root */
export type Query_RootDays_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootField_Of_StudyArgs = {
  distinct_on?: InputMaybe<Array<Field_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Field_Of_Study_Order_By>>;
  where?: InputMaybe<Field_Of_Study_Bool_Exp>;
};


/** query root */
export type Query_RootField_Of_Study_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Field_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Field_Of_Study_Order_By>>;
  where?: InputMaybe<Field_Of_Study_Bool_Exp>;
};


/** query root */
export type Query_RootField_Of_Study_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootIngest_Asset_IngestArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Asset_Ingest_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Asset_Ingest_Order_By>>;
  where?: InputMaybe<Ingest_Asset_Ingest_Bool_Exp>;
};


/** query root */
export type Query_RootIngest_Asset_Ingest_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Asset_Ingest_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Asset_Ingest_Order_By>>;
  where?: InputMaybe<Ingest_Asset_Ingest_Bool_Exp>;
};


/** query root */
export type Query_RootIngest_Asset_Ingest_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootIngest_Forms_On_DriveArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Forms_On_Drive_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Forms_On_Drive_Order_By>>;
  where?: InputMaybe<Ingest_Forms_On_Drive_Bool_Exp>;
};


/** query root */
export type Query_RootIngest_Forms_On_Drive_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Forms_On_Drive_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Forms_On_Drive_Order_By>>;
  where?: InputMaybe<Ingest_Forms_On_Drive_Bool_Exp>;
};


/** query root */
export type Query_RootIngest_Forms_On_Drive_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootIngest_Intro_Quiz_IngestArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Intro_Quiz_Ingest_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Intro_Quiz_Ingest_Order_By>>;
  where?: InputMaybe<Ingest_Intro_Quiz_Ingest_Bool_Exp>;
};


/** query root */
export type Query_RootIngest_Intro_Quiz_Ingest_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Intro_Quiz_Ingest_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Intro_Quiz_Ingest_Order_By>>;
  where?: InputMaybe<Ingest_Intro_Quiz_Ingest_Bool_Exp>;
};


/** query root */
export type Query_RootIngest_Intro_Quiz_Ingest_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootIngest_Lesson_Video_IdsArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Lesson_Video_Ids_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Lesson_Video_Ids_Order_By>>;
  where?: InputMaybe<Ingest_Lesson_Video_Ids_Bool_Exp>;
};


/** query root */
export type Query_RootIngest_Lesson_Video_Ids_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Lesson_Video_Ids_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Lesson_Video_Ids_Order_By>>;
  where?: InputMaybe<Ingest_Lesson_Video_Ids_Bool_Exp>;
};


/** query root */
export type Query_RootIngest_Lesson_Video_Ids_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootIngest_Quiz_IngestArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Quiz_Ingest_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Quiz_Ingest_Order_By>>;
  where?: InputMaybe<Ingest_Quiz_Ingest_Bool_Exp>;
};


/** query root */
export type Query_RootIngest_Quiz_Ingest_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Quiz_Ingest_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Quiz_Ingest_Order_By>>;
  where?: InputMaybe<Ingest_Quiz_Ingest_Bool_Exp>;
};


/** query root */
export type Query_RootIngest_Quiz_Ingest_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootIngest_Video_IngestArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Video_Ingest_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Video_Ingest_Order_By>>;
  where?: InputMaybe<Ingest_Video_Ingest_Bool_Exp>;
};


/** query root */
export type Query_RootIngest_Video_Ingest_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Video_Ingest_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Video_Ingest_Order_By>>;
  where?: InputMaybe<Ingest_Video_Ingest_Bool_Exp>;
};


/** query root */
export type Query_RootIngest_Video_Ingest_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootKey_StagesArgs = {
  distinct_on?: InputMaybe<Array<Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Key_Stages_Order_By>>;
  where?: InputMaybe<Key_Stages_Bool_Exp>;
};


/** query root */
export type Query_RootKey_Stages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Key_Stages_Order_By>>;
  where?: InputMaybe<Key_Stages_Bool_Exp>;
};


/** query root */
export type Query_RootKey_Stages_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootLesson_QuizzesArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Quizzes_Order_By>>;
  where?: InputMaybe<Lesson_Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Quizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Quizzes_Order_By>>;
  where?: InputMaybe<Lesson_Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Quizzes_By_PkArgs = {
  lesson_id: Scalars['Int'];
  quiz_id: Scalars['Int'];
  type: Scalars['String'];
  unit_id: Scalars['Int'];
};


/** query root */
export type Query_RootLessonsArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Order_By>>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};


/** query root */
export type Query_RootLessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Order_By>>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};


/** query root */
export type Query_RootLessons_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootLessons_ExpandedArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Expanded_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Expanded_Order_By>>;
  where?: InputMaybe<Lessons_Expanded_Bool_Exp>;
};


/** query root */
export type Query_RootLessons_Expanded_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Expanded_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Expanded_Order_By>>;
  where?: InputMaybe<Lessons_Expanded_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Asset_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Asset_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Asset_Reviews_Order_By>>;
  where?: InputMaybe<Management_Asset_Reviews_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Asset_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Asset_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Asset_Reviews_Order_By>>;
  where?: InputMaybe<Management_Asset_Reviews_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Asset_Reviews_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootManagement_Asset_TypesArgs = {
  distinct_on?: InputMaybe<Array<Management_Asset_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Asset_Types_Order_By>>;
  where?: InputMaybe<Management_Asset_Types_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Asset_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Asset_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Asset_Types_Order_By>>;
  where?: InputMaybe<Management_Asset_Types_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Asset_Types_By_PkArgs = {
  type: Scalars['String'];
};


/** query root */
export type Query_RootManagement_AssetsArgs = {
  distinct_on?: InputMaybe<Array<Management_Assets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Assets_Order_By>>;
  where?: InputMaybe<Management_Assets_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Assets_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Assets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Assets_Order_By>>;
  where?: InputMaybe<Management_Assets_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Assets_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootManagement_Lesson_QuizzesArgs = {
  distinct_on?: InputMaybe<Array<Management_Lesson_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lesson_Quizzes_Order_By>>;
  where?: InputMaybe<Management_Lesson_Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Lesson_Quizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Lesson_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lesson_Quizzes_Order_By>>;
  where?: InputMaybe<Management_Lesson_Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Lesson_Quizzes_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootManagement_Lesson_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Lesson_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lesson_Reviews_Order_By>>;
  where?: InputMaybe<Management_Lesson_Reviews_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Lesson_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Lesson_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lesson_Reviews_Order_By>>;
  where?: InputMaybe<Management_Lesson_Reviews_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Lesson_Reviews_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootManagement_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Management_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lessons_Order_By>>;
  where?: InputMaybe<Management_Lessons_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lessons_Order_By>>;
  where?: InputMaybe<Management_Lessons_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Lessons_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootManagement_QuestionsArgs = {
  distinct_on?: InputMaybe<Array<Management_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Questions_Order_By>>;
  where?: InputMaybe<Management_Questions_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Questions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Questions_Order_By>>;
  where?: InputMaybe<Management_Questions_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Questions_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootManagement_Quiz_QuestionsArgs = {
  distinct_on?: InputMaybe<Array<Management_Quiz_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quiz_Questions_Order_By>>;
  where?: InputMaybe<Management_Quiz_Questions_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Quiz_Questions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Quiz_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quiz_Questions_Order_By>>;
  where?: InputMaybe<Management_Quiz_Questions_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Quiz_Questions_By_PkArgs = {
  question_id: Scalars['Int'];
  quiz_id: Scalars['Int'];
};


/** query root */
export type Query_RootManagement_Quiz_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Quiz_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quiz_Reviews_Order_By>>;
  where?: InputMaybe<Management_Quiz_Reviews_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Quiz_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Quiz_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quiz_Reviews_Order_By>>;
  where?: InputMaybe<Management_Quiz_Reviews_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Quiz_Reviews_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootManagement_QuizzesArgs = {
  distinct_on?: InputMaybe<Array<Management_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quizzes_Order_By>>;
  where?: InputMaybe<Management_Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Quizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quizzes_Order_By>>;
  where?: InputMaybe<Management_Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Quizzes_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootManagement_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Reviews_Order_By>>;
  where?: InputMaybe<Management_Reviews_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Reviews_Order_By>>;
  where?: InputMaybe<Management_Reviews_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Reviews_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootManagement_Unit_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Management_Unit_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Unit_Lessons_Order_By>>;
  where?: InputMaybe<Management_Unit_Lessons_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Unit_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Unit_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Unit_Lessons_Order_By>>;
  where?: InputMaybe<Management_Unit_Lessons_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Unit_Lessons_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootManagement_Video_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Video_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Video_Reviews_Order_By>>;
  where?: InputMaybe<Management_Video_Reviews_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Video_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Video_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Video_Reviews_Order_By>>;
  where?: InputMaybe<Management_Video_Reviews_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Video_Reviews_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootManagement_VideosArgs = {
  distinct_on?: InputMaybe<Array<Management_Videos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Videos_Order_By>>;
  where?: InputMaybe<Management_Videos_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Videos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Videos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Videos_Order_By>>;
  where?: InputMaybe<Management_Videos_Bool_Exp>;
};


/** query root */
export type Query_RootManagement_Videos_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootMv_All_Year_GroupsArgs = {
  distinct_on?: InputMaybe<Array<Mv_All_Year_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_All_Year_Groups_Order_By>>;
  where?: InputMaybe<Mv_All_Year_Groups_Bool_Exp>;
};


/** query root */
export type Query_RootMv_All_Year_Groups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_All_Year_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_All_Year_Groups_Order_By>>;
  where?: InputMaybe<Mv_All_Year_Groups_Bool_Exp>;
};


/** query root */
export type Query_RootMv_DownloadsArgs = {
  distinct_on?: InputMaybe<Array<Mv_Downloads_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Downloads_Order_By>>;
  where?: InputMaybe<Mv_Downloads_Bool_Exp>;
};


/** query root */
export type Query_RootMv_Downloads_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Downloads_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Downloads_Order_By>>;
  where?: InputMaybe<Mv_Downloads_Bool_Exp>;
};


/** query root */
export type Query_RootMv_Key_StagesArgs = {
  distinct_on?: InputMaybe<Array<Mv_Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Key_Stages_Order_By>>;
  where?: InputMaybe<Mv_Key_Stages_Bool_Exp>;
};


/** query root */
export type Query_RootMv_Key_Stages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Key_Stages_Order_By>>;
  where?: InputMaybe<Mv_Key_Stages_Bool_Exp>;
};


/** query root */
export type Query_RootMv_Learning_ThemesArgs = {
  distinct_on?: InputMaybe<Array<Mv_Learning_Themes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Learning_Themes_Order_By>>;
  where?: InputMaybe<Mv_Learning_Themes_Bool_Exp>;
};


/** query root */
export type Query_RootMv_Learning_Themes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Learning_Themes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Learning_Themes_Order_By>>;
  where?: InputMaybe<Mv_Learning_Themes_Bool_Exp>;
};


/** query root */
export type Query_RootMv_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Mv_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Lessons_Order_By>>;
  where?: InputMaybe<Mv_Lessons_Bool_Exp>;
};


/** query root */
export type Query_RootMv_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Lessons_Order_By>>;
  where?: InputMaybe<Mv_Lessons_Bool_Exp>;
};


/** query root */
export type Query_RootMv_QuestionsArgs = {
  distinct_on?: InputMaybe<Array<Mv_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Questions_Order_By>>;
  where?: InputMaybe<Mv_Questions_Bool_Exp>;
};


/** query root */
export type Query_RootMv_Questions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Questions_Order_By>>;
  where?: InputMaybe<Mv_Questions_Bool_Exp>;
};


/** query root */
export type Query_RootMv_QuizzesArgs = {
  distinct_on?: InputMaybe<Array<Mv_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Quizzes_Order_By>>;
  where?: InputMaybe<Mv_Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootMv_Quizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Quizzes_Order_By>>;
  where?: InputMaybe<Mv_Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootMv_SubjectsArgs = {
  distinct_on?: InputMaybe<Array<Mv_Subjects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Subjects_Order_By>>;
  where?: InputMaybe<Mv_Subjects_Bool_Exp>;
};


/** query root */
export type Query_RootMv_Subjects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Subjects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Subjects_Order_By>>;
  where?: InputMaybe<Mv_Subjects_Bool_Exp>;
};


/** query root */
export type Query_RootMv_TiersArgs = {
  distinct_on?: InputMaybe<Array<Mv_Tiers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Tiers_Order_By>>;
  where?: InputMaybe<Mv_Tiers_Bool_Exp>;
};


/** query root */
export type Query_RootMv_Tiers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Tiers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Tiers_Order_By>>;
  where?: InputMaybe<Mv_Tiers_Bool_Exp>;
};


/** query root */
export type Query_RootMv_UnitsArgs = {
  distinct_on?: InputMaybe<Array<Mv_Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Units_Order_By>>;
  where?: InputMaybe<Mv_Units_Bool_Exp>;
};


/** query root */
export type Query_RootMv_Units_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Units_Order_By>>;
  where?: InputMaybe<Mv_Units_Bool_Exp>;
};


/** query root */
export type Query_RootPaper_TiersArgs = {
  distinct_on?: InputMaybe<Array<Paper_Tiers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Paper_Tiers_Order_By>>;
  where?: InputMaybe<Paper_Tiers_Bool_Exp>;
};


/** query root */
export type Query_RootPaper_Tiers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Paper_Tiers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Paper_Tiers_Order_By>>;
  where?: InputMaybe<Paper_Tiers_Bool_Exp>;
};


/** query root */
export type Query_RootPaper_Tiers_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootPhasesArgs = {
  distinct_on?: InputMaybe<Array<Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Phases_Order_By>>;
  where?: InputMaybe<Phases_Bool_Exp>;
};


/** query root */
export type Query_RootPhases_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Phases_Order_By>>;
  where?: InputMaybe<Phases_Bool_Exp>;
};


/** query root */
export type Query_RootPhases_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootProgramme_Of_StudyArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Bool_Exp>;
};


/** query root */
export type Query_RootProgramme_Of_Study_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Bool_Exp>;
};


/** query root */
export type Query_RootProgramme_Of_Study_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootProgramme_Of_Study_UnitArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Unit_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Unit_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Unit_Bool_Exp>;
};


/** query root */
export type Query_RootProgramme_Of_Study_Unit_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Unit_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Unit_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Unit_Bool_Exp>;
};


/** query root */
export type Query_RootProgramme_Of_Study_Unit_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootQuestionsArgs = {
  distinct_on?: InputMaybe<Array<Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questions_Order_By>>;
  where?: InputMaybe<Questions_Bool_Exp>;
};


/** query root */
export type Query_RootQuestions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questions_Order_By>>;
  where?: InputMaybe<Questions_Bool_Exp>;
};


/** query root */
export type Query_RootQuestions_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootQuestions_ExpandedArgs = {
  distinct_on?: InputMaybe<Array<Questions_Expanded_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questions_Expanded_Order_By>>;
  where?: InputMaybe<Questions_Expanded_Bool_Exp>;
};


/** query root */
export type Query_RootQuestions_Expanded_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Questions_Expanded_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questions_Expanded_Order_By>>;
  where?: InputMaybe<Questions_Expanded_Bool_Exp>;
};


/** query root */
export type Query_RootQuiz_QuestionsArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Questions_Order_By>>;
  where?: InputMaybe<Quiz_Questions_Bool_Exp>;
};


/** query root */
export type Query_RootQuiz_Questions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Questions_Order_By>>;
  where?: InputMaybe<Quiz_Questions_Bool_Exp>;
};


/** query root */
export type Query_RootQuiz_Questions_ArchiveArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Questions_Archive_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Questions_Archive_Order_By>>;
  where?: InputMaybe<Quiz_Questions_Archive_Bool_Exp>;
};


/** query root */
export type Query_RootQuiz_Questions_Archive_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Questions_Archive_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Questions_Archive_Order_By>>;
  where?: InputMaybe<Quiz_Questions_Archive_Bool_Exp>;
};


/** query root */
export type Query_RootQuiz_Questions_By_PkArgs = {
  question_id: Scalars['Int'];
  quiz_id: Scalars['Int'];
};


/** query root */
export type Query_RootQuiz_TypesArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Types_Order_By>>;
  where?: InputMaybe<Quiz_Types_Bool_Exp>;
};


/** query root */
export type Query_RootQuiz_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Types_Order_By>>;
  where?: InputMaybe<Quiz_Types_Bool_Exp>;
};


/** query root */
export type Query_RootQuiz_Types_By_PkArgs = {
  title: Scalars['String'];
};


/** query root */
export type Query_RootQuizzesArgs = {
  distinct_on?: InputMaybe<Array<Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizzes_Order_By>>;
  where?: InputMaybe<Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootQuizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizzes_Order_By>>;
  where?: InputMaybe<Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootQuizzes_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootResource_TypesArgs = {
  distinct_on?: InputMaybe<Array<Resource_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Resource_Types_Order_By>>;
  where?: InputMaybe<Resource_Types_Bool_Exp>;
};


/** query root */
export type Query_RootResource_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Resource_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Resource_Types_Order_By>>;
  where?: InputMaybe<Resource_Types_Bool_Exp>;
};


/** query root */
export type Query_RootResource_Types_By_PkArgs = {
  title: Scalars['String'];
};


/** query root */
export type Query_RootTeacher_Field_Of_StudiesArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Field_Of_Studies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Field_Of_Studies_Order_By>>;
  where?: InputMaybe<Teacher_Field_Of_Studies_Bool_Exp>;
};


/** query root */
export type Query_RootTeacher_Field_Of_Studies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Field_Of_Studies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Field_Of_Studies_Order_By>>;
  where?: InputMaybe<Teacher_Field_Of_Studies_Bool_Exp>;
};


/** query root */
export type Query_RootTeacher_Field_Of_Studies_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootTeacher_Key_StagesArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Key_Stages_Order_By>>;
  where?: InputMaybe<Teacher_Key_Stages_Bool_Exp>;
};


/** query root */
export type Query_RootTeacher_Key_Stages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Key_Stages_Order_By>>;
  where?: InputMaybe<Teacher_Key_Stages_Bool_Exp>;
};


/** query root */
export type Query_RootTeacher_Key_Stages_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootTeacher_PhasesArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Phases_Order_By>>;
  where?: InputMaybe<Teacher_Phases_Bool_Exp>;
};


/** query root */
export type Query_RootTeacher_Phases_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Phases_Order_By>>;
  where?: InputMaybe<Teacher_Phases_Bool_Exp>;
};


/** query root */
export type Query_RootTeacher_Phases_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootTeacher_TherapiesArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Therapies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Therapies_Order_By>>;
  where?: InputMaybe<Teacher_Therapies_Bool_Exp>;
};


/** query root */
export type Query_RootTeacher_Therapies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Therapies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Therapies_Order_By>>;
  where?: InputMaybe<Teacher_Therapies_Bool_Exp>;
};


/** query root */
export type Query_RootTeacher_Therapies_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootTeachersArgs = {
  distinct_on?: InputMaybe<Array<Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teachers_Order_By>>;
  where?: InputMaybe<Teachers_Bool_Exp>;
};


/** query root */
export type Query_RootTeachers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teachers_Order_By>>;
  where?: InputMaybe<Teachers_Bool_Exp>;
};


/** query root */
export type Query_RootTeachers_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootThemesArgs = {
  distinct_on?: InputMaybe<Array<Themes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Themes_Order_By>>;
  where?: InputMaybe<Themes_Bool_Exp>;
};


/** query root */
export type Query_RootThemes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Themes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Themes_Order_By>>;
  where?: InputMaybe<Themes_Bool_Exp>;
};


/** query root */
export type Query_RootThemes_As_TopicsArgs = {
  distinct_on?: InputMaybe<Array<Themes_As_Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Themes_As_Topics_Order_By>>;
  where?: InputMaybe<Themes_As_Topics_Bool_Exp>;
};


/** query root */
export type Query_RootThemes_As_Topics_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Themes_As_Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Themes_As_Topics_Order_By>>;
  where?: InputMaybe<Themes_As_Topics_Bool_Exp>;
};


/** query root */
export type Query_RootThemes_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootTherapiesArgs = {
  distinct_on?: InputMaybe<Array<Therapies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Therapies_Order_By>>;
  where?: InputMaybe<Therapies_Bool_Exp>;
};


/** query root */
export type Query_RootTherapies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Therapies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Therapies_Order_By>>;
  where?: InputMaybe<Therapies_Bool_Exp>;
};


/** query root */
export type Query_RootTherapies_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootTherapy_UnitsArgs = {
  distinct_on?: InputMaybe<Array<Therapy_Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Therapy_Units_Order_By>>;
  where?: InputMaybe<Therapy_Units_Bool_Exp>;
};


/** query root */
export type Query_RootTherapy_Units_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Therapy_Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Therapy_Units_Order_By>>;
  where?: InputMaybe<Therapy_Units_Bool_Exp>;
};


/** query root */
export type Query_RootTherapy_Units_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootTimetabled_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Lessons_Order_By>>;
  where?: InputMaybe<Timetabled_Lessons_Bool_Exp>;
};


/** query root */
export type Query_RootTimetabled_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Lessons_Order_By>>;
  where?: InputMaybe<Timetabled_Lessons_Bool_Exp>;
};


/** query root */
export type Query_RootTimetabled_Lessons_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootTimetabled_WeeksArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Weeks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Weeks_Order_By>>;
  where?: InputMaybe<Timetabled_Weeks_Bool_Exp>;
};


/** query root */
export type Query_RootTimetabled_Weeks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Weeks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Weeks_Order_By>>;
  where?: InputMaybe<Timetabled_Weeks_Bool_Exp>;
};


/** query root */
export type Query_RootTimetabled_Weeks_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootTimetablesArgs = {
  distinct_on?: InputMaybe<Array<Timetables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetables_Order_By>>;
  where?: InputMaybe<Timetables_Bool_Exp>;
};


/** query root */
export type Query_RootTimetables_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Timetables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetables_Order_By>>;
  where?: InputMaybe<Timetables_Bool_Exp>;
};


/** query root */
export type Query_RootTimetables_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootTopic_TypesArgs = {
  distinct_on?: InputMaybe<Array<Topic_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Topic_Types_Order_By>>;
  where?: InputMaybe<Topic_Types_Bool_Exp>;
};


/** query root */
export type Query_RootTopic_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Topic_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Topic_Types_Order_By>>;
  where?: InputMaybe<Topic_Types_Bool_Exp>;
};


/** query root */
export type Query_RootTopicsArgs = {
  distinct_on?: InputMaybe<Array<Units_As_Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Units_As_Topics_Order_By>>;
  where?: InputMaybe<Units_As_Topics_Bool_Exp>;
};


/** query root */
export type Query_RootUnit_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Unit_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Unit_Lessons_Order_By>>;
  where?: InputMaybe<Unit_Lessons_Bool_Exp>;
};


/** query root */
export type Query_RootUnit_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Unit_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Unit_Lessons_Order_By>>;
  where?: InputMaybe<Unit_Lessons_Bool_Exp>;
};


/** query root */
export type Query_RootUnit_Lessons_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootUnit_QuizzesArgs = {
  distinct_on?: InputMaybe<Array<Unit_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Unit_Quizzes_Order_By>>;
  where?: InputMaybe<Unit_Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootUnit_Quizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Unit_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Unit_Quizzes_Order_By>>;
  where?: InputMaybe<Unit_Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootUnit_Quizzes_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootUnitsArgs = {
  distinct_on?: InputMaybe<Array<Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Units_Order_By>>;
  where?: InputMaybe<Units_Bool_Exp>;
};


/** query root */
export type Query_RootUnits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Units_Order_By>>;
  where?: InputMaybe<Units_Bool_Exp>;
};


/** query root */
export type Query_RootUnits_As_Topics_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Units_As_Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Units_As_Topics_Order_By>>;
  where?: InputMaybe<Units_As_Topics_Bool_Exp>;
};


/** query root */
export type Query_RootUnits_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootVideosArgs = {
  distinct_on?: InputMaybe<Array<Videos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Videos_Order_By>>;
  where?: InputMaybe<Videos_Bool_Exp>;
};


/** query root */
export type Query_RootVideos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Videos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Videos_Order_By>>;
  where?: InputMaybe<Videos_Bool_Exp>;
};


/** query root */
export type Query_RootVideos_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootVw_Latest_Updated_AtArgs = {
  distinct_on?: InputMaybe<Array<Vw_Latest_Updated_At_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Vw_Latest_Updated_At_Order_By>>;
  where?: InputMaybe<Vw_Latest_Updated_At_Bool_Exp>;
};


/** query root */
export type Query_RootVw_Latest_Updated_At_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Vw_Latest_Updated_At_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Vw_Latest_Updated_At_Order_By>>;
  where?: InputMaybe<Vw_Latest_Updated_At_Bool_Exp>;
};


/** query root */
export type Query_RootWeeksArgs = {
  distinct_on?: InputMaybe<Array<Weeks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Weeks_Order_By>>;
  where?: InputMaybe<Weeks_Bool_Exp>;
};


/** query root */
export type Query_RootWeeks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Weeks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Weeks_Order_By>>;
  where?: InputMaybe<Weeks_Bool_Exp>;
};


/** query root */
export type Query_RootWeeks_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootYearsArgs = {
  distinct_on?: InputMaybe<Array<Years_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Years_Order_By>>;
  where?: InputMaybe<Years_Bool_Exp>;
};


/** query root */
export type Query_RootYears_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Years_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Years_Order_By>>;
  where?: InputMaybe<Years_Bool_Exp>;
};


/** query root */
export type Query_RootYears_By_PkArgs = {
  id: Scalars['Int'];
};

/** columns and relationships of "questions" */
export type Questions = {
  __typename?: 'questions';
  active?: Maybe<Scalars['Boolean']>;
  answer?: Maybe<Scalars['json']>;
  choice_images?: Maybe<Scalars['json']>;
  choices?: Maybe<Scalars['json']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  entry?: Maybe<Scalars['String']>;
  feedback_correct?: Maybe<Scalars['String']>;
  feedback_incorrect?: Maybe<Scalars['String']>;
  /** Used to group questions with in a quiz */
  group?: Maybe<Scalars['String']>;
  /** A sha1 of title, type, answer, choices, images and choiceImages */
  hash?: Maybe<Scalars['bpchar']>;
  id: Scalars['Int'];
  images?: Maybe<Scalars['json']>;
  ingest_id: Scalars['String'];
  /** ISO 639-1 */
  lang?: Maybe<Scalars['bpchar']>;
  points?: Maybe<Scalars['Int']>;
  required?: Maybe<Scalars['Boolean']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "questions" */
export type QuestionsAnswerArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "questions" */
export type QuestionsChoice_ImagesArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "questions" */
export type QuestionsChoicesArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "questions" */
export type QuestionsImagesArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "questions" */
export type Questions_Aggregate = {
  __typename?: 'questions_aggregate';
  aggregate?: Maybe<Questions_Aggregate_Fields>;
  nodes: Array<Questions>;
};

/** aggregate fields of "questions" */
export type Questions_Aggregate_Fields = {
  __typename?: 'questions_aggregate_fields';
  avg?: Maybe<Questions_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Questions_Max_Fields>;
  min?: Maybe<Questions_Min_Fields>;
  stddev?: Maybe<Questions_Stddev_Fields>;
  stddev_pop?: Maybe<Questions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Questions_Stddev_Samp_Fields>;
  sum?: Maybe<Questions_Sum_Fields>;
  var_pop?: Maybe<Questions_Var_Pop_Fields>;
  var_samp?: Maybe<Questions_Var_Samp_Fields>;
  variance?: Maybe<Questions_Variance_Fields>;
};


/** aggregate fields of "questions" */
export type Questions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Questions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "questions" */
export type Questions_Aggregate_Order_By = {
  avg?: InputMaybe<Questions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Questions_Max_Order_By>;
  min?: InputMaybe<Questions_Min_Order_By>;
  stddev?: InputMaybe<Questions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Questions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Questions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Questions_Sum_Order_By>;
  var_pop?: InputMaybe<Questions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Questions_Var_Samp_Order_By>;
  variance?: InputMaybe<Questions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "questions" */
export type Questions_Arr_Rel_Insert_Input = {
  data: Array<Questions_Insert_Input>;
  on_conflict?: InputMaybe<Questions_On_Conflict>;
};

/** aggregate avg on columns */
export type Questions_Avg_Fields = {
  __typename?: 'questions_avg_fields';
  id?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "questions" */
export type Questions_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "questions". All fields are combined with a logical 'AND'. */
export type Questions_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Questions_Bool_Exp>>>;
  _not?: InputMaybe<Questions_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Questions_Bool_Exp>>>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  answer?: InputMaybe<Json_Comparison_Exp>;
  choice_images?: InputMaybe<Json_Comparison_Exp>;
  choices?: InputMaybe<Json_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  entry?: InputMaybe<String_Comparison_Exp>;
  feedback_correct?: InputMaybe<String_Comparison_Exp>;
  feedback_incorrect?: InputMaybe<String_Comparison_Exp>;
  group?: InputMaybe<String_Comparison_Exp>;
  hash?: InputMaybe<Bpchar_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  images?: InputMaybe<Json_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  lang?: InputMaybe<Bpchar_Comparison_Exp>;
  points?: InputMaybe<Int_Comparison_Exp>;
  required?: InputMaybe<Boolean_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "questions" */
export enum Questions_Constraint {
  /** unique or primary key constraint */
  QuestionsPkey = 'questions_pkey'
}

/** columns and relationships of "questions_expanded" */
export type Questions_Expanded = {
  __typename?: 'questions_expanded';
  active?: Maybe<Scalars['Boolean']>;
  answer?: Maybe<Scalars['json']>;
  choice_images?: Maybe<Scalars['json']>;
  choices?: Maybe<Scalars['json']>;
  description?: Maybe<Scalars['String']>;
  entry?: Maybe<Scalars['String']>;
  feedback_correct?: Maybe<Scalars['String']>;
  feedback_incorrect?: Maybe<Scalars['String']>;
  group?: Maybe<Scalars['String']>;
  hash?: Maybe<Scalars['bpchar']>;
  id?: Maybe<Scalars['Int']>;
  images?: Maybe<Scalars['json']>;
  ingest_id?: Maybe<Scalars['String']>;
  lang?: Maybe<Scalars['bpchar']>;
  order?: Maybe<Scalars['Int']>;
  points?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
  required?: Maybe<Scalars['Boolean']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "questions_expanded" */
export type Questions_ExpandedAnswerArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "questions_expanded" */
export type Questions_ExpandedChoice_ImagesArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "questions_expanded" */
export type Questions_ExpandedChoicesArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "questions_expanded" */
export type Questions_ExpandedImagesArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "questions_expanded" */
export type Questions_Expanded_Aggregate = {
  __typename?: 'questions_expanded_aggregate';
  aggregate?: Maybe<Questions_Expanded_Aggregate_Fields>;
  nodes: Array<Questions_Expanded>;
};

/** aggregate fields of "questions_expanded" */
export type Questions_Expanded_Aggregate_Fields = {
  __typename?: 'questions_expanded_aggregate_fields';
  avg?: Maybe<Questions_Expanded_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Questions_Expanded_Max_Fields>;
  min?: Maybe<Questions_Expanded_Min_Fields>;
  stddev?: Maybe<Questions_Expanded_Stddev_Fields>;
  stddev_pop?: Maybe<Questions_Expanded_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Questions_Expanded_Stddev_Samp_Fields>;
  sum?: Maybe<Questions_Expanded_Sum_Fields>;
  var_pop?: Maybe<Questions_Expanded_Var_Pop_Fields>;
  var_samp?: Maybe<Questions_Expanded_Var_Samp_Fields>;
  variance?: Maybe<Questions_Expanded_Variance_Fields>;
};


/** aggregate fields of "questions_expanded" */
export type Questions_Expanded_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Questions_Expanded_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "questions_expanded" */
export type Questions_Expanded_Aggregate_Order_By = {
  avg?: InputMaybe<Questions_Expanded_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Questions_Expanded_Max_Order_By>;
  min?: InputMaybe<Questions_Expanded_Min_Order_By>;
  stddev?: InputMaybe<Questions_Expanded_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Questions_Expanded_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Questions_Expanded_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Questions_Expanded_Sum_Order_By>;
  var_pop?: InputMaybe<Questions_Expanded_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Questions_Expanded_Var_Samp_Order_By>;
  variance?: InputMaybe<Questions_Expanded_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Questions_Expanded_Avg_Fields = {
  __typename?: 'questions_expanded_avg_fields';
  id?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "questions_expanded" */
export type Questions_Expanded_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "questions_expanded". All fields are combined with a logical 'AND'. */
export type Questions_Expanded_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Questions_Expanded_Bool_Exp>>>;
  _not?: InputMaybe<Questions_Expanded_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Questions_Expanded_Bool_Exp>>>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  answer?: InputMaybe<Json_Comparison_Exp>;
  choice_images?: InputMaybe<Json_Comparison_Exp>;
  choices?: InputMaybe<Json_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  entry?: InputMaybe<String_Comparison_Exp>;
  feedback_correct?: InputMaybe<String_Comparison_Exp>;
  feedback_incorrect?: InputMaybe<String_Comparison_Exp>;
  group?: InputMaybe<String_Comparison_Exp>;
  hash?: InputMaybe<Bpchar_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  images?: InputMaybe<Json_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  lang?: InputMaybe<Bpchar_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
  points?: InputMaybe<Int_Comparison_Exp>;
  quiz_id?: InputMaybe<Int_Comparison_Exp>;
  required?: InputMaybe<Boolean_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** aggregate max on columns */
export type Questions_Expanded_Max_Fields = {
  __typename?: 'questions_expanded_max_fields';
  description?: Maybe<Scalars['String']>;
  entry?: Maybe<Scalars['String']>;
  feedback_correct?: Maybe<Scalars['String']>;
  feedback_incorrect?: Maybe<Scalars['String']>;
  group?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  points?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "questions_expanded" */
export type Questions_Expanded_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  entry?: InputMaybe<Order_By>;
  feedback_correct?: InputMaybe<Order_By>;
  feedback_incorrect?: InputMaybe<Order_By>;
  group?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Questions_Expanded_Min_Fields = {
  __typename?: 'questions_expanded_min_fields';
  description?: Maybe<Scalars['String']>;
  entry?: Maybe<Scalars['String']>;
  feedback_correct?: Maybe<Scalars['String']>;
  feedback_incorrect?: Maybe<Scalars['String']>;
  group?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  points?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "questions_expanded" */
export type Questions_Expanded_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  entry?: InputMaybe<Order_By>;
  feedback_correct?: InputMaybe<Order_By>;
  feedback_incorrect?: InputMaybe<Order_By>;
  group?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** ordering options when selecting data from "questions_expanded" */
export type Questions_Expanded_Order_By = {
  active?: InputMaybe<Order_By>;
  answer?: InputMaybe<Order_By>;
  choice_images?: InputMaybe<Order_By>;
  choices?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  entry?: InputMaybe<Order_By>;
  feedback_correct?: InputMaybe<Order_By>;
  feedback_incorrect?: InputMaybe<Order_By>;
  group?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  images?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  lang?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  required?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** select columns of table "questions_expanded" */
export enum Questions_Expanded_Select_Column {
  /** column name */
  Active = 'active',
  /** column name */
  Answer = 'answer',
  /** column name */
  ChoiceImages = 'choice_images',
  /** column name */
  Choices = 'choices',
  /** column name */
  Description = 'description',
  /** column name */
  Entry = 'entry',
  /** column name */
  FeedbackCorrect = 'feedback_correct',
  /** column name */
  FeedbackIncorrect = 'feedback_incorrect',
  /** column name */
  Group = 'group',
  /** column name */
  Hash = 'hash',
  /** column name */
  Id = 'id',
  /** column name */
  Images = 'images',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  Lang = 'lang',
  /** column name */
  Order = 'order',
  /** column name */
  Points = 'points',
  /** column name */
  QuizId = 'quiz_id',
  /** column name */
  Required = 'required',
  /** column name */
  Title = 'title',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate stddev on columns */
export type Questions_Expanded_Stddev_Fields = {
  __typename?: 'questions_expanded_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "questions_expanded" */
export type Questions_Expanded_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Questions_Expanded_Stddev_Pop_Fields = {
  __typename?: 'questions_expanded_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "questions_expanded" */
export type Questions_Expanded_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Questions_Expanded_Stddev_Samp_Fields = {
  __typename?: 'questions_expanded_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "questions_expanded" */
export type Questions_Expanded_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Questions_Expanded_Sum_Fields = {
  __typename?: 'questions_expanded_sum_fields';
  id?: Maybe<Scalars['Int']>;
  order?: Maybe<Scalars['Int']>;
  points?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "questions_expanded" */
export type Questions_Expanded_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Questions_Expanded_Var_Pop_Fields = {
  __typename?: 'questions_expanded_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "questions_expanded" */
export type Questions_Expanded_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Questions_Expanded_Var_Samp_Fields = {
  __typename?: 'questions_expanded_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "questions_expanded" */
export type Questions_Expanded_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Questions_Expanded_Variance_Fields = {
  __typename?: 'questions_expanded_variance_fields';
  id?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "questions_expanded" */
export type Questions_Expanded_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** input type for incrementing integer column in table "questions" */
export type Questions_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  points?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "questions" */
export type Questions_Insert_Input = {
  active?: InputMaybe<Scalars['Boolean']>;
  answer?: InputMaybe<Scalars['json']>;
  choice_images?: InputMaybe<Scalars['json']>;
  choices?: InputMaybe<Scalars['json']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  entry?: InputMaybe<Scalars['String']>;
  feedback_correct?: InputMaybe<Scalars['String']>;
  feedback_incorrect?: InputMaybe<Scalars['String']>;
  group?: InputMaybe<Scalars['String']>;
  hash?: InputMaybe<Scalars['bpchar']>;
  id?: InputMaybe<Scalars['Int']>;
  images?: InputMaybe<Scalars['json']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  lang?: InputMaybe<Scalars['bpchar']>;
  points?: InputMaybe<Scalars['Int']>;
  required?: InputMaybe<Scalars['Boolean']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Questions_Max_Fields = {
  __typename?: 'questions_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  entry?: Maybe<Scalars['String']>;
  feedback_correct?: Maybe<Scalars['String']>;
  feedback_incorrect?: Maybe<Scalars['String']>;
  group?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  points?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "questions" */
export type Questions_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  entry?: InputMaybe<Order_By>;
  feedback_correct?: InputMaybe<Order_By>;
  feedback_incorrect?: InputMaybe<Order_By>;
  group?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Questions_Min_Fields = {
  __typename?: 'questions_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  entry?: Maybe<Scalars['String']>;
  feedback_correct?: Maybe<Scalars['String']>;
  feedback_incorrect?: Maybe<Scalars['String']>;
  group?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  points?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "questions" */
export type Questions_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  entry?: InputMaybe<Order_By>;
  feedback_correct?: InputMaybe<Order_By>;
  feedback_incorrect?: InputMaybe<Order_By>;
  group?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "questions" */
export type Questions_Mutation_Response = {
  __typename?: 'questions_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Questions>;
};

/** input type for inserting object relation for remote table "questions" */
export type Questions_Obj_Rel_Insert_Input = {
  data: Questions_Insert_Input;
  on_conflict?: InputMaybe<Questions_On_Conflict>;
};

/** on conflict condition type for table "questions" */
export type Questions_On_Conflict = {
  constraint: Questions_Constraint;
  update_columns: Array<Questions_Update_Column>;
  where?: InputMaybe<Questions_Bool_Exp>;
};

/** ordering options when selecting data from "questions" */
export type Questions_Order_By = {
  active?: InputMaybe<Order_By>;
  answer?: InputMaybe<Order_By>;
  choice_images?: InputMaybe<Order_By>;
  choices?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  entry?: InputMaybe<Order_By>;
  feedback_correct?: InputMaybe<Order_By>;
  feedback_incorrect?: InputMaybe<Order_By>;
  group?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  images?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  lang?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
  required?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "questions" */
export type Questions_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "questions" */
export enum Questions_Select_Column {
  /** column name */
  Active = 'active',
  /** column name */
  Answer = 'answer',
  /** column name */
  ChoiceImages = 'choice_images',
  /** column name */
  Choices = 'choices',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Entry = 'entry',
  /** column name */
  FeedbackCorrect = 'feedback_correct',
  /** column name */
  FeedbackIncorrect = 'feedback_incorrect',
  /** column name */
  Group = 'group',
  /** column name */
  Hash = 'hash',
  /** column name */
  Id = 'id',
  /** column name */
  Images = 'images',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  Lang = 'lang',
  /** column name */
  Points = 'points',
  /** column name */
  Required = 'required',
  /** column name */
  Title = 'title',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "questions" */
export type Questions_Set_Input = {
  active?: InputMaybe<Scalars['Boolean']>;
  answer?: InputMaybe<Scalars['json']>;
  choice_images?: InputMaybe<Scalars['json']>;
  choices?: InputMaybe<Scalars['json']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  entry?: InputMaybe<Scalars['String']>;
  feedback_correct?: InputMaybe<Scalars['String']>;
  feedback_incorrect?: InputMaybe<Scalars['String']>;
  group?: InputMaybe<Scalars['String']>;
  hash?: InputMaybe<Scalars['bpchar']>;
  id?: InputMaybe<Scalars['Int']>;
  images?: InputMaybe<Scalars['json']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  lang?: InputMaybe<Scalars['bpchar']>;
  points?: InputMaybe<Scalars['Int']>;
  required?: InputMaybe<Scalars['Boolean']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Questions_Stddev_Fields = {
  __typename?: 'questions_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "questions" */
export type Questions_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Questions_Stddev_Pop_Fields = {
  __typename?: 'questions_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "questions" */
export type Questions_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Questions_Stddev_Samp_Fields = {
  __typename?: 'questions_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "questions" */
export type Questions_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Questions_Sum_Fields = {
  __typename?: 'questions_sum_fields';
  id?: Maybe<Scalars['Int']>;
  points?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "questions" */
export type Questions_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
};

/** update columns of table "questions" */
export enum Questions_Update_Column {
  /** column name */
  Active = 'active',
  /** column name */
  Answer = 'answer',
  /** column name */
  ChoiceImages = 'choice_images',
  /** column name */
  Choices = 'choices',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Entry = 'entry',
  /** column name */
  FeedbackCorrect = 'feedback_correct',
  /** column name */
  FeedbackIncorrect = 'feedback_incorrect',
  /** column name */
  Group = 'group',
  /** column name */
  Hash = 'hash',
  /** column name */
  Id = 'id',
  /** column name */
  Images = 'images',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  Lang = 'lang',
  /** column name */
  Points = 'points',
  /** column name */
  Required = 'required',
  /** column name */
  Title = 'title',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Questions_Var_Pop_Fields = {
  __typename?: 'questions_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "questions" */
export type Questions_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Questions_Var_Samp_Fields = {
  __typename?: 'questions_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "questions" */
export type Questions_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Questions_Variance_Fields = {
  __typename?: 'questions_variance_fields';
  id?: Maybe<Scalars['Float']>;
  points?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "questions" */
export type Questions_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  points?: InputMaybe<Order_By>;
};

/** columns and relationships of "quiz_questions" */
export type Quiz_Questions = {
  __typename?: 'quiz_questions';
  order?: Maybe<Scalars['Int']>;
  question_id: Scalars['Int'];
  quiz_id: Scalars['Int'];
};

/** aggregated selection of "quiz_questions" */
export type Quiz_Questions_Aggregate = {
  __typename?: 'quiz_questions_aggregate';
  aggregate?: Maybe<Quiz_Questions_Aggregate_Fields>;
  nodes: Array<Quiz_Questions>;
};

/** aggregate fields of "quiz_questions" */
export type Quiz_Questions_Aggregate_Fields = {
  __typename?: 'quiz_questions_aggregate_fields';
  avg?: Maybe<Quiz_Questions_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Quiz_Questions_Max_Fields>;
  min?: Maybe<Quiz_Questions_Min_Fields>;
  stddev?: Maybe<Quiz_Questions_Stddev_Fields>;
  stddev_pop?: Maybe<Quiz_Questions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Quiz_Questions_Stddev_Samp_Fields>;
  sum?: Maybe<Quiz_Questions_Sum_Fields>;
  var_pop?: Maybe<Quiz_Questions_Var_Pop_Fields>;
  var_samp?: Maybe<Quiz_Questions_Var_Samp_Fields>;
  variance?: Maybe<Quiz_Questions_Variance_Fields>;
};


/** aggregate fields of "quiz_questions" */
export type Quiz_Questions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Quiz_Questions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "quiz_questions" */
export type Quiz_Questions_Aggregate_Order_By = {
  avg?: InputMaybe<Quiz_Questions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Quiz_Questions_Max_Order_By>;
  min?: InputMaybe<Quiz_Questions_Min_Order_By>;
  stddev?: InputMaybe<Quiz_Questions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Quiz_Questions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Quiz_Questions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Quiz_Questions_Sum_Order_By>;
  var_pop?: InputMaybe<Quiz_Questions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Quiz_Questions_Var_Samp_Order_By>;
  variance?: InputMaybe<Quiz_Questions_Variance_Order_By>;
};

/** columns and relationships of "quiz_questions_archive" */
export type Quiz_Questions_Archive = {
  __typename?: 'quiz_questions_archive';
  created_at?: Maybe<Scalars['timestamptz']>;
  order?: Maybe<Scalars['Int']>;
  question_id: Scalars['Int'];
  quiz_id: Scalars['Int'];
};

/** aggregated selection of "quiz_questions_archive" */
export type Quiz_Questions_Archive_Aggregate = {
  __typename?: 'quiz_questions_archive_aggregate';
  aggregate?: Maybe<Quiz_Questions_Archive_Aggregate_Fields>;
  nodes: Array<Quiz_Questions_Archive>;
};

/** aggregate fields of "quiz_questions_archive" */
export type Quiz_Questions_Archive_Aggregate_Fields = {
  __typename?: 'quiz_questions_archive_aggregate_fields';
  avg?: Maybe<Quiz_Questions_Archive_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Quiz_Questions_Archive_Max_Fields>;
  min?: Maybe<Quiz_Questions_Archive_Min_Fields>;
  stddev?: Maybe<Quiz_Questions_Archive_Stddev_Fields>;
  stddev_pop?: Maybe<Quiz_Questions_Archive_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Quiz_Questions_Archive_Stddev_Samp_Fields>;
  sum?: Maybe<Quiz_Questions_Archive_Sum_Fields>;
  var_pop?: Maybe<Quiz_Questions_Archive_Var_Pop_Fields>;
  var_samp?: Maybe<Quiz_Questions_Archive_Var_Samp_Fields>;
  variance?: Maybe<Quiz_Questions_Archive_Variance_Fields>;
};


/** aggregate fields of "quiz_questions_archive" */
export type Quiz_Questions_Archive_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Quiz_Questions_Archive_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "quiz_questions_archive" */
export type Quiz_Questions_Archive_Aggregate_Order_By = {
  avg?: InputMaybe<Quiz_Questions_Archive_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Quiz_Questions_Archive_Max_Order_By>;
  min?: InputMaybe<Quiz_Questions_Archive_Min_Order_By>;
  stddev?: InputMaybe<Quiz_Questions_Archive_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Quiz_Questions_Archive_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Quiz_Questions_Archive_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Quiz_Questions_Archive_Sum_Order_By>;
  var_pop?: InputMaybe<Quiz_Questions_Archive_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Quiz_Questions_Archive_Var_Samp_Order_By>;
  variance?: InputMaybe<Quiz_Questions_Archive_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "quiz_questions_archive" */
export type Quiz_Questions_Archive_Arr_Rel_Insert_Input = {
  data: Array<Quiz_Questions_Archive_Insert_Input>;
};

/** aggregate avg on columns */
export type Quiz_Questions_Archive_Avg_Fields = {
  __typename?: 'quiz_questions_archive_avg_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "quiz_questions_archive" */
export type Quiz_Questions_Archive_Avg_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "quiz_questions_archive". All fields are combined with a logical 'AND'. */
export type Quiz_Questions_Archive_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Quiz_Questions_Archive_Bool_Exp>>>;
  _not?: InputMaybe<Quiz_Questions_Archive_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Quiz_Questions_Archive_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  order?: InputMaybe<Int_Comparison_Exp>;
  question_id?: InputMaybe<Int_Comparison_Exp>;
  quiz_id?: InputMaybe<Int_Comparison_Exp>;
};

/** input type for incrementing integer column in table "quiz_questions_archive" */
export type Quiz_Questions_Archive_Inc_Input = {
  order?: InputMaybe<Scalars['Int']>;
  question_id?: InputMaybe<Scalars['Int']>;
  quiz_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "quiz_questions_archive" */
export type Quiz_Questions_Archive_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  order?: InputMaybe<Scalars['Int']>;
  question_id?: InputMaybe<Scalars['Int']>;
  quiz_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Quiz_Questions_Archive_Max_Fields = {
  __typename?: 'quiz_questions_archive_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  order?: Maybe<Scalars['Int']>;
  question_id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "quiz_questions_archive" */
export type Quiz_Questions_Archive_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Quiz_Questions_Archive_Min_Fields = {
  __typename?: 'quiz_questions_archive_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  order?: Maybe<Scalars['Int']>;
  question_id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "quiz_questions_archive" */
export type Quiz_Questions_Archive_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "quiz_questions_archive" */
export type Quiz_Questions_Archive_Mutation_Response = {
  __typename?: 'quiz_questions_archive_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Quiz_Questions_Archive>;
};

/** input type for inserting object relation for remote table "quiz_questions_archive" */
export type Quiz_Questions_Archive_Obj_Rel_Insert_Input = {
  data: Quiz_Questions_Archive_Insert_Input;
};

/** ordering options when selecting data from "quiz_questions_archive" */
export type Quiz_Questions_Archive_Order_By = {
  created_at?: InputMaybe<Order_By>;
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** select columns of table "quiz_questions_archive" */
export enum Quiz_Questions_Archive_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Order = 'order',
  /** column name */
  QuestionId = 'question_id',
  /** column name */
  QuizId = 'quiz_id'
}

/** input type for updating data in table "quiz_questions_archive" */
export type Quiz_Questions_Archive_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  order?: InputMaybe<Scalars['Int']>;
  question_id?: InputMaybe<Scalars['Int']>;
  quiz_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Quiz_Questions_Archive_Stddev_Fields = {
  __typename?: 'quiz_questions_archive_stddev_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "quiz_questions_archive" */
export type Quiz_Questions_Archive_Stddev_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Quiz_Questions_Archive_Stddev_Pop_Fields = {
  __typename?: 'quiz_questions_archive_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "quiz_questions_archive" */
export type Quiz_Questions_Archive_Stddev_Pop_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Quiz_Questions_Archive_Stddev_Samp_Fields = {
  __typename?: 'quiz_questions_archive_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "quiz_questions_archive" */
export type Quiz_Questions_Archive_Stddev_Samp_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Quiz_Questions_Archive_Sum_Fields = {
  __typename?: 'quiz_questions_archive_sum_fields';
  order?: Maybe<Scalars['Int']>;
  question_id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "quiz_questions_archive" */
export type Quiz_Questions_Archive_Sum_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Quiz_Questions_Archive_Var_Pop_Fields = {
  __typename?: 'quiz_questions_archive_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "quiz_questions_archive" */
export type Quiz_Questions_Archive_Var_Pop_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Quiz_Questions_Archive_Var_Samp_Fields = {
  __typename?: 'quiz_questions_archive_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "quiz_questions_archive" */
export type Quiz_Questions_Archive_Var_Samp_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Quiz_Questions_Archive_Variance_Fields = {
  __typename?: 'quiz_questions_archive_variance_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "quiz_questions_archive" */
export type Quiz_Questions_Archive_Variance_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** input type for inserting array relation for remote table "quiz_questions" */
export type Quiz_Questions_Arr_Rel_Insert_Input = {
  data: Array<Quiz_Questions_Insert_Input>;
  on_conflict?: InputMaybe<Quiz_Questions_On_Conflict>;
};

/** aggregate avg on columns */
export type Quiz_Questions_Avg_Fields = {
  __typename?: 'quiz_questions_avg_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "quiz_questions" */
export type Quiz_Questions_Avg_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "quiz_questions". All fields are combined with a logical 'AND'. */
export type Quiz_Questions_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Quiz_Questions_Bool_Exp>>>;
  _not?: InputMaybe<Quiz_Questions_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Quiz_Questions_Bool_Exp>>>;
  order?: InputMaybe<Int_Comparison_Exp>;
  question_id?: InputMaybe<Int_Comparison_Exp>;
  quiz_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "quiz_questions" */
export enum Quiz_Questions_Constraint {
  /** unique or primary key constraint */
  QuizQuestionsPkey = 'quiz_questions_pkey'
}

/** input type for incrementing integer column in table "quiz_questions" */
export type Quiz_Questions_Inc_Input = {
  order?: InputMaybe<Scalars['Int']>;
  question_id?: InputMaybe<Scalars['Int']>;
  quiz_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "quiz_questions" */
export type Quiz_Questions_Insert_Input = {
  order?: InputMaybe<Scalars['Int']>;
  question_id?: InputMaybe<Scalars['Int']>;
  quiz_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Quiz_Questions_Max_Fields = {
  __typename?: 'quiz_questions_max_fields';
  order?: Maybe<Scalars['Int']>;
  question_id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "quiz_questions" */
export type Quiz_Questions_Max_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Quiz_Questions_Min_Fields = {
  __typename?: 'quiz_questions_min_fields';
  order?: Maybe<Scalars['Int']>;
  question_id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "quiz_questions" */
export type Quiz_Questions_Min_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "quiz_questions" */
export type Quiz_Questions_Mutation_Response = {
  __typename?: 'quiz_questions_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Quiz_Questions>;
};

/** input type for inserting object relation for remote table "quiz_questions" */
export type Quiz_Questions_Obj_Rel_Insert_Input = {
  data: Quiz_Questions_Insert_Input;
  on_conflict?: InputMaybe<Quiz_Questions_On_Conflict>;
};

/** on conflict condition type for table "quiz_questions" */
export type Quiz_Questions_On_Conflict = {
  constraint: Quiz_Questions_Constraint;
  update_columns: Array<Quiz_Questions_Update_Column>;
  where?: InputMaybe<Quiz_Questions_Bool_Exp>;
};

/** ordering options when selecting data from "quiz_questions" */
export type Quiz_Questions_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "quiz_questions" */
export type Quiz_Questions_Pk_Columns_Input = {
  question_id: Scalars['Int'];
  quiz_id: Scalars['Int'];
};

/** select columns of table "quiz_questions" */
export enum Quiz_Questions_Select_Column {
  /** column name */
  Order = 'order',
  /** column name */
  QuestionId = 'question_id',
  /** column name */
  QuizId = 'quiz_id'
}

/** input type for updating data in table "quiz_questions" */
export type Quiz_Questions_Set_Input = {
  order?: InputMaybe<Scalars['Int']>;
  question_id?: InputMaybe<Scalars['Int']>;
  quiz_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Quiz_Questions_Stddev_Fields = {
  __typename?: 'quiz_questions_stddev_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "quiz_questions" */
export type Quiz_Questions_Stddev_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Quiz_Questions_Stddev_Pop_Fields = {
  __typename?: 'quiz_questions_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "quiz_questions" */
export type Quiz_Questions_Stddev_Pop_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Quiz_Questions_Stddev_Samp_Fields = {
  __typename?: 'quiz_questions_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "quiz_questions" */
export type Quiz_Questions_Stddev_Samp_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Quiz_Questions_Sum_Fields = {
  __typename?: 'quiz_questions_sum_fields';
  order?: Maybe<Scalars['Int']>;
  question_id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "quiz_questions" */
export type Quiz_Questions_Sum_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** update columns of table "quiz_questions" */
export enum Quiz_Questions_Update_Column {
  /** column name */
  Order = 'order',
  /** column name */
  QuestionId = 'question_id',
  /** column name */
  QuizId = 'quiz_id'
}

/** aggregate var_pop on columns */
export type Quiz_Questions_Var_Pop_Fields = {
  __typename?: 'quiz_questions_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "quiz_questions" */
export type Quiz_Questions_Var_Pop_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Quiz_Questions_Var_Samp_Fields = {
  __typename?: 'quiz_questions_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "quiz_questions" */
export type Quiz_Questions_Var_Samp_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Quiz_Questions_Variance_Fields = {
  __typename?: 'quiz_questions_variance_fields';
  order?: Maybe<Scalars['Float']>;
  question_id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "quiz_questions" */
export type Quiz_Questions_Variance_Order_By = {
  order?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "quiz_types" */
export type Quiz_Types = {
  __typename?: 'quiz_types';
  title: Scalars['String'];
};

/** aggregated selection of "quiz_types" */
export type Quiz_Types_Aggregate = {
  __typename?: 'quiz_types_aggregate';
  aggregate?: Maybe<Quiz_Types_Aggregate_Fields>;
  nodes: Array<Quiz_Types>;
};

/** aggregate fields of "quiz_types" */
export type Quiz_Types_Aggregate_Fields = {
  __typename?: 'quiz_types_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Quiz_Types_Max_Fields>;
  min?: Maybe<Quiz_Types_Min_Fields>;
};


/** aggregate fields of "quiz_types" */
export type Quiz_Types_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Quiz_Types_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "quiz_types" */
export type Quiz_Types_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Quiz_Types_Max_Order_By>;
  min?: InputMaybe<Quiz_Types_Min_Order_By>;
};

/** input type for inserting array relation for remote table "quiz_types" */
export type Quiz_Types_Arr_Rel_Insert_Input = {
  data: Array<Quiz_Types_Insert_Input>;
  on_conflict?: InputMaybe<Quiz_Types_On_Conflict>;
};

/** Boolean expression to filter rows from the table "quiz_types". All fields are combined with a logical 'AND'. */
export type Quiz_Types_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Quiz_Types_Bool_Exp>>>;
  _not?: InputMaybe<Quiz_Types_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Quiz_Types_Bool_Exp>>>;
  title?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "quiz_types" */
export enum Quiz_Types_Constraint {
  /** unique or primary key constraint */
  QuizTypesPkey = 'quiz_types_pkey'
}

/** input type for inserting data into table "quiz_types" */
export type Quiz_Types_Insert_Input = {
  title?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Quiz_Types_Max_Fields = {
  __typename?: 'quiz_types_max_fields';
  title?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "quiz_types" */
export type Quiz_Types_Max_Order_By = {
  title?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Quiz_Types_Min_Fields = {
  __typename?: 'quiz_types_min_fields';
  title?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "quiz_types" */
export type Quiz_Types_Min_Order_By = {
  title?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "quiz_types" */
export type Quiz_Types_Mutation_Response = {
  __typename?: 'quiz_types_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Quiz_Types>;
};

/** input type for inserting object relation for remote table "quiz_types" */
export type Quiz_Types_Obj_Rel_Insert_Input = {
  data: Quiz_Types_Insert_Input;
  on_conflict?: InputMaybe<Quiz_Types_On_Conflict>;
};

/** on conflict condition type for table "quiz_types" */
export type Quiz_Types_On_Conflict = {
  constraint: Quiz_Types_Constraint;
  update_columns: Array<Quiz_Types_Update_Column>;
  where?: InputMaybe<Quiz_Types_Bool_Exp>;
};

/** ordering options when selecting data from "quiz_types" */
export type Quiz_Types_Order_By = {
  title?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "quiz_types" */
export type Quiz_Types_Pk_Columns_Input = {
  title: Scalars['String'];
};

/** select columns of table "quiz_types" */
export enum Quiz_Types_Select_Column {
  /** column name */
  Title = 'title'
}

/** input type for updating data in table "quiz_types" */
export type Quiz_Types_Set_Input = {
  title?: InputMaybe<Scalars['String']>;
};

/** update columns of table "quiz_types" */
export enum Quiz_Types_Update_Column {
  /** column name */
  Title = 'title'
}

/** columns and relationships of "quizzes" */
export type Quizzes = {
  __typename?: 'quizzes';
  attribution?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  ingest_id: Scalars['String'];
  /** ISO 639-1 */
  lang?: Maybe<Scalars['bpchar']>;
  max_points?: Maybe<Scalars['Int']>;
  /** An array relationship */
  questions: Array<Questions_Expanded>;
  /** An aggregated array relationship */
  questions_aggregate: Questions_Expanded_Aggregate;
  source?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "quizzes" */
export type QuizzesQuestionsArgs = {
  distinct_on?: InputMaybe<Array<Questions_Expanded_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questions_Expanded_Order_By>>;
  where?: InputMaybe<Questions_Expanded_Bool_Exp>;
};


/** columns and relationships of "quizzes" */
export type QuizzesQuestions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Questions_Expanded_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questions_Expanded_Order_By>>;
  where?: InputMaybe<Questions_Expanded_Bool_Exp>;
};

/** aggregated selection of "quizzes" */
export type Quizzes_Aggregate = {
  __typename?: 'quizzes_aggregate';
  aggregate?: Maybe<Quizzes_Aggregate_Fields>;
  nodes: Array<Quizzes>;
};

/** aggregate fields of "quizzes" */
export type Quizzes_Aggregate_Fields = {
  __typename?: 'quizzes_aggregate_fields';
  avg?: Maybe<Quizzes_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Quizzes_Max_Fields>;
  min?: Maybe<Quizzes_Min_Fields>;
  stddev?: Maybe<Quizzes_Stddev_Fields>;
  stddev_pop?: Maybe<Quizzes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Quizzes_Stddev_Samp_Fields>;
  sum?: Maybe<Quizzes_Sum_Fields>;
  var_pop?: Maybe<Quizzes_Var_Pop_Fields>;
  var_samp?: Maybe<Quizzes_Var_Samp_Fields>;
  variance?: Maybe<Quizzes_Variance_Fields>;
};


/** aggregate fields of "quizzes" */
export type Quizzes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Quizzes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "quizzes" */
export type Quizzes_Aggregate_Order_By = {
  avg?: InputMaybe<Quizzes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Quizzes_Max_Order_By>;
  min?: InputMaybe<Quizzes_Min_Order_By>;
  stddev?: InputMaybe<Quizzes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Quizzes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Quizzes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Quizzes_Sum_Order_By>;
  var_pop?: InputMaybe<Quizzes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Quizzes_Var_Samp_Order_By>;
  variance?: InputMaybe<Quizzes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "quizzes" */
export type Quizzes_Arr_Rel_Insert_Input = {
  data: Array<Quizzes_Insert_Input>;
  on_conflict?: InputMaybe<Quizzes_On_Conflict>;
};

/** aggregate avg on columns */
export type Quizzes_Avg_Fields = {
  __typename?: 'quizzes_avg_fields';
  id?: Maybe<Scalars['Float']>;
  max_points?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "quizzes" */
export type Quizzes_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "quizzes". All fields are combined with a logical 'AND'. */
export type Quizzes_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Quizzes_Bool_Exp>>>;
  _not?: InputMaybe<Quizzes_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Quizzes_Bool_Exp>>>;
  attribution?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  lang?: InputMaybe<Bpchar_Comparison_Exp>;
  max_points?: InputMaybe<Int_Comparison_Exp>;
  questions?: InputMaybe<Questions_Expanded_Bool_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "quizzes" */
export enum Quizzes_Constraint {
  /** unique or primary key constraint */
  QuizzesPkey = 'quizzes_pkey'
}

/** input type for incrementing integer column in table "quizzes" */
export type Quizzes_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  max_points?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "quizzes" */
export type Quizzes_Insert_Input = {
  attribution?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  lang?: InputMaybe<Scalars['bpchar']>;
  max_points?: InputMaybe<Scalars['Int']>;
  source?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Quizzes_Max_Fields = {
  __typename?: 'quizzes_max_fields';
  attribution?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  max_points?: Maybe<Scalars['Int']>;
  source?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "quizzes" */
export type Quizzes_Max_Order_By = {
  attribution?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Quizzes_Min_Fields = {
  __typename?: 'quizzes_min_fields';
  attribution?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  max_points?: Maybe<Scalars['Int']>;
  source?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "quizzes" */
export type Quizzes_Min_Order_By = {
  attribution?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "quizzes" */
export type Quizzes_Mutation_Response = {
  __typename?: 'quizzes_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Quizzes>;
};

/** input type for inserting object relation for remote table "quizzes" */
export type Quizzes_Obj_Rel_Insert_Input = {
  data: Quizzes_Insert_Input;
  on_conflict?: InputMaybe<Quizzes_On_Conflict>;
};

/** on conflict condition type for table "quizzes" */
export type Quizzes_On_Conflict = {
  constraint: Quizzes_Constraint;
  update_columns: Array<Quizzes_Update_Column>;
  where?: InputMaybe<Quizzes_Bool_Exp>;
};

/** ordering options when selecting data from "quizzes" */
export type Quizzes_Order_By = {
  attribution?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  lang?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
  questions_aggregate?: InputMaybe<Questions_Expanded_Aggregate_Order_By>;
  source?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "quizzes" */
export type Quizzes_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "quizzes" */
export enum Quizzes_Select_Column {
  /** column name */
  Attribution = 'attribution',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  Lang = 'lang',
  /** column name */
  MaxPoints = 'max_points',
  /** column name */
  Source = 'source',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "quizzes" */
export type Quizzes_Set_Input = {
  attribution?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  lang?: InputMaybe<Scalars['bpchar']>;
  max_points?: InputMaybe<Scalars['Int']>;
  source?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Quizzes_Stddev_Fields = {
  __typename?: 'quizzes_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  max_points?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "quizzes" */
export type Quizzes_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Quizzes_Stddev_Pop_Fields = {
  __typename?: 'quizzes_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  max_points?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "quizzes" */
export type Quizzes_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Quizzes_Stddev_Samp_Fields = {
  __typename?: 'quizzes_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  max_points?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "quizzes" */
export type Quizzes_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Quizzes_Sum_Fields = {
  __typename?: 'quizzes_sum_fields';
  id?: Maybe<Scalars['Int']>;
  max_points?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "quizzes" */
export type Quizzes_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
};

/** update columns of table "quizzes" */
export enum Quizzes_Update_Column {
  /** column name */
  Attribution = 'attribution',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  Lang = 'lang',
  /** column name */
  MaxPoints = 'max_points',
  /** column name */
  Source = 'source',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Quizzes_Var_Pop_Fields = {
  __typename?: 'quizzes_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  max_points?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "quizzes" */
export type Quizzes_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Quizzes_Var_Samp_Fields = {
  __typename?: 'quizzes_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  max_points?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "quizzes" */
export type Quizzes_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Quizzes_Variance_Fields = {
  __typename?: 'quizzes_variance_fields';
  id?: Maybe<Scalars['Float']>;
  max_points?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "quizzes" */
export type Quizzes_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  max_points?: InputMaybe<Order_By>;
};

/** columns and relationships of "resource_types" */
export type Resource_Types = {
  __typename?: 'resource_types';
  title: Scalars['String'];
};

/** aggregated selection of "resource_types" */
export type Resource_Types_Aggregate = {
  __typename?: 'resource_types_aggregate';
  aggregate?: Maybe<Resource_Types_Aggregate_Fields>;
  nodes: Array<Resource_Types>;
};

/** aggregate fields of "resource_types" */
export type Resource_Types_Aggregate_Fields = {
  __typename?: 'resource_types_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Resource_Types_Max_Fields>;
  min?: Maybe<Resource_Types_Min_Fields>;
};


/** aggregate fields of "resource_types" */
export type Resource_Types_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Resource_Types_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "resource_types" */
export type Resource_Types_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Resource_Types_Max_Order_By>;
  min?: InputMaybe<Resource_Types_Min_Order_By>;
};

/** input type for inserting array relation for remote table "resource_types" */
export type Resource_Types_Arr_Rel_Insert_Input = {
  data: Array<Resource_Types_Insert_Input>;
  on_conflict?: InputMaybe<Resource_Types_On_Conflict>;
};

/** Boolean expression to filter rows from the table "resource_types". All fields are combined with a logical 'AND'. */
export type Resource_Types_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Resource_Types_Bool_Exp>>>;
  _not?: InputMaybe<Resource_Types_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Resource_Types_Bool_Exp>>>;
  title?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "resource_types" */
export enum Resource_Types_Constraint {
  /** unique or primary key constraint */
  ResourceTypesPkey = 'resource_types_pkey'
}

export enum Resource_Types_Enum {
  Dld = 'DLD',
  Sli = 'SLI',
  Wrk = 'WRK'
}

/** expression to compare columns of type resource_types_enum. All fields are combined with logical 'AND'. */
export type Resource_Types_Enum_Comparison_Exp = {
  _eq?: InputMaybe<Resource_Types_Enum>;
  _in?: InputMaybe<Array<Resource_Types_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Resource_Types_Enum>;
  _nin?: InputMaybe<Array<Resource_Types_Enum>>;
};

/** input type for inserting data into table "resource_types" */
export type Resource_Types_Insert_Input = {
  title?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Resource_Types_Max_Fields = {
  __typename?: 'resource_types_max_fields';
  title?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "resource_types" */
export type Resource_Types_Max_Order_By = {
  title?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Resource_Types_Min_Fields = {
  __typename?: 'resource_types_min_fields';
  title?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "resource_types" */
export type Resource_Types_Min_Order_By = {
  title?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "resource_types" */
export type Resource_Types_Mutation_Response = {
  __typename?: 'resource_types_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Resource_Types>;
};

/** input type for inserting object relation for remote table "resource_types" */
export type Resource_Types_Obj_Rel_Insert_Input = {
  data: Resource_Types_Insert_Input;
  on_conflict?: InputMaybe<Resource_Types_On_Conflict>;
};

/** on conflict condition type for table "resource_types" */
export type Resource_Types_On_Conflict = {
  constraint: Resource_Types_Constraint;
  update_columns: Array<Resource_Types_Update_Column>;
  where?: InputMaybe<Resource_Types_Bool_Exp>;
};

/** ordering options when selecting data from "resource_types" */
export type Resource_Types_Order_By = {
  title?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "resource_types" */
export type Resource_Types_Pk_Columns_Input = {
  title: Scalars['String'];
};

/** select columns of table "resource_types" */
export enum Resource_Types_Select_Column {
  /** column name */
  Title = 'title'
}

/** input type for updating data in table "resource_types" */
export type Resource_Types_Set_Input = {
  title?: InputMaybe<Scalars['String']>;
};

/** update columns of table "resource_types" */
export enum Resource_Types_Update_Column {
  /** column name */
  Title = 'title'
}

/** subscription root */
export type Subscription_Root = {
  __typename?: 'subscription_root';
  /** fetch data from the table: "academic_years" */
  academic_years: Array<Academic_Years>;
  /** fetch aggregated fields from the table: "academic_years" */
  academic_years_aggregate: Academic_Years_Aggregate;
  /** fetch data from the table: "academic_years" using primary key columns */
  academic_years_by_pk?: Maybe<Academic_Years>;
  /** fetch data from the table: "audit.asset_ingest_audits" */
  audit_asset_ingest_audits: Array<Audit_Asset_Ingest_Audits>;
  /** fetch aggregated fields from the table: "audit.asset_ingest_audits" */
  audit_asset_ingest_audits_aggregate: Audit_Asset_Ingest_Audits_Aggregate;
  /** fetch data from the table: "audit.lesson_audits" */
  audit_lesson_audits: Array<Audit_Lesson_Audits>;
  /** fetch aggregated fields from the table: "audit.lesson_audits" */
  audit_lesson_audits_aggregate: Audit_Lesson_Audits_Aggregate;
  /** fetch data from the table: "captions" */
  captions: Array<Captions>;
  /** fetch aggregated fields from the table: "captions" */
  captions_aggregate: Captions_Aggregate;
  /** fetch data from the table: "captions" using primary key columns */
  captions_by_pk?: Maybe<Captions>;
  /** fetch data from the table: "cohorts" */
  cohorts: Array<Cohorts>;
  /** fetch aggregated fields from the table: "cohorts" */
  cohorts_aggregate: Cohorts_Aggregate;
  /** fetch data from the table: "cohorts" using primary key columns */
  cohorts_by_pk?: Maybe<Cohorts>;
  /** fetch data from the table: "curriculum_documents" */
  curriculum_documents: Array<Curriculum_Documents>;
  /** fetch aggregated fields from the table: "curriculum_documents" */
  curriculum_documents_aggregate: Curriculum_Documents_Aggregate;
  /** fetch data from the table: "curriculum_documents" using primary key columns */
  curriculum_documents_by_pk?: Maybe<Curriculum_Documents>;
  /** fetch data from the table: "curriculums" */
  curriculums: Array<Curriculums>;
  /** fetch aggregated fields from the table: "curriculums" */
  curriculums_aggregate: Curriculums_Aggregate;
  /** fetch data from the table: "curriculums" using primary key columns */
  curriculums_by_pk?: Maybe<Curriculums>;
  /** fetch data from the table: "curriculums_programme_of_study" */
  curriculums_programme_of_study: Array<Curriculums_Programme_Of_Study>;
  /** fetch aggregated fields from the table: "curriculums_programme_of_study" */
  curriculums_programme_of_study_aggregate: Curriculums_Programme_Of_Study_Aggregate;
  /** fetch data from the table: "curriculums_programme_of_study" using primary key columns */
  curriculums_programme_of_study_by_pk?: Maybe<Curriculums_Programme_Of_Study>;
  /** fetch data from the table: "days" */
  days: Array<Days>;
  /** fetch aggregated fields from the table: "days" */
  days_aggregate: Days_Aggregate;
  /** fetch data from the table: "days" using primary key columns */
  days_by_pk?: Maybe<Days>;
  /** fetch data from the table: "field_of_study" */
  field_of_study: Array<Field_Of_Study>;
  /** fetch aggregated fields from the table: "field_of_study" */
  field_of_study_aggregate: Field_Of_Study_Aggregate;
  /** fetch data from the table: "field_of_study" using primary key columns */
  field_of_study_by_pk?: Maybe<Field_Of_Study>;
  /** fetch data from the table: "ingest.asset_ingest" */
  ingest_asset_ingest: Array<Ingest_Asset_Ingest>;
  /** fetch aggregated fields from the table: "ingest.asset_ingest" */
  ingest_asset_ingest_aggregate: Ingest_Asset_Ingest_Aggregate;
  /** fetch data from the table: "ingest.asset_ingest" using primary key columns */
  ingest_asset_ingest_by_pk?: Maybe<Ingest_Asset_Ingest>;
  /** fetch data from the table: "ingest.forms_on_drive" */
  ingest_forms_on_drive: Array<Ingest_Forms_On_Drive>;
  /** fetch aggregated fields from the table: "ingest.forms_on_drive" */
  ingest_forms_on_drive_aggregate: Ingest_Forms_On_Drive_Aggregate;
  /** fetch data from the table: "ingest.forms_on_drive" using primary key columns */
  ingest_forms_on_drive_by_pk?: Maybe<Ingest_Forms_On_Drive>;
  /** fetch data from the table: "ingest.intro_quiz_ingest" */
  ingest_intro_quiz_ingest: Array<Ingest_Intro_Quiz_Ingest>;
  /** fetch aggregated fields from the table: "ingest.intro_quiz_ingest" */
  ingest_intro_quiz_ingest_aggregate: Ingest_Intro_Quiz_Ingest_Aggregate;
  /** fetch data from the table: "ingest.intro_quiz_ingest" using primary key columns */
  ingest_intro_quiz_ingest_by_pk?: Maybe<Ingest_Intro_Quiz_Ingest>;
  /** fetch data from the table: "ingest.lesson_video_ids" */
  ingest_lesson_video_ids: Array<Ingest_Lesson_Video_Ids>;
  /** fetch aggregated fields from the table: "ingest.lesson_video_ids" */
  ingest_lesson_video_ids_aggregate: Ingest_Lesson_Video_Ids_Aggregate;
  /** fetch data from the table: "ingest.lesson_video_ids" using primary key columns */
  ingest_lesson_video_ids_by_pk?: Maybe<Ingest_Lesson_Video_Ids>;
  /** fetch data from the table: "ingest.quiz_ingest" */
  ingest_quiz_ingest: Array<Ingest_Quiz_Ingest>;
  /** fetch aggregated fields from the table: "ingest.quiz_ingest" */
  ingest_quiz_ingest_aggregate: Ingest_Quiz_Ingest_Aggregate;
  /** fetch data from the table: "ingest.quiz_ingest" using primary key columns */
  ingest_quiz_ingest_by_pk?: Maybe<Ingest_Quiz_Ingest>;
  /** fetch data from the table: "ingest.video_ingest" */
  ingest_video_ingest: Array<Ingest_Video_Ingest>;
  /** fetch aggregated fields from the table: "ingest.video_ingest" */
  ingest_video_ingest_aggregate: Ingest_Video_Ingest_Aggregate;
  /** fetch data from the table: "ingest.video_ingest" using primary key columns */
  ingest_video_ingest_by_pk?: Maybe<Ingest_Video_Ingest>;
  /** fetch data from the table: "key_stages" */
  key_stages: Array<Key_Stages>;
  /** fetch aggregated fields from the table: "key_stages" */
  key_stages_aggregate: Key_Stages_Aggregate;
  /** fetch data from the table: "key_stages" using primary key columns */
  key_stages_by_pk?: Maybe<Key_Stages>;
  /** fetch data from the table: "lesson_quizzes" */
  lesson_quizzes: Array<Lesson_Quizzes>;
  /** fetch aggregated fields from the table: "lesson_quizzes" */
  lesson_quizzes_aggregate: Lesson_Quizzes_Aggregate;
  /** fetch data from the table: "lesson_quizzes" using primary key columns */
  lesson_quizzes_by_pk?: Maybe<Lesson_Quizzes>;
  /** fetch data from the table: "lessons" */
  lessons: Array<Lessons>;
  /** fetch aggregated fields from the table: "lessons" */
  lessons_aggregate: Lessons_Aggregate;
  /** fetch data from the table: "lessons" using primary key columns */
  lessons_by_pk?: Maybe<Lessons>;
  /** fetch data from the table: "lessons_expanded" */
  lessons_expanded: Array<Lessons_Expanded>;
  /** fetch aggregated fields from the table: "lessons_expanded" */
  lessons_expanded_aggregate: Lessons_Expanded_Aggregate;
  /** fetch data from the table: "management.asset_reviews" */
  management_asset_reviews: Array<Management_Asset_Reviews>;
  /** fetch aggregated fields from the table: "management.asset_reviews" */
  management_asset_reviews_aggregate: Management_Asset_Reviews_Aggregate;
  /** fetch data from the table: "management.asset_reviews" using primary key columns */
  management_asset_reviews_by_pk?: Maybe<Management_Asset_Reviews>;
  /** fetch data from the table: "management.asset_types" */
  management_asset_types: Array<Management_Asset_Types>;
  /** fetch aggregated fields from the table: "management.asset_types" */
  management_asset_types_aggregate: Management_Asset_Types_Aggregate;
  /** fetch data from the table: "management.asset_types" using primary key columns */
  management_asset_types_by_pk?: Maybe<Management_Asset_Types>;
  /** fetch data from the table: "management.assets" */
  management_assets: Array<Management_Assets>;
  /** fetch aggregated fields from the table: "management.assets" */
  management_assets_aggregate: Management_Assets_Aggregate;
  /** fetch data from the table: "management.assets" using primary key columns */
  management_assets_by_pk?: Maybe<Management_Assets>;
  /** fetch data from the table: "management.lesson_quizzes" */
  management_lesson_quizzes: Array<Management_Lesson_Quizzes>;
  /** fetch aggregated fields from the table: "management.lesson_quizzes" */
  management_lesson_quizzes_aggregate: Management_Lesson_Quizzes_Aggregate;
  /** fetch data from the table: "management.lesson_quizzes" using primary key columns */
  management_lesson_quizzes_by_pk?: Maybe<Management_Lesson_Quizzes>;
  /** fetch data from the table: "management.lesson_reviews" */
  management_lesson_reviews: Array<Management_Lesson_Reviews>;
  /** fetch aggregated fields from the table: "management.lesson_reviews" */
  management_lesson_reviews_aggregate: Management_Lesson_Reviews_Aggregate;
  /** fetch data from the table: "management.lesson_reviews" using primary key columns */
  management_lesson_reviews_by_pk?: Maybe<Management_Lesson_Reviews>;
  /** fetch data from the table: "management.lessons" */
  management_lessons: Array<Management_Lessons>;
  /** fetch aggregated fields from the table: "management.lessons" */
  management_lessons_aggregate: Management_Lessons_Aggregate;
  /** fetch data from the table: "management.lessons" using primary key columns */
  management_lessons_by_pk?: Maybe<Management_Lessons>;
  /** fetch data from the table: "management.questions" */
  management_questions: Array<Management_Questions>;
  /** fetch aggregated fields from the table: "management.questions" */
  management_questions_aggregate: Management_Questions_Aggregate;
  /** fetch data from the table: "management.questions" using primary key columns */
  management_questions_by_pk?: Maybe<Management_Questions>;
  /** fetch data from the table: "management.quiz_questions" */
  management_quiz_questions: Array<Management_Quiz_Questions>;
  /** fetch aggregated fields from the table: "management.quiz_questions" */
  management_quiz_questions_aggregate: Management_Quiz_Questions_Aggregate;
  /** fetch data from the table: "management.quiz_questions" using primary key columns */
  management_quiz_questions_by_pk?: Maybe<Management_Quiz_Questions>;
  /** fetch data from the table: "management.quiz_reviews" */
  management_quiz_reviews: Array<Management_Quiz_Reviews>;
  /** fetch aggregated fields from the table: "management.quiz_reviews" */
  management_quiz_reviews_aggregate: Management_Quiz_Reviews_Aggregate;
  /** fetch data from the table: "management.quiz_reviews" using primary key columns */
  management_quiz_reviews_by_pk?: Maybe<Management_Quiz_Reviews>;
  /** fetch data from the table: "management.quizzes" */
  management_quizzes: Array<Management_Quizzes>;
  /** fetch aggregated fields from the table: "management.quizzes" */
  management_quizzes_aggregate: Management_Quizzes_Aggregate;
  /** fetch data from the table: "management.quizzes" using primary key columns */
  management_quizzes_by_pk?: Maybe<Management_Quizzes>;
  /** fetch data from the table: "management.reviews" */
  management_reviews: Array<Management_Reviews>;
  /** fetch aggregated fields from the table: "management.reviews" */
  management_reviews_aggregate: Management_Reviews_Aggregate;
  /** fetch data from the table: "management.reviews" using primary key columns */
  management_reviews_by_pk?: Maybe<Management_Reviews>;
  /** fetch data from the table: "management.unit_lessons" */
  management_unit_lessons: Array<Management_Unit_Lessons>;
  /** fetch aggregated fields from the table: "management.unit_lessons" */
  management_unit_lessons_aggregate: Management_Unit_Lessons_Aggregate;
  /** fetch data from the table: "management.unit_lessons" using primary key columns */
  management_unit_lessons_by_pk?: Maybe<Management_Unit_Lessons>;
  /** fetch data from the table: "management.video_reviews" */
  management_video_reviews: Array<Management_Video_Reviews>;
  /** fetch aggregated fields from the table: "management.video_reviews" */
  management_video_reviews_aggregate: Management_Video_Reviews_Aggregate;
  /** fetch data from the table: "management.video_reviews" using primary key columns */
  management_video_reviews_by_pk?: Maybe<Management_Video_Reviews>;
  /** fetch data from the table: "management.videos" */
  management_videos: Array<Management_Videos>;
  /** fetch aggregated fields from the table: "management.videos" */
  management_videos_aggregate: Management_Videos_Aggregate;
  /** fetch data from the table: "management.videos" using primary key columns */
  management_videos_by_pk?: Maybe<Management_Videos>;
  /** fetch data from the table: "mv_all_year_groups" */
  mv_all_year_groups: Array<Mv_All_Year_Groups>;
  /** fetch aggregated fields from the table: "mv_all_year_groups" */
  mv_all_year_groups_aggregate: Mv_All_Year_Groups_Aggregate;
  /** fetch data from the table: "mv_downloads" */
  mv_downloads: Array<Mv_Downloads>;
  /** fetch aggregated fields from the table: "mv_downloads" */
  mv_downloads_aggregate: Mv_Downloads_Aggregate;
  /** fetch data from the table: "mv_key_stages" */
  mv_key_stages: Array<Mv_Key_Stages>;
  /** fetch aggregated fields from the table: "mv_key_stages" */
  mv_key_stages_aggregate: Mv_Key_Stages_Aggregate;
  /** fetch data from the table: "mv_learning_themes" */
  mv_learning_themes: Array<Mv_Learning_Themes>;
  /** fetch aggregated fields from the table: "mv_learning_themes" */
  mv_learning_themes_aggregate: Mv_Learning_Themes_Aggregate;
  /** fetch data from the table: "mv_lessons" */
  mv_lessons: Array<Mv_Lessons>;
  /** fetch aggregated fields from the table: "mv_lessons" */
  mv_lessons_aggregate: Mv_Lessons_Aggregate;
  /** fetch data from the table: "mv_questions" */
  mv_questions: Array<Mv_Questions>;
  /** fetch aggregated fields from the table: "mv_questions" */
  mv_questions_aggregate: Mv_Questions_Aggregate;
  /** fetch data from the table: "mv_quizzes" */
  mv_quizzes: Array<Mv_Quizzes>;
  /** fetch aggregated fields from the table: "mv_quizzes" */
  mv_quizzes_aggregate: Mv_Quizzes_Aggregate;
  /** fetch data from the table: "mv_subjects" */
  mv_subjects: Array<Mv_Subjects>;
  /** fetch aggregated fields from the table: "mv_subjects" */
  mv_subjects_aggregate: Mv_Subjects_Aggregate;
  /** fetch data from the table: "mv_tiers" */
  mv_tiers: Array<Mv_Tiers>;
  /** fetch aggregated fields from the table: "mv_tiers" */
  mv_tiers_aggregate: Mv_Tiers_Aggregate;
  /** fetch data from the table: "mv_units" */
  mv_units: Array<Mv_Units>;
  /** fetch aggregated fields from the table: "mv_units" */
  mv_units_aggregate: Mv_Units_Aggregate;
  /** fetch data from the table: "paper_tiers" */
  paper_tiers: Array<Paper_Tiers>;
  /** fetch aggregated fields from the table: "paper_tiers" */
  paper_tiers_aggregate: Paper_Tiers_Aggregate;
  /** fetch data from the table: "paper_tiers" using primary key columns */
  paper_tiers_by_pk?: Maybe<Paper_Tiers>;
  /** fetch data from the table: "phases" */
  phases: Array<Phases>;
  /** fetch aggregated fields from the table: "phases" */
  phases_aggregate: Phases_Aggregate;
  /** fetch data from the table: "phases" using primary key columns */
  phases_by_pk?: Maybe<Phases>;
  /** fetch data from the table: "programme_of_study" */
  programme_of_study: Array<Programme_Of_Study>;
  /** fetch aggregated fields from the table: "programme_of_study" */
  programme_of_study_aggregate: Programme_Of_Study_Aggregate;
  /** fetch data from the table: "programme_of_study" using primary key columns */
  programme_of_study_by_pk?: Maybe<Programme_Of_Study>;
  /** fetch data from the table: "programme_of_study_unit" */
  programme_of_study_unit: Array<Programme_Of_Study_Unit>;
  /** fetch aggregated fields from the table: "programme_of_study_unit" */
  programme_of_study_unit_aggregate: Programme_Of_Study_Unit_Aggregate;
  /** fetch data from the table: "programme_of_study_unit" using primary key columns */
  programme_of_study_unit_by_pk?: Maybe<Programme_Of_Study_Unit>;
  /** fetch data from the table: "questions" */
  questions: Array<Questions>;
  /** fetch aggregated fields from the table: "questions" */
  questions_aggregate: Questions_Aggregate;
  /** fetch data from the table: "questions" using primary key columns */
  questions_by_pk?: Maybe<Questions>;
  /** fetch data from the table: "questions_expanded" */
  questions_expanded: Array<Questions_Expanded>;
  /** fetch aggregated fields from the table: "questions_expanded" */
  questions_expanded_aggregate: Questions_Expanded_Aggregate;
  /** fetch data from the table: "quiz_questions" */
  quiz_questions: Array<Quiz_Questions>;
  /** fetch aggregated fields from the table: "quiz_questions" */
  quiz_questions_aggregate: Quiz_Questions_Aggregate;
  /** fetch data from the table: "quiz_questions_archive" */
  quiz_questions_archive: Array<Quiz_Questions_Archive>;
  /** fetch aggregated fields from the table: "quiz_questions_archive" */
  quiz_questions_archive_aggregate: Quiz_Questions_Archive_Aggregate;
  /** fetch data from the table: "quiz_questions" using primary key columns */
  quiz_questions_by_pk?: Maybe<Quiz_Questions>;
  /** fetch data from the table: "quiz_types" */
  quiz_types: Array<Quiz_Types>;
  /** fetch aggregated fields from the table: "quiz_types" */
  quiz_types_aggregate: Quiz_Types_Aggregate;
  /** fetch data from the table: "quiz_types" using primary key columns */
  quiz_types_by_pk?: Maybe<Quiz_Types>;
  /** fetch data from the table: "quizzes" */
  quizzes: Array<Quizzes>;
  /** fetch aggregated fields from the table: "quizzes" */
  quizzes_aggregate: Quizzes_Aggregate;
  /** fetch data from the table: "quizzes" using primary key columns */
  quizzes_by_pk?: Maybe<Quizzes>;
  /** fetch data from the table: "resource_types" */
  resource_types: Array<Resource_Types>;
  /** fetch aggregated fields from the table: "resource_types" */
  resource_types_aggregate: Resource_Types_Aggregate;
  /** fetch data from the table: "resource_types" using primary key columns */
  resource_types_by_pk?: Maybe<Resource_Types>;
  /** fetch data from the table: "teacher_field_of_studies" */
  teacher_field_of_studies: Array<Teacher_Field_Of_Studies>;
  /** fetch aggregated fields from the table: "teacher_field_of_studies" */
  teacher_field_of_studies_aggregate: Teacher_Field_Of_Studies_Aggregate;
  /** fetch data from the table: "teacher_field_of_studies" using primary key columns */
  teacher_field_of_studies_by_pk?: Maybe<Teacher_Field_Of_Studies>;
  /** fetch data from the table: "teacher_key_stages" */
  teacher_key_stages: Array<Teacher_Key_Stages>;
  /** fetch aggregated fields from the table: "teacher_key_stages" */
  teacher_key_stages_aggregate: Teacher_Key_Stages_Aggregate;
  /** fetch data from the table: "teacher_key_stages" using primary key columns */
  teacher_key_stages_by_pk?: Maybe<Teacher_Key_Stages>;
  /** fetch data from the table: "teacher_phases" */
  teacher_phases: Array<Teacher_Phases>;
  /** fetch aggregated fields from the table: "teacher_phases" */
  teacher_phases_aggregate: Teacher_Phases_Aggregate;
  /** fetch data from the table: "teacher_phases" using primary key columns */
  teacher_phases_by_pk?: Maybe<Teacher_Phases>;
  /** fetch data from the table: "teacher_therapies" */
  teacher_therapies: Array<Teacher_Therapies>;
  /** fetch aggregated fields from the table: "teacher_therapies" */
  teacher_therapies_aggregate: Teacher_Therapies_Aggregate;
  /** fetch data from the table: "teacher_therapies" using primary key columns */
  teacher_therapies_by_pk?: Maybe<Teacher_Therapies>;
  /** fetch data from the table: "teachers" */
  teachers: Array<Teachers>;
  /** fetch aggregated fields from the table: "teachers" */
  teachers_aggregate: Teachers_Aggregate;
  /** fetch data from the table: "teachers" using primary key columns */
  teachers_by_pk?: Maybe<Teachers>;
  /** fetch data from the table: "themes" */
  themes: Array<Themes>;
  /** fetch aggregated fields from the table: "themes" */
  themes_aggregate: Themes_Aggregate;
  /** fetch data from the table: "themes_as_topics" */
  themes_as_topics: Array<Themes_As_Topics>;
  /** fetch aggregated fields from the table: "themes_as_topics" */
  themes_as_topics_aggregate: Themes_As_Topics_Aggregate;
  /** fetch data from the table: "themes" using primary key columns */
  themes_by_pk?: Maybe<Themes>;
  /** fetch data from the table: "therapies" */
  therapies: Array<Therapies>;
  /** fetch aggregated fields from the table: "therapies" */
  therapies_aggregate: Therapies_Aggregate;
  /** fetch data from the table: "therapies" using primary key columns */
  therapies_by_pk?: Maybe<Therapies>;
  /** fetch data from the table: "therapy_units" */
  therapy_units: Array<Therapy_Units>;
  /** fetch aggregated fields from the table: "therapy_units" */
  therapy_units_aggregate: Therapy_Units_Aggregate;
  /** fetch data from the table: "therapy_units" using primary key columns */
  therapy_units_by_pk?: Maybe<Therapy_Units>;
  /** fetch data from the table: "timetabled_lessons" */
  timetabled_lessons: Array<Timetabled_Lessons>;
  /** fetch aggregated fields from the table: "timetabled_lessons" */
  timetabled_lessons_aggregate: Timetabled_Lessons_Aggregate;
  /** fetch data from the table: "timetabled_lessons" using primary key columns */
  timetabled_lessons_by_pk?: Maybe<Timetabled_Lessons>;
  /** fetch data from the table: "timetabled_weeks" */
  timetabled_weeks: Array<Timetabled_Weeks>;
  /** fetch aggregated fields from the table: "timetabled_weeks" */
  timetabled_weeks_aggregate: Timetabled_Weeks_Aggregate;
  /** fetch data from the table: "timetabled_weeks" using primary key columns */
  timetabled_weeks_by_pk?: Maybe<Timetabled_Weeks>;
  /** fetch data from the table: "timetables" */
  timetables: Array<Timetables>;
  /** fetch aggregated fields from the table: "timetables" */
  timetables_aggregate: Timetables_Aggregate;
  /** fetch data from the table: "timetables" using primary key columns */
  timetables_by_pk?: Maybe<Timetables>;
  /** fetch data from the table: "topic_types" */
  topic_types: Array<Topic_Types>;
  /** fetch aggregated fields from the table: "topic_types" */
  topic_types_aggregate: Topic_Types_Aggregate;
  /** fetch data from the table: "units_as_topics" */
  topics: Array<Units_As_Topics>;
  /** fetch data from the table: "unit_lessons" */
  unit_lessons: Array<Unit_Lessons>;
  /** fetch aggregated fields from the table: "unit_lessons" */
  unit_lessons_aggregate: Unit_Lessons_Aggregate;
  /** fetch data from the table: "unit_lessons" using primary key columns */
  unit_lessons_by_pk?: Maybe<Unit_Lessons>;
  /** fetch data from the table: "unit_quizzes" */
  unit_quizzes: Array<Unit_Quizzes>;
  /** fetch aggregated fields from the table: "unit_quizzes" */
  unit_quizzes_aggregate: Unit_Quizzes_Aggregate;
  /** fetch data from the table: "unit_quizzes" using primary key columns */
  unit_quizzes_by_pk?: Maybe<Unit_Quizzes>;
  /** fetch data from the table: "units" */
  units: Array<Units>;
  /** fetch aggregated fields from the table: "units" */
  units_aggregate: Units_Aggregate;
  /** fetch aggregated fields from the table: "units_as_topics" */
  units_as_topics_aggregate: Units_As_Topics_Aggregate;
  /** fetch data from the table: "units" using primary key columns */
  units_by_pk?: Maybe<Units>;
  /** fetch data from the table: "videos" */
  videos: Array<Videos>;
  /** fetch aggregated fields from the table: "videos" */
  videos_aggregate: Videos_Aggregate;
  /** fetch data from the table: "videos" using primary key columns */
  videos_by_pk?: Maybe<Videos>;
  /** fetch data from the table: "vw_latest_updated_at" */
  vw_latest_updated_at: Array<Vw_Latest_Updated_At>;
  /** fetch aggregated fields from the table: "vw_latest_updated_at" */
  vw_latest_updated_at_aggregate: Vw_Latest_Updated_At_Aggregate;
  /** fetch data from the table: "weeks" */
  weeks: Array<Weeks>;
  /** fetch aggregated fields from the table: "weeks" */
  weeks_aggregate: Weeks_Aggregate;
  /** fetch data from the table: "weeks" using primary key columns */
  weeks_by_pk?: Maybe<Weeks>;
  /** fetch data from the table: "years" */
  years: Array<Years>;
  /** fetch aggregated fields from the table: "years" */
  years_aggregate: Years_Aggregate;
  /** fetch data from the table: "years" using primary key columns */
  years_by_pk?: Maybe<Years>;
};


/** subscription root */
export type Subscription_RootAcademic_YearsArgs = {
  distinct_on?: InputMaybe<Array<Academic_Years_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Academic_Years_Order_By>>;
  where?: InputMaybe<Academic_Years_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAcademic_Years_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Academic_Years_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Academic_Years_Order_By>>;
  where?: InputMaybe<Academic_Years_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAcademic_Years_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootAudit_Asset_Ingest_AuditsArgs = {
  distinct_on?: InputMaybe<Array<Audit_Asset_Ingest_Audits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Audit_Asset_Ingest_Audits_Order_By>>;
  where?: InputMaybe<Audit_Asset_Ingest_Audits_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAudit_Asset_Ingest_Audits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Audit_Asset_Ingest_Audits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Audit_Asset_Ingest_Audits_Order_By>>;
  where?: InputMaybe<Audit_Asset_Ingest_Audits_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAudit_Lesson_AuditsArgs = {
  distinct_on?: InputMaybe<Array<Audit_Lesson_Audits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Audit_Lesson_Audits_Order_By>>;
  where?: InputMaybe<Audit_Lesson_Audits_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAudit_Lesson_Audits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Audit_Lesson_Audits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Audit_Lesson_Audits_Order_By>>;
  where?: InputMaybe<Audit_Lesson_Audits_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCaptionsArgs = {
  distinct_on?: InputMaybe<Array<Captions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Captions_Order_By>>;
  where?: InputMaybe<Captions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCaptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Captions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Captions_Order_By>>;
  where?: InputMaybe<Captions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCaptions_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootCohortsArgs = {
  distinct_on?: InputMaybe<Array<Cohorts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Cohorts_Order_By>>;
  where?: InputMaybe<Cohorts_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCohorts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Cohorts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Cohorts_Order_By>>;
  where?: InputMaybe<Cohorts_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCohorts_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootCurriculum_DocumentsArgs = {
  distinct_on?: InputMaybe<Array<Curriculum_Documents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Curriculum_Documents_Order_By>>;
  where?: InputMaybe<Curriculum_Documents_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCurriculum_Documents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Curriculum_Documents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Curriculum_Documents_Order_By>>;
  where?: InputMaybe<Curriculum_Documents_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCurriculum_Documents_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootCurriculumsArgs = {
  distinct_on?: InputMaybe<Array<Curriculums_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Curriculums_Order_By>>;
  where?: InputMaybe<Curriculums_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCurriculums_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Curriculums_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Curriculums_Order_By>>;
  where?: InputMaybe<Curriculums_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCurriculums_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootCurriculums_Programme_Of_StudyArgs = {
  distinct_on?: InputMaybe<Array<Curriculums_Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Curriculums_Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Curriculums_Programme_Of_Study_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCurriculums_Programme_Of_Study_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Curriculums_Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Curriculums_Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Curriculums_Programme_Of_Study_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCurriculums_Programme_Of_Study_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootDaysArgs = {
  distinct_on?: InputMaybe<Array<Days_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Days_Order_By>>;
  where?: InputMaybe<Days_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootDays_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Days_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Days_Order_By>>;
  where?: InputMaybe<Days_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootDays_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootField_Of_StudyArgs = {
  distinct_on?: InputMaybe<Array<Field_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Field_Of_Study_Order_By>>;
  where?: InputMaybe<Field_Of_Study_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootField_Of_Study_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Field_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Field_Of_Study_Order_By>>;
  where?: InputMaybe<Field_Of_Study_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootField_Of_Study_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootIngest_Asset_IngestArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Asset_Ingest_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Asset_Ingest_Order_By>>;
  where?: InputMaybe<Ingest_Asset_Ingest_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootIngest_Asset_Ingest_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Asset_Ingest_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Asset_Ingest_Order_By>>;
  where?: InputMaybe<Ingest_Asset_Ingest_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootIngest_Asset_Ingest_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootIngest_Forms_On_DriveArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Forms_On_Drive_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Forms_On_Drive_Order_By>>;
  where?: InputMaybe<Ingest_Forms_On_Drive_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootIngest_Forms_On_Drive_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Forms_On_Drive_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Forms_On_Drive_Order_By>>;
  where?: InputMaybe<Ingest_Forms_On_Drive_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootIngest_Forms_On_Drive_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootIngest_Intro_Quiz_IngestArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Intro_Quiz_Ingest_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Intro_Quiz_Ingest_Order_By>>;
  where?: InputMaybe<Ingest_Intro_Quiz_Ingest_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootIngest_Intro_Quiz_Ingest_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Intro_Quiz_Ingest_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Intro_Quiz_Ingest_Order_By>>;
  where?: InputMaybe<Ingest_Intro_Quiz_Ingest_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootIngest_Intro_Quiz_Ingest_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootIngest_Lesson_Video_IdsArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Lesson_Video_Ids_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Lesson_Video_Ids_Order_By>>;
  where?: InputMaybe<Ingest_Lesson_Video_Ids_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootIngest_Lesson_Video_Ids_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Lesson_Video_Ids_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Lesson_Video_Ids_Order_By>>;
  where?: InputMaybe<Ingest_Lesson_Video_Ids_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootIngest_Lesson_Video_Ids_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootIngest_Quiz_IngestArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Quiz_Ingest_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Quiz_Ingest_Order_By>>;
  where?: InputMaybe<Ingest_Quiz_Ingest_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootIngest_Quiz_Ingest_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Quiz_Ingest_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Quiz_Ingest_Order_By>>;
  where?: InputMaybe<Ingest_Quiz_Ingest_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootIngest_Quiz_Ingest_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootIngest_Video_IngestArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Video_Ingest_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Video_Ingest_Order_By>>;
  where?: InputMaybe<Ingest_Video_Ingest_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootIngest_Video_Ingest_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ingest_Video_Ingest_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Ingest_Video_Ingest_Order_By>>;
  where?: InputMaybe<Ingest_Video_Ingest_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootIngest_Video_Ingest_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootKey_StagesArgs = {
  distinct_on?: InputMaybe<Array<Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Key_Stages_Order_By>>;
  where?: InputMaybe<Key_Stages_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootKey_Stages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Key_Stages_Order_By>>;
  where?: InputMaybe<Key_Stages_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootKey_Stages_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootLesson_QuizzesArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Quizzes_Order_By>>;
  where?: InputMaybe<Lesson_Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Quizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Quizzes_Order_By>>;
  where?: InputMaybe<Lesson_Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Quizzes_By_PkArgs = {
  lesson_id: Scalars['Int'];
  quiz_id: Scalars['Int'];
  type: Scalars['String'];
  unit_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootLessonsArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Order_By>>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Order_By>>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLessons_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootLessons_ExpandedArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Expanded_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Expanded_Order_By>>;
  where?: InputMaybe<Lessons_Expanded_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLessons_Expanded_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Expanded_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Expanded_Order_By>>;
  where?: InputMaybe<Lessons_Expanded_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Asset_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Asset_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Asset_Reviews_Order_By>>;
  where?: InputMaybe<Management_Asset_Reviews_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Asset_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Asset_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Asset_Reviews_Order_By>>;
  where?: InputMaybe<Management_Asset_Reviews_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Asset_Reviews_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootManagement_Asset_TypesArgs = {
  distinct_on?: InputMaybe<Array<Management_Asset_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Asset_Types_Order_By>>;
  where?: InputMaybe<Management_Asset_Types_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Asset_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Asset_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Asset_Types_Order_By>>;
  where?: InputMaybe<Management_Asset_Types_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Asset_Types_By_PkArgs = {
  type: Scalars['String'];
};


/** subscription root */
export type Subscription_RootManagement_AssetsArgs = {
  distinct_on?: InputMaybe<Array<Management_Assets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Assets_Order_By>>;
  where?: InputMaybe<Management_Assets_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Assets_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Assets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Assets_Order_By>>;
  where?: InputMaybe<Management_Assets_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Assets_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootManagement_Lesson_QuizzesArgs = {
  distinct_on?: InputMaybe<Array<Management_Lesson_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lesson_Quizzes_Order_By>>;
  where?: InputMaybe<Management_Lesson_Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Lesson_Quizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Lesson_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lesson_Quizzes_Order_By>>;
  where?: InputMaybe<Management_Lesson_Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Lesson_Quizzes_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootManagement_Lesson_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Lesson_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lesson_Reviews_Order_By>>;
  where?: InputMaybe<Management_Lesson_Reviews_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Lesson_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Lesson_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lesson_Reviews_Order_By>>;
  where?: InputMaybe<Management_Lesson_Reviews_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Lesson_Reviews_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootManagement_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Management_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lessons_Order_By>>;
  where?: InputMaybe<Management_Lessons_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Lessons_Order_By>>;
  where?: InputMaybe<Management_Lessons_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Lessons_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootManagement_QuestionsArgs = {
  distinct_on?: InputMaybe<Array<Management_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Questions_Order_By>>;
  where?: InputMaybe<Management_Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Questions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Questions_Order_By>>;
  where?: InputMaybe<Management_Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Questions_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootManagement_Quiz_QuestionsArgs = {
  distinct_on?: InputMaybe<Array<Management_Quiz_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quiz_Questions_Order_By>>;
  where?: InputMaybe<Management_Quiz_Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Quiz_Questions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Quiz_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quiz_Questions_Order_By>>;
  where?: InputMaybe<Management_Quiz_Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Quiz_Questions_By_PkArgs = {
  question_id: Scalars['Int'];
  quiz_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootManagement_Quiz_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Quiz_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quiz_Reviews_Order_By>>;
  where?: InputMaybe<Management_Quiz_Reviews_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Quiz_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Quiz_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quiz_Reviews_Order_By>>;
  where?: InputMaybe<Management_Quiz_Reviews_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Quiz_Reviews_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootManagement_QuizzesArgs = {
  distinct_on?: InputMaybe<Array<Management_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quizzes_Order_By>>;
  where?: InputMaybe<Management_Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Quizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Quizzes_Order_By>>;
  where?: InputMaybe<Management_Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Quizzes_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootManagement_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Reviews_Order_By>>;
  where?: InputMaybe<Management_Reviews_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Reviews_Order_By>>;
  where?: InputMaybe<Management_Reviews_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Reviews_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootManagement_Unit_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Management_Unit_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Unit_Lessons_Order_By>>;
  where?: InputMaybe<Management_Unit_Lessons_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Unit_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Unit_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Unit_Lessons_Order_By>>;
  where?: InputMaybe<Management_Unit_Lessons_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Unit_Lessons_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootManagement_Video_ReviewsArgs = {
  distinct_on?: InputMaybe<Array<Management_Video_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Video_Reviews_Order_By>>;
  where?: InputMaybe<Management_Video_Reviews_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Video_Reviews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Video_Reviews_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Video_Reviews_Order_By>>;
  where?: InputMaybe<Management_Video_Reviews_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Video_Reviews_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootManagement_VideosArgs = {
  distinct_on?: InputMaybe<Array<Management_Videos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Videos_Order_By>>;
  where?: InputMaybe<Management_Videos_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Videos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Videos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Videos_Order_By>>;
  where?: InputMaybe<Management_Videos_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootManagement_Videos_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootMv_All_Year_GroupsArgs = {
  distinct_on?: InputMaybe<Array<Mv_All_Year_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_All_Year_Groups_Order_By>>;
  where?: InputMaybe<Mv_All_Year_Groups_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_All_Year_Groups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_All_Year_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_All_Year_Groups_Order_By>>;
  where?: InputMaybe<Mv_All_Year_Groups_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_DownloadsArgs = {
  distinct_on?: InputMaybe<Array<Mv_Downloads_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Downloads_Order_By>>;
  where?: InputMaybe<Mv_Downloads_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_Downloads_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Downloads_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Downloads_Order_By>>;
  where?: InputMaybe<Mv_Downloads_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_Key_StagesArgs = {
  distinct_on?: InputMaybe<Array<Mv_Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Key_Stages_Order_By>>;
  where?: InputMaybe<Mv_Key_Stages_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_Key_Stages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Key_Stages_Order_By>>;
  where?: InputMaybe<Mv_Key_Stages_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_Learning_ThemesArgs = {
  distinct_on?: InputMaybe<Array<Mv_Learning_Themes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Learning_Themes_Order_By>>;
  where?: InputMaybe<Mv_Learning_Themes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_Learning_Themes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Learning_Themes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Learning_Themes_Order_By>>;
  where?: InputMaybe<Mv_Learning_Themes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Mv_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Lessons_Order_By>>;
  where?: InputMaybe<Mv_Lessons_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Lessons_Order_By>>;
  where?: InputMaybe<Mv_Lessons_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_QuestionsArgs = {
  distinct_on?: InputMaybe<Array<Mv_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Questions_Order_By>>;
  where?: InputMaybe<Mv_Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_Questions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Questions_Order_By>>;
  where?: InputMaybe<Mv_Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_QuizzesArgs = {
  distinct_on?: InputMaybe<Array<Mv_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Quizzes_Order_By>>;
  where?: InputMaybe<Mv_Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_Quizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Quizzes_Order_By>>;
  where?: InputMaybe<Mv_Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_SubjectsArgs = {
  distinct_on?: InputMaybe<Array<Mv_Subjects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Subjects_Order_By>>;
  where?: InputMaybe<Mv_Subjects_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_Subjects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Subjects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Subjects_Order_By>>;
  where?: InputMaybe<Mv_Subjects_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_TiersArgs = {
  distinct_on?: InputMaybe<Array<Mv_Tiers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Tiers_Order_By>>;
  where?: InputMaybe<Mv_Tiers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_Tiers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Tiers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Tiers_Order_By>>;
  where?: InputMaybe<Mv_Tiers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_UnitsArgs = {
  distinct_on?: InputMaybe<Array<Mv_Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Units_Order_By>>;
  where?: InputMaybe<Mv_Units_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMv_Units_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Mv_Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Mv_Units_Order_By>>;
  where?: InputMaybe<Mv_Units_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPaper_TiersArgs = {
  distinct_on?: InputMaybe<Array<Paper_Tiers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Paper_Tiers_Order_By>>;
  where?: InputMaybe<Paper_Tiers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPaper_Tiers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Paper_Tiers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Paper_Tiers_Order_By>>;
  where?: InputMaybe<Paper_Tiers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPaper_Tiers_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootPhasesArgs = {
  distinct_on?: InputMaybe<Array<Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Phases_Order_By>>;
  where?: InputMaybe<Phases_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPhases_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Phases_Order_By>>;
  where?: InputMaybe<Phases_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPhases_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootProgramme_Of_StudyArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProgramme_Of_Study_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProgramme_Of_Study_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootProgramme_Of_Study_UnitArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Unit_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Unit_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Unit_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProgramme_Of_Study_Unit_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Unit_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Unit_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Unit_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProgramme_Of_Study_Unit_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootQuestionsArgs = {
  distinct_on?: InputMaybe<Array<Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questions_Order_By>>;
  where?: InputMaybe<Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuestions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questions_Order_By>>;
  where?: InputMaybe<Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuestions_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootQuestions_ExpandedArgs = {
  distinct_on?: InputMaybe<Array<Questions_Expanded_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questions_Expanded_Order_By>>;
  where?: InputMaybe<Questions_Expanded_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuestions_Expanded_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Questions_Expanded_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questions_Expanded_Order_By>>;
  where?: InputMaybe<Questions_Expanded_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuiz_QuestionsArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Questions_Order_By>>;
  where?: InputMaybe<Quiz_Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuiz_Questions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Questions_Order_By>>;
  where?: InputMaybe<Quiz_Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuiz_Questions_ArchiveArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Questions_Archive_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Questions_Archive_Order_By>>;
  where?: InputMaybe<Quiz_Questions_Archive_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuiz_Questions_Archive_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Questions_Archive_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Questions_Archive_Order_By>>;
  where?: InputMaybe<Quiz_Questions_Archive_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuiz_Questions_By_PkArgs = {
  question_id: Scalars['Int'];
  quiz_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootQuiz_TypesArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Types_Order_By>>;
  where?: InputMaybe<Quiz_Types_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuiz_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Types_Order_By>>;
  where?: InputMaybe<Quiz_Types_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuiz_Types_By_PkArgs = {
  title: Scalars['String'];
};


/** subscription root */
export type Subscription_RootQuizzesArgs = {
  distinct_on?: InputMaybe<Array<Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizzes_Order_By>>;
  where?: InputMaybe<Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizzes_Order_By>>;
  where?: InputMaybe<Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuizzes_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootResource_TypesArgs = {
  distinct_on?: InputMaybe<Array<Resource_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Resource_Types_Order_By>>;
  where?: InputMaybe<Resource_Types_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootResource_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Resource_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Resource_Types_Order_By>>;
  where?: InputMaybe<Resource_Types_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootResource_Types_By_PkArgs = {
  title: Scalars['String'];
};


/** subscription root */
export type Subscription_RootTeacher_Field_Of_StudiesArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Field_Of_Studies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Field_Of_Studies_Order_By>>;
  where?: InputMaybe<Teacher_Field_Of_Studies_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeacher_Field_Of_Studies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Field_Of_Studies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Field_Of_Studies_Order_By>>;
  where?: InputMaybe<Teacher_Field_Of_Studies_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeacher_Field_Of_Studies_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootTeacher_Key_StagesArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Key_Stages_Order_By>>;
  where?: InputMaybe<Teacher_Key_Stages_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeacher_Key_Stages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Key_Stages_Order_By>>;
  where?: InputMaybe<Teacher_Key_Stages_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeacher_Key_Stages_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootTeacher_PhasesArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Phases_Order_By>>;
  where?: InputMaybe<Teacher_Phases_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeacher_Phases_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Phases_Order_By>>;
  where?: InputMaybe<Teacher_Phases_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeacher_Phases_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootTeacher_TherapiesArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Therapies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Therapies_Order_By>>;
  where?: InputMaybe<Teacher_Therapies_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeacher_Therapies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Therapies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Therapies_Order_By>>;
  where?: InputMaybe<Teacher_Therapies_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeacher_Therapies_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootTeachersArgs = {
  distinct_on?: InputMaybe<Array<Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teachers_Order_By>>;
  where?: InputMaybe<Teachers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeachers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teachers_Order_By>>;
  where?: InputMaybe<Teachers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeachers_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootThemesArgs = {
  distinct_on?: InputMaybe<Array<Themes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Themes_Order_By>>;
  where?: InputMaybe<Themes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootThemes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Themes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Themes_Order_By>>;
  where?: InputMaybe<Themes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootThemes_As_TopicsArgs = {
  distinct_on?: InputMaybe<Array<Themes_As_Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Themes_As_Topics_Order_By>>;
  where?: InputMaybe<Themes_As_Topics_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootThemes_As_Topics_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Themes_As_Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Themes_As_Topics_Order_By>>;
  where?: InputMaybe<Themes_As_Topics_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootThemes_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootTherapiesArgs = {
  distinct_on?: InputMaybe<Array<Therapies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Therapies_Order_By>>;
  where?: InputMaybe<Therapies_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTherapies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Therapies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Therapies_Order_By>>;
  where?: InputMaybe<Therapies_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTherapies_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootTherapy_UnitsArgs = {
  distinct_on?: InputMaybe<Array<Therapy_Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Therapy_Units_Order_By>>;
  where?: InputMaybe<Therapy_Units_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTherapy_Units_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Therapy_Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Therapy_Units_Order_By>>;
  where?: InputMaybe<Therapy_Units_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTherapy_Units_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootTimetabled_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Lessons_Order_By>>;
  where?: InputMaybe<Timetabled_Lessons_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTimetabled_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Lessons_Order_By>>;
  where?: InputMaybe<Timetabled_Lessons_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTimetabled_Lessons_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootTimetabled_WeeksArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Weeks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Weeks_Order_By>>;
  where?: InputMaybe<Timetabled_Weeks_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTimetabled_Weeks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Weeks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Weeks_Order_By>>;
  where?: InputMaybe<Timetabled_Weeks_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTimetabled_Weeks_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootTimetablesArgs = {
  distinct_on?: InputMaybe<Array<Timetables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetables_Order_By>>;
  where?: InputMaybe<Timetables_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTimetables_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Timetables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetables_Order_By>>;
  where?: InputMaybe<Timetables_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTimetables_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootTopic_TypesArgs = {
  distinct_on?: InputMaybe<Array<Topic_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Topic_Types_Order_By>>;
  where?: InputMaybe<Topic_Types_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTopic_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Topic_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Topic_Types_Order_By>>;
  where?: InputMaybe<Topic_Types_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTopicsArgs = {
  distinct_on?: InputMaybe<Array<Units_As_Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Units_As_Topics_Order_By>>;
  where?: InputMaybe<Units_As_Topics_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUnit_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Unit_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Unit_Lessons_Order_By>>;
  where?: InputMaybe<Unit_Lessons_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUnit_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Unit_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Unit_Lessons_Order_By>>;
  where?: InputMaybe<Unit_Lessons_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUnit_Lessons_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootUnit_QuizzesArgs = {
  distinct_on?: InputMaybe<Array<Unit_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Unit_Quizzes_Order_By>>;
  where?: InputMaybe<Unit_Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUnit_Quizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Unit_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Unit_Quizzes_Order_By>>;
  where?: InputMaybe<Unit_Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUnit_Quizzes_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootUnitsArgs = {
  distinct_on?: InputMaybe<Array<Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Units_Order_By>>;
  where?: InputMaybe<Units_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUnits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Units_Order_By>>;
  where?: InputMaybe<Units_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUnits_As_Topics_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Units_As_Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Units_As_Topics_Order_By>>;
  where?: InputMaybe<Units_As_Topics_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUnits_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootVideosArgs = {
  distinct_on?: InputMaybe<Array<Videos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Videos_Order_By>>;
  where?: InputMaybe<Videos_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootVideos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Videos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Videos_Order_By>>;
  where?: InputMaybe<Videos_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootVideos_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootVw_Latest_Updated_AtArgs = {
  distinct_on?: InputMaybe<Array<Vw_Latest_Updated_At_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Vw_Latest_Updated_At_Order_By>>;
  where?: InputMaybe<Vw_Latest_Updated_At_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootVw_Latest_Updated_At_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Vw_Latest_Updated_At_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Vw_Latest_Updated_At_Order_By>>;
  where?: InputMaybe<Vw_Latest_Updated_At_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootWeeksArgs = {
  distinct_on?: InputMaybe<Array<Weeks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Weeks_Order_By>>;
  where?: InputMaybe<Weeks_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootWeeks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Weeks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Weeks_Order_By>>;
  where?: InputMaybe<Weeks_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootWeeks_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootYearsArgs = {
  distinct_on?: InputMaybe<Array<Years_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Years_Order_By>>;
  where?: InputMaybe<Years_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootYears_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Years_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Years_Order_By>>;
  where?: InputMaybe<Years_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootYears_By_PkArgs = {
  id: Scalars['Int'];
};

/** columns and relationships of "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies = {
  __typename?: 'teacher_field_of_studies';
  created_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  field_of_study: Field_Of_Study;
  field_of_study_id: Scalars['Int'];
  id: Scalars['Int'];
  /** An object relationship */
  teacher: Teachers;
  teacher_id: Scalars['Int'];
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Aggregate = {
  __typename?: 'teacher_field_of_studies_aggregate';
  aggregate?: Maybe<Teacher_Field_Of_Studies_Aggregate_Fields>;
  nodes: Array<Teacher_Field_Of_Studies>;
};

/** aggregate fields of "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Aggregate_Fields = {
  __typename?: 'teacher_field_of_studies_aggregate_fields';
  avg?: Maybe<Teacher_Field_Of_Studies_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Teacher_Field_Of_Studies_Max_Fields>;
  min?: Maybe<Teacher_Field_Of_Studies_Min_Fields>;
  stddev?: Maybe<Teacher_Field_Of_Studies_Stddev_Fields>;
  stddev_pop?: Maybe<Teacher_Field_Of_Studies_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Teacher_Field_Of_Studies_Stddev_Samp_Fields>;
  sum?: Maybe<Teacher_Field_Of_Studies_Sum_Fields>;
  var_pop?: Maybe<Teacher_Field_Of_Studies_Var_Pop_Fields>;
  var_samp?: Maybe<Teacher_Field_Of_Studies_Var_Samp_Fields>;
  variance?: Maybe<Teacher_Field_Of_Studies_Variance_Fields>;
};


/** aggregate fields of "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Teacher_Field_Of_Studies_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Aggregate_Order_By = {
  avg?: InputMaybe<Teacher_Field_Of_Studies_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Teacher_Field_Of_Studies_Max_Order_By>;
  min?: InputMaybe<Teacher_Field_Of_Studies_Min_Order_By>;
  stddev?: InputMaybe<Teacher_Field_Of_Studies_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Teacher_Field_Of_Studies_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Teacher_Field_Of_Studies_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Teacher_Field_Of_Studies_Sum_Order_By>;
  var_pop?: InputMaybe<Teacher_Field_Of_Studies_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Teacher_Field_Of_Studies_Var_Samp_Order_By>;
  variance?: InputMaybe<Teacher_Field_Of_Studies_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Arr_Rel_Insert_Input = {
  data: Array<Teacher_Field_Of_Studies_Insert_Input>;
  on_conflict?: InputMaybe<Teacher_Field_Of_Studies_On_Conflict>;
};

/** aggregate avg on columns */
export type Teacher_Field_Of_Studies_Avg_Fields = {
  __typename?: 'teacher_field_of_studies_avg_fields';
  field_of_study_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Avg_Order_By = {
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "teacher_field_of_studies". All fields are combined with a logical 'AND'. */
export type Teacher_Field_Of_Studies_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Teacher_Field_Of_Studies_Bool_Exp>>>;
  _not?: InputMaybe<Teacher_Field_Of_Studies_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Teacher_Field_Of_Studies_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  field_of_study?: InputMaybe<Field_Of_Study_Bool_Exp>;
  field_of_study_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  teacher?: InputMaybe<Teachers_Bool_Exp>;
  teacher_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "teacher_field_of_studies" */
export enum Teacher_Field_Of_Studies_Constraint {
  /** unique or primary key constraint */
  TeacherFieldOfStudiesIdKey = 'teacher_field_of_studies_id_key',
  /** unique or primary key constraint */
  TeacherFieldOfStudiesPkey = 'teacher_field_of_studies_pkey',
  /** unique or primary key constraint */
  TeachersFieldOfStudiesTeacherIdFieldOfStudyKey = 'teachers_field_of_studies_teacher_id_field_of_study_key'
}

/** input type for incrementing integer column in table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Inc_Input = {
  field_of_study_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  teacher_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  field_of_study?: InputMaybe<Field_Of_Study_Obj_Rel_Insert_Input>;
  field_of_study_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  teacher?: InputMaybe<Teachers_Obj_Rel_Insert_Input>;
  teacher_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Teacher_Field_Of_Studies_Max_Fields = {
  __typename?: 'teacher_field_of_studies_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  field_of_study_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Teacher_Field_Of_Studies_Min_Fields = {
  __typename?: 'teacher_field_of_studies_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  field_of_study_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Mutation_Response = {
  __typename?: 'teacher_field_of_studies_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Teacher_Field_Of_Studies>;
};

/** input type for inserting object relation for remote table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Obj_Rel_Insert_Input = {
  data: Teacher_Field_Of_Studies_Insert_Input;
  on_conflict?: InputMaybe<Teacher_Field_Of_Studies_On_Conflict>;
};

/** on conflict condition type for table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_On_Conflict = {
  constraint: Teacher_Field_Of_Studies_Constraint;
  update_columns: Array<Teacher_Field_Of_Studies_Update_Column>;
  where?: InputMaybe<Teacher_Field_Of_Studies_Bool_Exp>;
};

/** ordering options when selecting data from "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Order_By = {
  created_at?: InputMaybe<Order_By>;
  field_of_study?: InputMaybe<Field_Of_Study_Order_By>;
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher?: InputMaybe<Teachers_Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "teacher_field_of_studies" */
export enum Teacher_Field_Of_Studies_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  FieldOfStudyId = 'field_of_study_id',
  /** column name */
  Id = 'id',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  field_of_study_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  teacher_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Teacher_Field_Of_Studies_Stddev_Fields = {
  __typename?: 'teacher_field_of_studies_stddev_fields';
  field_of_study_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Stddev_Order_By = {
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Teacher_Field_Of_Studies_Stddev_Pop_Fields = {
  __typename?: 'teacher_field_of_studies_stddev_pop_fields';
  field_of_study_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Stddev_Pop_Order_By = {
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Teacher_Field_Of_Studies_Stddev_Samp_Fields = {
  __typename?: 'teacher_field_of_studies_stddev_samp_fields';
  field_of_study_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Stddev_Samp_Order_By = {
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Teacher_Field_Of_Studies_Sum_Fields = {
  __typename?: 'teacher_field_of_studies_sum_fields';
  field_of_study_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Sum_Order_By = {
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** update columns of table "teacher_field_of_studies" */
export enum Teacher_Field_Of_Studies_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  FieldOfStudyId = 'field_of_study_id',
  /** column name */
  Id = 'id',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Teacher_Field_Of_Studies_Var_Pop_Fields = {
  __typename?: 'teacher_field_of_studies_var_pop_fields';
  field_of_study_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Var_Pop_Order_By = {
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Teacher_Field_Of_Studies_Var_Samp_Fields = {
  __typename?: 'teacher_field_of_studies_var_samp_fields';
  field_of_study_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Var_Samp_Order_By = {
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Teacher_Field_Of_Studies_Variance_Fields = {
  __typename?: 'teacher_field_of_studies_variance_fields';
  field_of_study_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "teacher_field_of_studies" */
export type Teacher_Field_Of_Studies_Variance_Order_By = {
  field_of_study_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "teacher_key_stages" */
export type Teacher_Key_Stages = {
  __typename?: 'teacher_key_stages';
  created_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['Int'];
  /** An object relationship */
  key_stage: Key_Stages;
  key_stage_id: Scalars['Int'];
  /** An object relationship */
  teacher: Teachers;
  teacher_id: Scalars['Int'];
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "teacher_key_stages" */
export type Teacher_Key_Stages_Aggregate = {
  __typename?: 'teacher_key_stages_aggregate';
  aggregate?: Maybe<Teacher_Key_Stages_Aggregate_Fields>;
  nodes: Array<Teacher_Key_Stages>;
};

/** aggregate fields of "teacher_key_stages" */
export type Teacher_Key_Stages_Aggregate_Fields = {
  __typename?: 'teacher_key_stages_aggregate_fields';
  avg?: Maybe<Teacher_Key_Stages_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Teacher_Key_Stages_Max_Fields>;
  min?: Maybe<Teacher_Key_Stages_Min_Fields>;
  stddev?: Maybe<Teacher_Key_Stages_Stddev_Fields>;
  stddev_pop?: Maybe<Teacher_Key_Stages_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Teacher_Key_Stages_Stddev_Samp_Fields>;
  sum?: Maybe<Teacher_Key_Stages_Sum_Fields>;
  var_pop?: Maybe<Teacher_Key_Stages_Var_Pop_Fields>;
  var_samp?: Maybe<Teacher_Key_Stages_Var_Samp_Fields>;
  variance?: Maybe<Teacher_Key_Stages_Variance_Fields>;
};


/** aggregate fields of "teacher_key_stages" */
export type Teacher_Key_Stages_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Teacher_Key_Stages_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "teacher_key_stages" */
export type Teacher_Key_Stages_Aggregate_Order_By = {
  avg?: InputMaybe<Teacher_Key_Stages_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Teacher_Key_Stages_Max_Order_By>;
  min?: InputMaybe<Teacher_Key_Stages_Min_Order_By>;
  stddev?: InputMaybe<Teacher_Key_Stages_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Teacher_Key_Stages_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Teacher_Key_Stages_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Teacher_Key_Stages_Sum_Order_By>;
  var_pop?: InputMaybe<Teacher_Key_Stages_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Teacher_Key_Stages_Var_Samp_Order_By>;
  variance?: InputMaybe<Teacher_Key_Stages_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "teacher_key_stages" */
export type Teacher_Key_Stages_Arr_Rel_Insert_Input = {
  data: Array<Teacher_Key_Stages_Insert_Input>;
  on_conflict?: InputMaybe<Teacher_Key_Stages_On_Conflict>;
};

/** aggregate avg on columns */
export type Teacher_Key_Stages_Avg_Fields = {
  __typename?: 'teacher_key_stages_avg_fields';
  id?: Maybe<Scalars['Float']>;
  key_stage_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "teacher_key_stages" */
export type Teacher_Key_Stages_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "teacher_key_stages". All fields are combined with a logical 'AND'. */
export type Teacher_Key_Stages_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Teacher_Key_Stages_Bool_Exp>>>;
  _not?: InputMaybe<Teacher_Key_Stages_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Teacher_Key_Stages_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  key_stage?: InputMaybe<Key_Stages_Bool_Exp>;
  key_stage_id?: InputMaybe<Int_Comparison_Exp>;
  teacher?: InputMaybe<Teachers_Bool_Exp>;
  teacher_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "teacher_key_stages" */
export enum Teacher_Key_Stages_Constraint {
  /** unique or primary key constraint */
  TeacherKeyStagesPkey = 'teacher_key_stages_pkey'
}

/** input type for incrementing integer column in table "teacher_key_stages" */
export type Teacher_Key_Stages_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  key_stage_id?: InputMaybe<Scalars['Int']>;
  teacher_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "teacher_key_stages" */
export type Teacher_Key_Stages_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  key_stage?: InputMaybe<Key_Stages_Obj_Rel_Insert_Input>;
  key_stage_id?: InputMaybe<Scalars['Int']>;
  teacher?: InputMaybe<Teachers_Obj_Rel_Insert_Input>;
  teacher_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Teacher_Key_Stages_Max_Fields = {
  __typename?: 'teacher_key_stages_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  key_stage_id?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "teacher_key_stages" */
export type Teacher_Key_Stages_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Teacher_Key_Stages_Min_Fields = {
  __typename?: 'teacher_key_stages_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  key_stage_id?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "teacher_key_stages" */
export type Teacher_Key_Stages_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "teacher_key_stages" */
export type Teacher_Key_Stages_Mutation_Response = {
  __typename?: 'teacher_key_stages_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Teacher_Key_Stages>;
};

/** input type for inserting object relation for remote table "teacher_key_stages" */
export type Teacher_Key_Stages_Obj_Rel_Insert_Input = {
  data: Teacher_Key_Stages_Insert_Input;
  on_conflict?: InputMaybe<Teacher_Key_Stages_On_Conflict>;
};

/** on conflict condition type for table "teacher_key_stages" */
export type Teacher_Key_Stages_On_Conflict = {
  constraint: Teacher_Key_Stages_Constraint;
  update_columns: Array<Teacher_Key_Stages_Update_Column>;
  where?: InputMaybe<Teacher_Key_Stages_Bool_Exp>;
};

/** ordering options when selecting data from "teacher_key_stages" */
export type Teacher_Key_Stages_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  key_stage?: InputMaybe<Key_Stages_Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  teacher?: InputMaybe<Teachers_Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "teacher_key_stages" */
export type Teacher_Key_Stages_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "teacher_key_stages" */
export enum Teacher_Key_Stages_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  KeyStageId = 'key_stage_id',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "teacher_key_stages" */
export type Teacher_Key_Stages_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  key_stage_id?: InputMaybe<Scalars['Int']>;
  teacher_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Teacher_Key_Stages_Stddev_Fields = {
  __typename?: 'teacher_key_stages_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  key_stage_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "teacher_key_stages" */
export type Teacher_Key_Stages_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Teacher_Key_Stages_Stddev_Pop_Fields = {
  __typename?: 'teacher_key_stages_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  key_stage_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "teacher_key_stages" */
export type Teacher_Key_Stages_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Teacher_Key_Stages_Stddev_Samp_Fields = {
  __typename?: 'teacher_key_stages_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  key_stage_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "teacher_key_stages" */
export type Teacher_Key_Stages_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Teacher_Key_Stages_Sum_Fields = {
  __typename?: 'teacher_key_stages_sum_fields';
  id?: Maybe<Scalars['Int']>;
  key_stage_id?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "teacher_key_stages" */
export type Teacher_Key_Stages_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** update columns of table "teacher_key_stages" */
export enum Teacher_Key_Stages_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  KeyStageId = 'key_stage_id',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Teacher_Key_Stages_Var_Pop_Fields = {
  __typename?: 'teacher_key_stages_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  key_stage_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "teacher_key_stages" */
export type Teacher_Key_Stages_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Teacher_Key_Stages_Var_Samp_Fields = {
  __typename?: 'teacher_key_stages_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  key_stage_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "teacher_key_stages" */
export type Teacher_Key_Stages_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Teacher_Key_Stages_Variance_Fields = {
  __typename?: 'teacher_key_stages_variance_fields';
  id?: Maybe<Scalars['Float']>;
  key_stage_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "teacher_key_stages" */
export type Teacher_Key_Stages_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "teacher_phases" */
export type Teacher_Phases = {
  __typename?: 'teacher_phases';
  created_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['Int'];
  /** An object relationship */
  phase: Phases;
  phase_id: Scalars['Int'];
  /** An object relationship */
  teacher: Teachers;
  teacher_id: Scalars['Int'];
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "teacher_phases" */
export type Teacher_Phases_Aggregate = {
  __typename?: 'teacher_phases_aggregate';
  aggregate?: Maybe<Teacher_Phases_Aggregate_Fields>;
  nodes: Array<Teacher_Phases>;
};

/** aggregate fields of "teacher_phases" */
export type Teacher_Phases_Aggregate_Fields = {
  __typename?: 'teacher_phases_aggregate_fields';
  avg?: Maybe<Teacher_Phases_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Teacher_Phases_Max_Fields>;
  min?: Maybe<Teacher_Phases_Min_Fields>;
  stddev?: Maybe<Teacher_Phases_Stddev_Fields>;
  stddev_pop?: Maybe<Teacher_Phases_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Teacher_Phases_Stddev_Samp_Fields>;
  sum?: Maybe<Teacher_Phases_Sum_Fields>;
  var_pop?: Maybe<Teacher_Phases_Var_Pop_Fields>;
  var_samp?: Maybe<Teacher_Phases_Var_Samp_Fields>;
  variance?: Maybe<Teacher_Phases_Variance_Fields>;
};


/** aggregate fields of "teacher_phases" */
export type Teacher_Phases_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Teacher_Phases_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "teacher_phases" */
export type Teacher_Phases_Aggregate_Order_By = {
  avg?: InputMaybe<Teacher_Phases_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Teacher_Phases_Max_Order_By>;
  min?: InputMaybe<Teacher_Phases_Min_Order_By>;
  stddev?: InputMaybe<Teacher_Phases_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Teacher_Phases_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Teacher_Phases_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Teacher_Phases_Sum_Order_By>;
  var_pop?: InputMaybe<Teacher_Phases_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Teacher_Phases_Var_Samp_Order_By>;
  variance?: InputMaybe<Teacher_Phases_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "teacher_phases" */
export type Teacher_Phases_Arr_Rel_Insert_Input = {
  data: Array<Teacher_Phases_Insert_Input>;
  on_conflict?: InputMaybe<Teacher_Phases_On_Conflict>;
};

/** aggregate avg on columns */
export type Teacher_Phases_Avg_Fields = {
  __typename?: 'teacher_phases_avg_fields';
  id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "teacher_phases" */
export type Teacher_Phases_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "teacher_phases". All fields are combined with a logical 'AND'. */
export type Teacher_Phases_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Teacher_Phases_Bool_Exp>>>;
  _not?: InputMaybe<Teacher_Phases_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Teacher_Phases_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  phase?: InputMaybe<Phases_Bool_Exp>;
  phase_id?: InputMaybe<Int_Comparison_Exp>;
  teacher?: InputMaybe<Teachers_Bool_Exp>;
  teacher_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "teacher_phases" */
export enum Teacher_Phases_Constraint {
  /** unique or primary key constraint */
  PhaseTeachersPkey = 'phase_teachers_pkey',
  /** unique or primary key constraint */
  TeacherPhasesPhaseIdTeacherIdKey = 'teacher_phases_phase_id_teacher_id_key'
}

/** input type for incrementing integer column in table "teacher_phases" */
export type Teacher_Phases_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  phase_id?: InputMaybe<Scalars['Int']>;
  teacher_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "teacher_phases" */
export type Teacher_Phases_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  phase?: InputMaybe<Phases_Obj_Rel_Insert_Input>;
  phase_id?: InputMaybe<Scalars['Int']>;
  teacher?: InputMaybe<Teachers_Obj_Rel_Insert_Input>;
  teacher_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Teacher_Phases_Max_Fields = {
  __typename?: 'teacher_phases_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  phase_id?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "teacher_phases" */
export type Teacher_Phases_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Teacher_Phases_Min_Fields = {
  __typename?: 'teacher_phases_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  phase_id?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "teacher_phases" */
export type Teacher_Phases_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "teacher_phases" */
export type Teacher_Phases_Mutation_Response = {
  __typename?: 'teacher_phases_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Teacher_Phases>;
};

/** input type for inserting object relation for remote table "teacher_phases" */
export type Teacher_Phases_Obj_Rel_Insert_Input = {
  data: Teacher_Phases_Insert_Input;
  on_conflict?: InputMaybe<Teacher_Phases_On_Conflict>;
};

/** on conflict condition type for table "teacher_phases" */
export type Teacher_Phases_On_Conflict = {
  constraint: Teacher_Phases_Constraint;
  update_columns: Array<Teacher_Phases_Update_Column>;
  where?: InputMaybe<Teacher_Phases_Bool_Exp>;
};

/** ordering options when selecting data from "teacher_phases" */
export type Teacher_Phases_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  phase?: InputMaybe<Phases_Order_By>;
  phase_id?: InputMaybe<Order_By>;
  teacher?: InputMaybe<Teachers_Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "teacher_phases" */
export type Teacher_Phases_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "teacher_phases" */
export enum Teacher_Phases_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  PhaseId = 'phase_id',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "teacher_phases" */
export type Teacher_Phases_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  phase_id?: InputMaybe<Scalars['Int']>;
  teacher_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Teacher_Phases_Stddev_Fields = {
  __typename?: 'teacher_phases_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "teacher_phases" */
export type Teacher_Phases_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Teacher_Phases_Stddev_Pop_Fields = {
  __typename?: 'teacher_phases_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "teacher_phases" */
export type Teacher_Phases_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Teacher_Phases_Stddev_Samp_Fields = {
  __typename?: 'teacher_phases_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "teacher_phases" */
export type Teacher_Phases_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Teacher_Phases_Sum_Fields = {
  __typename?: 'teacher_phases_sum_fields';
  id?: Maybe<Scalars['Int']>;
  phase_id?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "teacher_phases" */
export type Teacher_Phases_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** update columns of table "teacher_phases" */
export enum Teacher_Phases_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  PhaseId = 'phase_id',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Teacher_Phases_Var_Pop_Fields = {
  __typename?: 'teacher_phases_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "teacher_phases" */
export type Teacher_Phases_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Teacher_Phases_Var_Samp_Fields = {
  __typename?: 'teacher_phases_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "teacher_phases" */
export type Teacher_Phases_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Teacher_Phases_Variance_Fields = {
  __typename?: 'teacher_phases_variance_fields';
  id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "teacher_phases" */
export type Teacher_Phases_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "teacher_therapies" */
export type Teacher_Therapies = {
  __typename?: 'teacher_therapies';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  /** An object relationship */
  teacher?: Maybe<Teachers>;
  teacher_id: Scalars['Int'];
  /** An object relationship */
  therapy?: Maybe<Therapies>;
  therapy_id: Scalars['uuid'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "teacher_therapies" */
export type Teacher_Therapies_Aggregate = {
  __typename?: 'teacher_therapies_aggregate';
  aggregate?: Maybe<Teacher_Therapies_Aggregate_Fields>;
  nodes: Array<Teacher_Therapies>;
};

/** aggregate fields of "teacher_therapies" */
export type Teacher_Therapies_Aggregate_Fields = {
  __typename?: 'teacher_therapies_aggregate_fields';
  avg?: Maybe<Teacher_Therapies_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Teacher_Therapies_Max_Fields>;
  min?: Maybe<Teacher_Therapies_Min_Fields>;
  stddev?: Maybe<Teacher_Therapies_Stddev_Fields>;
  stddev_pop?: Maybe<Teacher_Therapies_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Teacher_Therapies_Stddev_Samp_Fields>;
  sum?: Maybe<Teacher_Therapies_Sum_Fields>;
  var_pop?: Maybe<Teacher_Therapies_Var_Pop_Fields>;
  var_samp?: Maybe<Teacher_Therapies_Var_Samp_Fields>;
  variance?: Maybe<Teacher_Therapies_Variance_Fields>;
};


/** aggregate fields of "teacher_therapies" */
export type Teacher_Therapies_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Teacher_Therapies_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "teacher_therapies" */
export type Teacher_Therapies_Aggregate_Order_By = {
  avg?: InputMaybe<Teacher_Therapies_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Teacher_Therapies_Max_Order_By>;
  min?: InputMaybe<Teacher_Therapies_Min_Order_By>;
  stddev?: InputMaybe<Teacher_Therapies_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Teacher_Therapies_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Teacher_Therapies_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Teacher_Therapies_Sum_Order_By>;
  var_pop?: InputMaybe<Teacher_Therapies_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Teacher_Therapies_Var_Samp_Order_By>;
  variance?: InputMaybe<Teacher_Therapies_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "teacher_therapies" */
export type Teacher_Therapies_Arr_Rel_Insert_Input = {
  data: Array<Teacher_Therapies_Insert_Input>;
  on_conflict?: InputMaybe<Teacher_Therapies_On_Conflict>;
};

/** aggregate avg on columns */
export type Teacher_Therapies_Avg_Fields = {
  __typename?: 'teacher_therapies_avg_fields';
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "teacher_therapies" */
export type Teacher_Therapies_Avg_Order_By = {
  teacher_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "teacher_therapies". All fields are combined with a logical 'AND'. */
export type Teacher_Therapies_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Teacher_Therapies_Bool_Exp>>>;
  _not?: InputMaybe<Teacher_Therapies_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Teacher_Therapies_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  teacher?: InputMaybe<Teachers_Bool_Exp>;
  teacher_id?: InputMaybe<Int_Comparison_Exp>;
  therapy?: InputMaybe<Therapies_Bool_Exp>;
  therapy_id?: InputMaybe<Uuid_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "teacher_therapies" */
export enum Teacher_Therapies_Constraint {
  /** unique or primary key constraint */
  TeacherTherapiesPkey = 'teacher_therapies_pkey',
  /** unique or primary key constraint */
  TeacherTherapiesTeacherIdTherapyIdKey = 'teacher_therapies_teacher_id_therapy_id_key'
}

/** input type for incrementing integer column in table "teacher_therapies" */
export type Teacher_Therapies_Inc_Input = {
  teacher_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "teacher_therapies" */
export type Teacher_Therapies_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  teacher?: InputMaybe<Teachers_Obj_Rel_Insert_Input>;
  teacher_id?: InputMaybe<Scalars['Int']>;
  therapy?: InputMaybe<Therapies_Obj_Rel_Insert_Input>;
  therapy_id?: InputMaybe<Scalars['uuid']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Teacher_Therapies_Max_Fields = {
  __typename?: 'teacher_therapies_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  teacher_id?: Maybe<Scalars['Int']>;
  therapy_id?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "teacher_therapies" */
export type Teacher_Therapies_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  therapy_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Teacher_Therapies_Min_Fields = {
  __typename?: 'teacher_therapies_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  teacher_id?: Maybe<Scalars['Int']>;
  therapy_id?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "teacher_therapies" */
export type Teacher_Therapies_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  therapy_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "teacher_therapies" */
export type Teacher_Therapies_Mutation_Response = {
  __typename?: 'teacher_therapies_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Teacher_Therapies>;
};

/** input type for inserting object relation for remote table "teacher_therapies" */
export type Teacher_Therapies_Obj_Rel_Insert_Input = {
  data: Teacher_Therapies_Insert_Input;
  on_conflict?: InputMaybe<Teacher_Therapies_On_Conflict>;
};

/** on conflict condition type for table "teacher_therapies" */
export type Teacher_Therapies_On_Conflict = {
  constraint: Teacher_Therapies_Constraint;
  update_columns: Array<Teacher_Therapies_Update_Column>;
  where?: InputMaybe<Teacher_Therapies_Bool_Exp>;
};

/** ordering options when selecting data from "teacher_therapies" */
export type Teacher_Therapies_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  teacher?: InputMaybe<Teachers_Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  therapy?: InputMaybe<Therapies_Order_By>;
  therapy_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "teacher_therapies" */
export type Teacher_Therapies_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "teacher_therapies" */
export enum Teacher_Therapies_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  TherapyId = 'therapy_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "teacher_therapies" */
export type Teacher_Therapies_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  teacher_id?: InputMaybe<Scalars['Int']>;
  therapy_id?: InputMaybe<Scalars['uuid']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Teacher_Therapies_Stddev_Fields = {
  __typename?: 'teacher_therapies_stddev_fields';
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "teacher_therapies" */
export type Teacher_Therapies_Stddev_Order_By = {
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Teacher_Therapies_Stddev_Pop_Fields = {
  __typename?: 'teacher_therapies_stddev_pop_fields';
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "teacher_therapies" */
export type Teacher_Therapies_Stddev_Pop_Order_By = {
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Teacher_Therapies_Stddev_Samp_Fields = {
  __typename?: 'teacher_therapies_stddev_samp_fields';
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "teacher_therapies" */
export type Teacher_Therapies_Stddev_Samp_Order_By = {
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Teacher_Therapies_Sum_Fields = {
  __typename?: 'teacher_therapies_sum_fields';
  teacher_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "teacher_therapies" */
export type Teacher_Therapies_Sum_Order_By = {
  teacher_id?: InputMaybe<Order_By>;
};

/** update columns of table "teacher_therapies" */
export enum Teacher_Therapies_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  TherapyId = 'therapy_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Teacher_Therapies_Var_Pop_Fields = {
  __typename?: 'teacher_therapies_var_pop_fields';
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "teacher_therapies" */
export type Teacher_Therapies_Var_Pop_Order_By = {
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Teacher_Therapies_Var_Samp_Fields = {
  __typename?: 'teacher_therapies_var_samp_fields';
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "teacher_therapies" */
export type Teacher_Therapies_Var_Samp_Order_By = {
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Teacher_Therapies_Variance_Fields = {
  __typename?: 'teacher_therapies_variance_fields';
  teacher_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "teacher_therapies" */
export type Teacher_Therapies_Variance_Order_By = {
  teacher_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "teachers" */
export type Teachers = {
  __typename?: 'teachers';
  avatar_url?: Maybe<Scalars['String']>;
  bio: Scalars['String'];
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  first_name: Scalars['String'];
  id: Scalars['Int'];
  ingest_id: Scalars['String'];
  last_name: Scalars['String'];
  /** An array relationship */
  lessons: Array<Lessons>;
  /** An aggregated array relationship */
  lessons_aggregate: Lessons_Aggregate;
  preferred_name_for_lessons: Scalars['String'];
  preferred_name_for_profile: Scalars['String'];
  slug?: Maybe<Scalars['String']>;
  /** An array relationship */
  teacher_key_stages: Array<Teacher_Key_Stages>;
  /** An aggregated array relationship */
  teacher_key_stages_aggregate: Teacher_Key_Stages_Aggregate;
  /** An array relationship */
  teacher_phases: Array<Teacher_Phases>;
  /** An aggregated array relationship */
  teacher_phases_aggregate: Teacher_Phases_Aggregate;
  /** An array relationship */
  teacher_therapies: Array<Teacher_Therapies>;
  /** An aggregated array relationship */
  teacher_therapies_aggregate: Teacher_Therapies_Aggregate;
  /** An array relationship */
  teachers_field_of_studies: Array<Teacher_Field_Of_Studies>;
  /** An aggregated array relationship */
  teachers_field_of_studies_aggregate: Teacher_Field_Of_Studies_Aggregate;
  title: Scalars['String'];
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "teachers" */
export type TeachersLessonsArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Order_By>>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};


/** columns and relationships of "teachers" */
export type TeachersLessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Order_By>>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};


/** columns and relationships of "teachers" */
export type TeachersTeacher_Key_StagesArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Key_Stages_Order_By>>;
  where?: InputMaybe<Teacher_Key_Stages_Bool_Exp>;
};


/** columns and relationships of "teachers" */
export type TeachersTeacher_Key_Stages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Key_Stages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Key_Stages_Order_By>>;
  where?: InputMaybe<Teacher_Key_Stages_Bool_Exp>;
};


/** columns and relationships of "teachers" */
export type TeachersTeacher_PhasesArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Phases_Order_By>>;
  where?: InputMaybe<Teacher_Phases_Bool_Exp>;
};


/** columns and relationships of "teachers" */
export type TeachersTeacher_Phases_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Phases_Order_By>>;
  where?: InputMaybe<Teacher_Phases_Bool_Exp>;
};


/** columns and relationships of "teachers" */
export type TeachersTeacher_TherapiesArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Therapies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Therapies_Order_By>>;
  where?: InputMaybe<Teacher_Therapies_Bool_Exp>;
};


/** columns and relationships of "teachers" */
export type TeachersTeacher_Therapies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Therapies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Therapies_Order_By>>;
  where?: InputMaybe<Teacher_Therapies_Bool_Exp>;
};


/** columns and relationships of "teachers" */
export type TeachersTeachers_Field_Of_StudiesArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Field_Of_Studies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Field_Of_Studies_Order_By>>;
  where?: InputMaybe<Teacher_Field_Of_Studies_Bool_Exp>;
};


/** columns and relationships of "teachers" */
export type TeachersTeachers_Field_Of_Studies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Field_Of_Studies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Field_Of_Studies_Order_By>>;
  where?: InputMaybe<Teacher_Field_Of_Studies_Bool_Exp>;
};

/** aggregated selection of "teachers" */
export type Teachers_Aggregate = {
  __typename?: 'teachers_aggregate';
  aggregate?: Maybe<Teachers_Aggregate_Fields>;
  nodes: Array<Teachers>;
};

/** aggregate fields of "teachers" */
export type Teachers_Aggregate_Fields = {
  __typename?: 'teachers_aggregate_fields';
  avg?: Maybe<Teachers_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Teachers_Max_Fields>;
  min?: Maybe<Teachers_Min_Fields>;
  stddev?: Maybe<Teachers_Stddev_Fields>;
  stddev_pop?: Maybe<Teachers_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Teachers_Stddev_Samp_Fields>;
  sum?: Maybe<Teachers_Sum_Fields>;
  var_pop?: Maybe<Teachers_Var_Pop_Fields>;
  var_samp?: Maybe<Teachers_Var_Samp_Fields>;
  variance?: Maybe<Teachers_Variance_Fields>;
};


/** aggregate fields of "teachers" */
export type Teachers_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Teachers_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "teachers" */
export type Teachers_Aggregate_Order_By = {
  avg?: InputMaybe<Teachers_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Teachers_Max_Order_By>;
  min?: InputMaybe<Teachers_Min_Order_By>;
  stddev?: InputMaybe<Teachers_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Teachers_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Teachers_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Teachers_Sum_Order_By>;
  var_pop?: InputMaybe<Teachers_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Teachers_Var_Samp_Order_By>;
  variance?: InputMaybe<Teachers_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "teachers" */
export type Teachers_Arr_Rel_Insert_Input = {
  data: Array<Teachers_Insert_Input>;
  on_conflict?: InputMaybe<Teachers_On_Conflict>;
};

/** aggregate avg on columns */
export type Teachers_Avg_Fields = {
  __typename?: 'teachers_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "teachers" */
export type Teachers_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "teachers". All fields are combined with a logical 'AND'. */
export type Teachers_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Teachers_Bool_Exp>>>;
  _not?: InputMaybe<Teachers_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Teachers_Bool_Exp>>>;
  avatar_url?: InputMaybe<String_Comparison_Exp>;
  bio?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  email?: InputMaybe<String_Comparison_Exp>;
  first_name?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  last_name?: InputMaybe<String_Comparison_Exp>;
  lessons?: InputMaybe<Lessons_Bool_Exp>;
  preferred_name_for_lessons?: InputMaybe<String_Comparison_Exp>;
  preferred_name_for_profile?: InputMaybe<String_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  teacher_key_stages?: InputMaybe<Teacher_Key_Stages_Bool_Exp>;
  teacher_phases?: InputMaybe<Teacher_Phases_Bool_Exp>;
  teacher_therapies?: InputMaybe<Teacher_Therapies_Bool_Exp>;
  teachers_field_of_studies?: InputMaybe<Teacher_Field_Of_Studies_Bool_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "teachers" */
export enum Teachers_Constraint {
  /** unique or primary key constraint */
  TeacherPkey = 'teacher_pkey',
  /** unique or primary key constraint */
  TeachersEmailKey = 'teachers_email_key',
  /** unique or primary key constraint */
  TeachersFirstNameLastNameKey = 'teachers_first_name_last_name_key',
  /** unique or primary key constraint */
  TeachersIngestIdKey = 'teachers_ingest_id_key',
  /** unique or primary key constraint */
  TeachersSlugKey = 'teachers_slug_key'
}

/** input type for incrementing integer column in table "teachers" */
export type Teachers_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "teachers" */
export type Teachers_Insert_Input = {
  avatar_url?: InputMaybe<Scalars['String']>;
  bio?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  first_name?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  last_name?: InputMaybe<Scalars['String']>;
  lessons?: InputMaybe<Lessons_Arr_Rel_Insert_Input>;
  preferred_name_for_lessons?: InputMaybe<Scalars['String']>;
  preferred_name_for_profile?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  teacher_key_stages?: InputMaybe<Teacher_Key_Stages_Arr_Rel_Insert_Input>;
  teacher_phases?: InputMaybe<Teacher_Phases_Arr_Rel_Insert_Input>;
  teacher_therapies?: InputMaybe<Teacher_Therapies_Arr_Rel_Insert_Input>;
  teachers_field_of_studies?: InputMaybe<Teacher_Field_Of_Studies_Arr_Rel_Insert_Input>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Teachers_Max_Fields = {
  __typename?: 'teachers_max_fields';
  avatar_url?: Maybe<Scalars['String']>;
  bio?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  first_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  last_name?: Maybe<Scalars['String']>;
  preferred_name_for_lessons?: Maybe<Scalars['String']>;
  preferred_name_for_profile?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "teachers" */
export type Teachers_Max_Order_By = {
  avatar_url?: InputMaybe<Order_By>;
  bio?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  first_name?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  last_name?: InputMaybe<Order_By>;
  preferred_name_for_lessons?: InputMaybe<Order_By>;
  preferred_name_for_profile?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Teachers_Min_Fields = {
  __typename?: 'teachers_min_fields';
  avatar_url?: Maybe<Scalars['String']>;
  bio?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  first_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  last_name?: Maybe<Scalars['String']>;
  preferred_name_for_lessons?: Maybe<Scalars['String']>;
  preferred_name_for_profile?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "teachers" */
export type Teachers_Min_Order_By = {
  avatar_url?: InputMaybe<Order_By>;
  bio?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  first_name?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  last_name?: InputMaybe<Order_By>;
  preferred_name_for_lessons?: InputMaybe<Order_By>;
  preferred_name_for_profile?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "teachers" */
export type Teachers_Mutation_Response = {
  __typename?: 'teachers_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Teachers>;
};

/** input type for inserting object relation for remote table "teachers" */
export type Teachers_Obj_Rel_Insert_Input = {
  data: Teachers_Insert_Input;
  on_conflict?: InputMaybe<Teachers_On_Conflict>;
};

/** on conflict condition type for table "teachers" */
export type Teachers_On_Conflict = {
  constraint: Teachers_Constraint;
  update_columns: Array<Teachers_Update_Column>;
  where?: InputMaybe<Teachers_Bool_Exp>;
};

/** ordering options when selecting data from "teachers" */
export type Teachers_Order_By = {
  avatar_url?: InputMaybe<Order_By>;
  bio?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  first_name?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  last_name?: InputMaybe<Order_By>;
  lessons_aggregate?: InputMaybe<Lessons_Aggregate_Order_By>;
  preferred_name_for_lessons?: InputMaybe<Order_By>;
  preferred_name_for_profile?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  teacher_key_stages_aggregate?: InputMaybe<Teacher_Key_Stages_Aggregate_Order_By>;
  teacher_phases_aggregate?: InputMaybe<Teacher_Phases_Aggregate_Order_By>;
  teacher_therapies_aggregate?: InputMaybe<Teacher_Therapies_Aggregate_Order_By>;
  teachers_field_of_studies_aggregate?: InputMaybe<Teacher_Field_Of_Studies_Aggregate_Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "teachers" */
export type Teachers_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "teachers" */
export enum Teachers_Select_Column {
  /** column name */
  AvatarUrl = 'avatar_url',
  /** column name */
  Bio = 'bio',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Email = 'email',
  /** column name */
  FirstName = 'first_name',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  LastName = 'last_name',
  /** column name */
  PreferredNameForLessons = 'preferred_name_for_lessons',
  /** column name */
  PreferredNameForProfile = 'preferred_name_for_profile',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "teachers" */
export type Teachers_Set_Input = {
  avatar_url?: InputMaybe<Scalars['String']>;
  bio?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  first_name?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  last_name?: InputMaybe<Scalars['String']>;
  preferred_name_for_lessons?: InputMaybe<Scalars['String']>;
  preferred_name_for_profile?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Teachers_Stddev_Fields = {
  __typename?: 'teachers_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "teachers" */
export type Teachers_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Teachers_Stddev_Pop_Fields = {
  __typename?: 'teachers_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "teachers" */
export type Teachers_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Teachers_Stddev_Samp_Fields = {
  __typename?: 'teachers_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "teachers" */
export type Teachers_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Teachers_Sum_Fields = {
  __typename?: 'teachers_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "teachers" */
export type Teachers_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "teachers" */
export enum Teachers_Update_Column {
  /** column name */
  AvatarUrl = 'avatar_url',
  /** column name */
  Bio = 'bio',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Email = 'email',
  /** column name */
  FirstName = 'first_name',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  LastName = 'last_name',
  /** column name */
  PreferredNameForLessons = 'preferred_name_for_lessons',
  /** column name */
  PreferredNameForProfile = 'preferred_name_for_profile',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Teachers_Var_Pop_Fields = {
  __typename?: 'teachers_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "teachers" */
export type Teachers_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Teachers_Var_Samp_Fields = {
  __typename?: 'teachers_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "teachers" */
export type Teachers_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Teachers_Variance_Fields = {
  __typename?: 'teachers_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "teachers" */
export type Teachers_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "themes" */
export type Themes = {
  __typename?: 'themes';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  slug?: Maybe<Scalars['String']>;
  title: Scalars['String'];
  /** An array relationship */
  units: Array<Units>;
  /** An aggregated array relationship */
  units_aggregate: Units_Aggregate;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "themes" */
export type ThemesUnitsArgs = {
  distinct_on?: InputMaybe<Array<Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Units_Order_By>>;
  where?: InputMaybe<Units_Bool_Exp>;
};


/** columns and relationships of "themes" */
export type ThemesUnits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Units_Order_By>>;
  where?: InputMaybe<Units_Bool_Exp>;
};

/** aggregated selection of "themes" */
export type Themes_Aggregate = {
  __typename?: 'themes_aggregate';
  aggregate?: Maybe<Themes_Aggregate_Fields>;
  nodes: Array<Themes>;
};

/** aggregate fields of "themes" */
export type Themes_Aggregate_Fields = {
  __typename?: 'themes_aggregate_fields';
  avg?: Maybe<Themes_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Themes_Max_Fields>;
  min?: Maybe<Themes_Min_Fields>;
  stddev?: Maybe<Themes_Stddev_Fields>;
  stddev_pop?: Maybe<Themes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Themes_Stddev_Samp_Fields>;
  sum?: Maybe<Themes_Sum_Fields>;
  var_pop?: Maybe<Themes_Var_Pop_Fields>;
  var_samp?: Maybe<Themes_Var_Samp_Fields>;
  variance?: Maybe<Themes_Variance_Fields>;
};


/** aggregate fields of "themes" */
export type Themes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Themes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "themes" */
export type Themes_Aggregate_Order_By = {
  avg?: InputMaybe<Themes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Themes_Max_Order_By>;
  min?: InputMaybe<Themes_Min_Order_By>;
  stddev?: InputMaybe<Themes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Themes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Themes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Themes_Sum_Order_By>;
  var_pop?: InputMaybe<Themes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Themes_Var_Samp_Order_By>;
  variance?: InputMaybe<Themes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "themes" */
export type Themes_Arr_Rel_Insert_Input = {
  data: Array<Themes_Insert_Input>;
  on_conflict?: InputMaybe<Themes_On_Conflict>;
};

/** columns and relationships of "themes_as_topics" */
export type Themes_As_Topics = {
  __typename?: 'themes_as_topics';
  id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  /** An object relationship */
  topic_type?: Maybe<Topic_Types>;
  /** An array relationship */
  topics: Array<Units_As_Topics>;
  /** An aggregated array relationship */
  topics_aggregate: Units_As_Topics_Aggregate;
  type?: Maybe<Scalars['String']>;
};


/** columns and relationships of "themes_as_topics" */
export type Themes_As_TopicsTopicsArgs = {
  distinct_on?: InputMaybe<Array<Units_As_Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Units_As_Topics_Order_By>>;
  where?: InputMaybe<Units_As_Topics_Bool_Exp>;
};


/** columns and relationships of "themes_as_topics" */
export type Themes_As_TopicsTopics_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Units_As_Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Units_As_Topics_Order_By>>;
  where?: InputMaybe<Units_As_Topics_Bool_Exp>;
};

/** aggregated selection of "themes_as_topics" */
export type Themes_As_Topics_Aggregate = {
  __typename?: 'themes_as_topics_aggregate';
  aggregate?: Maybe<Themes_As_Topics_Aggregate_Fields>;
  nodes: Array<Themes_As_Topics>;
};

/** aggregate fields of "themes_as_topics" */
export type Themes_As_Topics_Aggregate_Fields = {
  __typename?: 'themes_as_topics_aggregate_fields';
  avg?: Maybe<Themes_As_Topics_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Themes_As_Topics_Max_Fields>;
  min?: Maybe<Themes_As_Topics_Min_Fields>;
  stddev?: Maybe<Themes_As_Topics_Stddev_Fields>;
  stddev_pop?: Maybe<Themes_As_Topics_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Themes_As_Topics_Stddev_Samp_Fields>;
  sum?: Maybe<Themes_As_Topics_Sum_Fields>;
  var_pop?: Maybe<Themes_As_Topics_Var_Pop_Fields>;
  var_samp?: Maybe<Themes_As_Topics_Var_Samp_Fields>;
  variance?: Maybe<Themes_As_Topics_Variance_Fields>;
};


/** aggregate fields of "themes_as_topics" */
export type Themes_As_Topics_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Themes_As_Topics_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "themes_as_topics" */
export type Themes_As_Topics_Aggregate_Order_By = {
  avg?: InputMaybe<Themes_As_Topics_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Themes_As_Topics_Max_Order_By>;
  min?: InputMaybe<Themes_As_Topics_Min_Order_By>;
  stddev?: InputMaybe<Themes_As_Topics_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Themes_As_Topics_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Themes_As_Topics_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Themes_As_Topics_Sum_Order_By>;
  var_pop?: InputMaybe<Themes_As_Topics_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Themes_As_Topics_Var_Samp_Order_By>;
  variance?: InputMaybe<Themes_As_Topics_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "themes_as_topics" */
export type Themes_As_Topics_Arr_Rel_Insert_Input = {
  data: Array<Themes_As_Topics_Insert_Input>;
};

/** aggregate avg on columns */
export type Themes_As_Topics_Avg_Fields = {
  __typename?: 'themes_as_topics_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "themes_as_topics" */
export type Themes_As_Topics_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "themes_as_topics". All fields are combined with a logical 'AND'. */
export type Themes_As_Topics_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Themes_As_Topics_Bool_Exp>>>;
  _not?: InputMaybe<Themes_As_Topics_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Themes_As_Topics_Bool_Exp>>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  topic_type?: InputMaybe<Topic_Types_Bool_Exp>;
  topics?: InputMaybe<Units_As_Topics_Bool_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
};

/** input type for incrementing integer column in table "themes_as_topics" */
export type Themes_As_Topics_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "themes_as_topics" */
export type Themes_As_Topics_Insert_Input = {
  id?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  topics?: InputMaybe<Units_As_Topics_Arr_Rel_Insert_Input>;
  type?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Themes_As_Topics_Max_Fields = {
  __typename?: 'themes_as_topics_max_fields';
  id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "themes_as_topics" */
export type Themes_As_Topics_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Themes_As_Topics_Min_Fields = {
  __typename?: 'themes_as_topics_min_fields';
  id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "themes_as_topics" */
export type Themes_As_Topics_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "themes_as_topics" */
export type Themes_As_Topics_Mutation_Response = {
  __typename?: 'themes_as_topics_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Themes_As_Topics>;
};

/** input type for inserting object relation for remote table "themes_as_topics" */
export type Themes_As_Topics_Obj_Rel_Insert_Input = {
  data: Themes_As_Topics_Insert_Input;
};

/** ordering options when selecting data from "themes_as_topics" */
export type Themes_As_Topics_Order_By = {
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  topic_type?: InputMaybe<Topic_Types_Order_By>;
  topics_aggregate?: InputMaybe<Units_As_Topics_Aggregate_Order_By>;
  type?: InputMaybe<Order_By>;
};

/** select columns of table "themes_as_topics" */
export enum Themes_As_Topics_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  Type = 'type'
}

/** input type for updating data in table "themes_as_topics" */
export type Themes_As_Topics_Set_Input = {
  id?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Themes_As_Topics_Stddev_Fields = {
  __typename?: 'themes_as_topics_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "themes_as_topics" */
export type Themes_As_Topics_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Themes_As_Topics_Stddev_Pop_Fields = {
  __typename?: 'themes_as_topics_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "themes_as_topics" */
export type Themes_As_Topics_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Themes_As_Topics_Stddev_Samp_Fields = {
  __typename?: 'themes_as_topics_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "themes_as_topics" */
export type Themes_As_Topics_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Themes_As_Topics_Sum_Fields = {
  __typename?: 'themes_as_topics_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "themes_as_topics" */
export type Themes_As_Topics_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Themes_As_Topics_Var_Pop_Fields = {
  __typename?: 'themes_as_topics_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "themes_as_topics" */
export type Themes_As_Topics_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Themes_As_Topics_Var_Samp_Fields = {
  __typename?: 'themes_as_topics_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "themes_as_topics" */
export type Themes_As_Topics_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Themes_As_Topics_Variance_Fields = {
  __typename?: 'themes_as_topics_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "themes_as_topics" */
export type Themes_As_Topics_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate avg on columns */
export type Themes_Avg_Fields = {
  __typename?: 'themes_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "themes" */
export type Themes_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "themes". All fields are combined with a logical 'AND'. */
export type Themes_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Themes_Bool_Exp>>>;
  _not?: InputMaybe<Themes_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Themes_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  units?: InputMaybe<Units_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "themes" */
export enum Themes_Constraint {
  /** unique or primary key constraint */
  ThemesPkey = 'themes_pkey',
  /** unique or primary key constraint */
  ThemesSlugKey = 'themes_slug_key',
  /** unique or primary key constraint */
  ThemesTitleKey = 'themes_title_key'
}

/** input type for incrementing integer column in table "themes" */
export type Themes_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "themes" */
export type Themes_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  units?: InputMaybe<Units_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Themes_Max_Fields = {
  __typename?: 'themes_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "themes" */
export type Themes_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Themes_Min_Fields = {
  __typename?: 'themes_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "themes" */
export type Themes_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "themes" */
export type Themes_Mutation_Response = {
  __typename?: 'themes_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Themes>;
};

/** input type for inserting object relation for remote table "themes" */
export type Themes_Obj_Rel_Insert_Input = {
  data: Themes_Insert_Input;
  on_conflict?: InputMaybe<Themes_On_Conflict>;
};

/** on conflict condition type for table "themes" */
export type Themes_On_Conflict = {
  constraint: Themes_Constraint;
  update_columns: Array<Themes_Update_Column>;
  where?: InputMaybe<Themes_Bool_Exp>;
};

/** ordering options when selecting data from "themes" */
export type Themes_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  units_aggregate?: InputMaybe<Units_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "themes" */
export type Themes_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "themes" */
export enum Themes_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "themes" */
export type Themes_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Themes_Stddev_Fields = {
  __typename?: 'themes_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "themes" */
export type Themes_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Themes_Stddev_Pop_Fields = {
  __typename?: 'themes_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "themes" */
export type Themes_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Themes_Stddev_Samp_Fields = {
  __typename?: 'themes_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "themes" */
export type Themes_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Themes_Sum_Fields = {
  __typename?: 'themes_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "themes" */
export type Themes_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "themes" */
export enum Themes_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Themes_Var_Pop_Fields = {
  __typename?: 'themes_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "themes" */
export type Themes_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Themes_Var_Samp_Fields = {
  __typename?: 'themes_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "themes" */
export type Themes_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Themes_Variance_Fields = {
  __typename?: 'themes_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "themes" */
export type Themes_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "therapies" */
export type Therapies = {
  __typename?: 'therapies';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  ingest_id: Scalars['String'];
  /** An object relationship */
  intro_video?: Maybe<Videos>;
  intro_video_id?: Maybe<Scalars['uuid']>;
  slug: Scalars['String'];
  /** An array relationship */
  teacher_therapies: Array<Teacher_Therapies>;
  /** An aggregated array relationship */
  teacher_therapies_aggregate: Teacher_Therapies_Aggregate;
  /** An array relationship */
  therapy_units: Array<Therapy_Units>;
  /** An aggregated array relationship */
  therapy_units_aggregate: Therapy_Units_Aggregate;
  title: Scalars['String'];
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "therapies" */
export type TherapiesTeacher_TherapiesArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Therapies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Therapies_Order_By>>;
  where?: InputMaybe<Teacher_Therapies_Bool_Exp>;
};


/** columns and relationships of "therapies" */
export type TherapiesTeacher_Therapies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_Therapies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_Therapies_Order_By>>;
  where?: InputMaybe<Teacher_Therapies_Bool_Exp>;
};


/** columns and relationships of "therapies" */
export type TherapiesTherapy_UnitsArgs = {
  distinct_on?: InputMaybe<Array<Therapy_Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Therapy_Units_Order_By>>;
  where?: InputMaybe<Therapy_Units_Bool_Exp>;
};


/** columns and relationships of "therapies" */
export type TherapiesTherapy_Units_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Therapy_Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Therapy_Units_Order_By>>;
  where?: InputMaybe<Therapy_Units_Bool_Exp>;
};

/** aggregated selection of "therapies" */
export type Therapies_Aggregate = {
  __typename?: 'therapies_aggregate';
  aggregate?: Maybe<Therapies_Aggregate_Fields>;
  nodes: Array<Therapies>;
};

/** aggregate fields of "therapies" */
export type Therapies_Aggregate_Fields = {
  __typename?: 'therapies_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Therapies_Max_Fields>;
  min?: Maybe<Therapies_Min_Fields>;
};


/** aggregate fields of "therapies" */
export type Therapies_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Therapies_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "therapies" */
export type Therapies_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Therapies_Max_Order_By>;
  min?: InputMaybe<Therapies_Min_Order_By>;
};

/** input type for inserting array relation for remote table "therapies" */
export type Therapies_Arr_Rel_Insert_Input = {
  data: Array<Therapies_Insert_Input>;
  on_conflict?: InputMaybe<Therapies_On_Conflict>;
};

/** Boolean expression to filter rows from the table "therapies". All fields are combined with a logical 'AND'. */
export type Therapies_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Therapies_Bool_Exp>>>;
  _not?: InputMaybe<Therapies_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Therapies_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  intro_video?: InputMaybe<Videos_Bool_Exp>;
  intro_video_id?: InputMaybe<Uuid_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  teacher_therapies?: InputMaybe<Teacher_Therapies_Bool_Exp>;
  therapy_units?: InputMaybe<Therapy_Units_Bool_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "therapies" */
export enum Therapies_Constraint {
  /** unique or primary key constraint */
  TherapiesIngestIdKey = 'therapies_ingest_id_key',
  /** unique or primary key constraint */
  TherapiesPkey = 'therapies_pkey',
  /** unique or primary key constraint */
  TherapiesSlugKey = 'therapies_slug_key'
}

/** input type for inserting data into table "therapies" */
export type Therapies_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  intro_video?: InputMaybe<Videos_Obj_Rel_Insert_Input>;
  intro_video_id?: InputMaybe<Scalars['uuid']>;
  slug?: InputMaybe<Scalars['String']>;
  teacher_therapies?: InputMaybe<Teacher_Therapies_Arr_Rel_Insert_Input>;
  therapy_units?: InputMaybe<Therapy_Units_Arr_Rel_Insert_Input>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Therapies_Max_Fields = {
  __typename?: 'therapies_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  ingest_id?: Maybe<Scalars['String']>;
  intro_video_id?: Maybe<Scalars['uuid']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "therapies" */
export type Therapies_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  intro_video_id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Therapies_Min_Fields = {
  __typename?: 'therapies_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  ingest_id?: Maybe<Scalars['String']>;
  intro_video_id?: Maybe<Scalars['uuid']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "therapies" */
export type Therapies_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  intro_video_id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "therapies" */
export type Therapies_Mutation_Response = {
  __typename?: 'therapies_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Therapies>;
};

/** input type for inserting object relation for remote table "therapies" */
export type Therapies_Obj_Rel_Insert_Input = {
  data: Therapies_Insert_Input;
  on_conflict?: InputMaybe<Therapies_On_Conflict>;
};

/** on conflict condition type for table "therapies" */
export type Therapies_On_Conflict = {
  constraint: Therapies_Constraint;
  update_columns: Array<Therapies_Update_Column>;
  where?: InputMaybe<Therapies_Bool_Exp>;
};

/** ordering options when selecting data from "therapies" */
export type Therapies_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  intro_video?: InputMaybe<Videos_Order_By>;
  intro_video_id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  teacher_therapies_aggregate?: InputMaybe<Teacher_Therapies_Aggregate_Order_By>;
  therapy_units_aggregate?: InputMaybe<Therapy_Units_Aggregate_Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "therapies" */
export type Therapies_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "therapies" */
export enum Therapies_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  IntroVideoId = 'intro_video_id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "therapies" */
export type Therapies_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  intro_video_id?: InputMaybe<Scalars['uuid']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "therapies" */
export enum Therapies_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  IntroVideoId = 'intro_video_id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "therapy_units" */
export type Therapy_Units = {
  __typename?: 'therapy_units';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  ingest_id?: Maybe<Scalars['String']>;
  /** An object relationship */
  therapy: Therapies;
  therapy_id: Scalars['uuid'];
  therapy_order: Scalars['Int'];
  /** An object relationship */
  unit: Units;
  unit_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "therapy_units" */
export type Therapy_Units_Aggregate = {
  __typename?: 'therapy_units_aggregate';
  aggregate?: Maybe<Therapy_Units_Aggregate_Fields>;
  nodes: Array<Therapy_Units>;
};

/** aggregate fields of "therapy_units" */
export type Therapy_Units_Aggregate_Fields = {
  __typename?: 'therapy_units_aggregate_fields';
  avg?: Maybe<Therapy_Units_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Therapy_Units_Max_Fields>;
  min?: Maybe<Therapy_Units_Min_Fields>;
  stddev?: Maybe<Therapy_Units_Stddev_Fields>;
  stddev_pop?: Maybe<Therapy_Units_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Therapy_Units_Stddev_Samp_Fields>;
  sum?: Maybe<Therapy_Units_Sum_Fields>;
  var_pop?: Maybe<Therapy_Units_Var_Pop_Fields>;
  var_samp?: Maybe<Therapy_Units_Var_Samp_Fields>;
  variance?: Maybe<Therapy_Units_Variance_Fields>;
};


/** aggregate fields of "therapy_units" */
export type Therapy_Units_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Therapy_Units_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "therapy_units" */
export type Therapy_Units_Aggregate_Order_By = {
  avg?: InputMaybe<Therapy_Units_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Therapy_Units_Max_Order_By>;
  min?: InputMaybe<Therapy_Units_Min_Order_By>;
  stddev?: InputMaybe<Therapy_Units_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Therapy_Units_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Therapy_Units_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Therapy_Units_Sum_Order_By>;
  var_pop?: InputMaybe<Therapy_Units_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Therapy_Units_Var_Samp_Order_By>;
  variance?: InputMaybe<Therapy_Units_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "therapy_units" */
export type Therapy_Units_Arr_Rel_Insert_Input = {
  data: Array<Therapy_Units_Insert_Input>;
  on_conflict?: InputMaybe<Therapy_Units_On_Conflict>;
};

/** aggregate avg on columns */
export type Therapy_Units_Avg_Fields = {
  __typename?: 'therapy_units_avg_fields';
  therapy_order?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "therapy_units" */
export type Therapy_Units_Avg_Order_By = {
  therapy_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "therapy_units". All fields are combined with a logical 'AND'. */
export type Therapy_Units_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Therapy_Units_Bool_Exp>>>;
  _not?: InputMaybe<Therapy_Units_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Therapy_Units_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  therapy?: InputMaybe<Therapies_Bool_Exp>;
  therapy_id?: InputMaybe<Uuid_Comparison_Exp>;
  therapy_order?: InputMaybe<Int_Comparison_Exp>;
  unit?: InputMaybe<Units_Bool_Exp>;
  unit_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "therapy_units" */
export enum Therapy_Units_Constraint {
  /** unique or primary key constraint */
  TherapyUnitsIngestIdKey = 'therapy_units_ingest_id_key',
  /** unique or primary key constraint */
  TherapyUnitsPkey = 'therapy_units_pkey',
  /** unique or primary key constraint */
  TherapyUnitsTherapyIdUnitIdKey = 'therapy_units_therapy_id_unit_id_key'
}

/** input type for incrementing integer column in table "therapy_units" */
export type Therapy_Units_Inc_Input = {
  therapy_order?: InputMaybe<Scalars['Int']>;
  unit_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "therapy_units" */
export type Therapy_Units_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  therapy?: InputMaybe<Therapies_Obj_Rel_Insert_Input>;
  therapy_id?: InputMaybe<Scalars['uuid']>;
  therapy_order?: InputMaybe<Scalars['Int']>;
  unit?: InputMaybe<Units_Obj_Rel_Insert_Input>;
  unit_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Therapy_Units_Max_Fields = {
  __typename?: 'therapy_units_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  ingest_id?: Maybe<Scalars['String']>;
  therapy_id?: Maybe<Scalars['uuid']>;
  therapy_order?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "therapy_units" */
export type Therapy_Units_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  therapy_id?: InputMaybe<Order_By>;
  therapy_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Therapy_Units_Min_Fields = {
  __typename?: 'therapy_units_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  ingest_id?: Maybe<Scalars['String']>;
  therapy_id?: Maybe<Scalars['uuid']>;
  therapy_order?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "therapy_units" */
export type Therapy_Units_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  therapy_id?: InputMaybe<Order_By>;
  therapy_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "therapy_units" */
export type Therapy_Units_Mutation_Response = {
  __typename?: 'therapy_units_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Therapy_Units>;
};

/** input type for inserting object relation for remote table "therapy_units" */
export type Therapy_Units_Obj_Rel_Insert_Input = {
  data: Therapy_Units_Insert_Input;
  on_conflict?: InputMaybe<Therapy_Units_On_Conflict>;
};

/** on conflict condition type for table "therapy_units" */
export type Therapy_Units_On_Conflict = {
  constraint: Therapy_Units_Constraint;
  update_columns: Array<Therapy_Units_Update_Column>;
  where?: InputMaybe<Therapy_Units_Bool_Exp>;
};

/** ordering options when selecting data from "therapy_units" */
export type Therapy_Units_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  therapy?: InputMaybe<Therapies_Order_By>;
  therapy_id?: InputMaybe<Order_By>;
  therapy_order?: InputMaybe<Order_By>;
  unit?: InputMaybe<Units_Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "therapy_units" */
export type Therapy_Units_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "therapy_units" */
export enum Therapy_Units_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  TherapyId = 'therapy_id',
  /** column name */
  TherapyOrder = 'therapy_order',
  /** column name */
  UnitId = 'unit_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "therapy_units" */
export type Therapy_Units_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  therapy_id?: InputMaybe<Scalars['uuid']>;
  therapy_order?: InputMaybe<Scalars['Int']>;
  unit_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Therapy_Units_Stddev_Fields = {
  __typename?: 'therapy_units_stddev_fields';
  therapy_order?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "therapy_units" */
export type Therapy_Units_Stddev_Order_By = {
  therapy_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Therapy_Units_Stddev_Pop_Fields = {
  __typename?: 'therapy_units_stddev_pop_fields';
  therapy_order?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "therapy_units" */
export type Therapy_Units_Stddev_Pop_Order_By = {
  therapy_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Therapy_Units_Stddev_Samp_Fields = {
  __typename?: 'therapy_units_stddev_samp_fields';
  therapy_order?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "therapy_units" */
export type Therapy_Units_Stddev_Samp_Order_By = {
  therapy_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Therapy_Units_Sum_Fields = {
  __typename?: 'therapy_units_sum_fields';
  therapy_order?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "therapy_units" */
export type Therapy_Units_Sum_Order_By = {
  therapy_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** update columns of table "therapy_units" */
export enum Therapy_Units_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  TherapyId = 'therapy_id',
  /** column name */
  TherapyOrder = 'therapy_order',
  /** column name */
  UnitId = 'unit_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Therapy_Units_Var_Pop_Fields = {
  __typename?: 'therapy_units_var_pop_fields';
  therapy_order?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "therapy_units" */
export type Therapy_Units_Var_Pop_Order_By = {
  therapy_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Therapy_Units_Var_Samp_Fields = {
  __typename?: 'therapy_units_var_samp_fields';
  therapy_order?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "therapy_units" */
export type Therapy_Units_Var_Samp_Order_By = {
  therapy_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Therapy_Units_Variance_Fields = {
  __typename?: 'therapy_units_variance_fields';
  therapy_order?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "therapy_units" */
export type Therapy_Units_Variance_Order_By = {
  therapy_order?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** expression to compare columns of type timestamptz. All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamptz']>;
  _gt?: InputMaybe<Scalars['timestamptz']>;
  _gte?: InputMaybe<Scalars['timestamptz']>;
  _in?: InputMaybe<Array<Scalars['timestamptz']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['timestamptz']>;
  _lte?: InputMaybe<Scalars['timestamptz']>;
  _neq?: InputMaybe<Scalars['timestamptz']>;
  _nin?: InputMaybe<Array<Scalars['timestamptz']>>;
};

/** columns and relationships of "timetabled_lessons" */
export type Timetabled_Lessons = {
  __typename?: 'timetabled_lessons';
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  day: Days;
  day_id: Scalars['uuid'];
  id: Scalars['uuid'];
  /** An object relationship */
  lesson: Lessons;
  lesson_id: Scalars['Int'];
  order_on_day?: Maybe<Scalars['Int']>;
  /** An object relationship */
  programme_of_study: Programme_Of_Study;
  programme_of_study_id: Scalars['Int'];
  /** An object relationship */
  timetable: Timetables;
  timetable_id: Scalars['uuid'];
  /** An object relationship */
  timetabled_week?: Maybe<Timetabled_Weeks>;
  timetabled_week_id: Scalars['uuid'];
  /** An object relationship */
  unit: Units;
  unit_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "timetabled_lessons" */
export type Timetabled_Lessons_Aggregate = {
  __typename?: 'timetabled_lessons_aggregate';
  aggregate?: Maybe<Timetabled_Lessons_Aggregate_Fields>;
  nodes: Array<Timetabled_Lessons>;
};

/** aggregate fields of "timetabled_lessons" */
export type Timetabled_Lessons_Aggregate_Fields = {
  __typename?: 'timetabled_lessons_aggregate_fields';
  avg?: Maybe<Timetabled_Lessons_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Timetabled_Lessons_Max_Fields>;
  min?: Maybe<Timetabled_Lessons_Min_Fields>;
  stddev?: Maybe<Timetabled_Lessons_Stddev_Fields>;
  stddev_pop?: Maybe<Timetabled_Lessons_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Timetabled_Lessons_Stddev_Samp_Fields>;
  sum?: Maybe<Timetabled_Lessons_Sum_Fields>;
  var_pop?: Maybe<Timetabled_Lessons_Var_Pop_Fields>;
  var_samp?: Maybe<Timetabled_Lessons_Var_Samp_Fields>;
  variance?: Maybe<Timetabled_Lessons_Variance_Fields>;
};


/** aggregate fields of "timetabled_lessons" */
export type Timetabled_Lessons_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Timetabled_Lessons_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "timetabled_lessons" */
export type Timetabled_Lessons_Aggregate_Order_By = {
  avg?: InputMaybe<Timetabled_Lessons_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Timetabled_Lessons_Max_Order_By>;
  min?: InputMaybe<Timetabled_Lessons_Min_Order_By>;
  stddev?: InputMaybe<Timetabled_Lessons_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Timetabled_Lessons_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Timetabled_Lessons_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Timetabled_Lessons_Sum_Order_By>;
  var_pop?: InputMaybe<Timetabled_Lessons_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Timetabled_Lessons_Var_Samp_Order_By>;
  variance?: InputMaybe<Timetabled_Lessons_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "timetabled_lessons" */
export type Timetabled_Lessons_Arr_Rel_Insert_Input = {
  data: Array<Timetabled_Lessons_Insert_Input>;
  on_conflict?: InputMaybe<Timetabled_Lessons_On_Conflict>;
};

/** aggregate avg on columns */
export type Timetabled_Lessons_Avg_Fields = {
  __typename?: 'timetabled_lessons_avg_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  order_on_day?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "timetabled_lessons" */
export type Timetabled_Lessons_Avg_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  order_on_day?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "timetabled_lessons". All fields are combined with a logical 'AND'. */
export type Timetabled_Lessons_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Timetabled_Lessons_Bool_Exp>>>;
  _not?: InputMaybe<Timetabled_Lessons_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Timetabled_Lessons_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  day?: InputMaybe<Days_Bool_Exp>;
  day_id?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  lesson?: InputMaybe<Lessons_Bool_Exp>;
  lesson_id?: InputMaybe<Int_Comparison_Exp>;
  order_on_day?: InputMaybe<Int_Comparison_Exp>;
  programme_of_study?: InputMaybe<Programme_Of_Study_Bool_Exp>;
  programme_of_study_id?: InputMaybe<Int_Comparison_Exp>;
  timetable?: InputMaybe<Timetables_Bool_Exp>;
  timetable_id?: InputMaybe<Uuid_Comparison_Exp>;
  timetabled_week?: InputMaybe<Timetabled_Weeks_Bool_Exp>;
  timetabled_week_id?: InputMaybe<Uuid_Comparison_Exp>;
  unit?: InputMaybe<Units_Bool_Exp>;
  unit_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "timetabled_lessons" */
export enum Timetabled_Lessons_Constraint {
  /** unique or primary key constraint */
  TimetabledLessonsPkey = 'timetabled_lessons_pkey'
}

/** input type for incrementing integer column in table "timetabled_lessons" */
export type Timetabled_Lessons_Inc_Input = {
  lesson_id?: InputMaybe<Scalars['Int']>;
  order_on_day?: InputMaybe<Scalars['Int']>;
  programme_of_study_id?: InputMaybe<Scalars['Int']>;
  unit_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "timetabled_lessons" */
export type Timetabled_Lessons_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  day?: InputMaybe<Days_Obj_Rel_Insert_Input>;
  day_id?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  lesson?: InputMaybe<Lessons_Obj_Rel_Insert_Input>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  order_on_day?: InputMaybe<Scalars['Int']>;
  programme_of_study?: InputMaybe<Programme_Of_Study_Obj_Rel_Insert_Input>;
  programme_of_study_id?: InputMaybe<Scalars['Int']>;
  timetable?: InputMaybe<Timetables_Obj_Rel_Insert_Input>;
  timetable_id?: InputMaybe<Scalars['uuid']>;
  timetabled_week?: InputMaybe<Timetabled_Weeks_Obj_Rel_Insert_Input>;
  timetabled_week_id?: InputMaybe<Scalars['uuid']>;
  unit?: InputMaybe<Units_Obj_Rel_Insert_Input>;
  unit_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Timetabled_Lessons_Max_Fields = {
  __typename?: 'timetabled_lessons_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  day_id?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  lesson_id?: Maybe<Scalars['Int']>;
  order_on_day?: Maybe<Scalars['Int']>;
  programme_of_study_id?: Maybe<Scalars['Int']>;
  timetable_id?: Maybe<Scalars['uuid']>;
  timetabled_week_id?: Maybe<Scalars['uuid']>;
  unit_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "timetabled_lessons" */
export type Timetabled_Lessons_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  day_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  order_on_day?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  timetable_id?: InputMaybe<Order_By>;
  timetabled_week_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Timetabled_Lessons_Min_Fields = {
  __typename?: 'timetabled_lessons_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  day_id?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  lesson_id?: Maybe<Scalars['Int']>;
  order_on_day?: Maybe<Scalars['Int']>;
  programme_of_study_id?: Maybe<Scalars['Int']>;
  timetable_id?: Maybe<Scalars['uuid']>;
  timetabled_week_id?: Maybe<Scalars['uuid']>;
  unit_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "timetabled_lessons" */
export type Timetabled_Lessons_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  day_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  order_on_day?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  timetable_id?: InputMaybe<Order_By>;
  timetabled_week_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "timetabled_lessons" */
export type Timetabled_Lessons_Mutation_Response = {
  __typename?: 'timetabled_lessons_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Timetabled_Lessons>;
};

/** input type for inserting object relation for remote table "timetabled_lessons" */
export type Timetabled_Lessons_Obj_Rel_Insert_Input = {
  data: Timetabled_Lessons_Insert_Input;
  on_conflict?: InputMaybe<Timetabled_Lessons_On_Conflict>;
};

/** on conflict condition type for table "timetabled_lessons" */
export type Timetabled_Lessons_On_Conflict = {
  constraint: Timetabled_Lessons_Constraint;
  update_columns: Array<Timetabled_Lessons_Update_Column>;
  where?: InputMaybe<Timetabled_Lessons_Bool_Exp>;
};

/** ordering options when selecting data from "timetabled_lessons" */
export type Timetabled_Lessons_Order_By = {
  created_at?: InputMaybe<Order_By>;
  day?: InputMaybe<Days_Order_By>;
  day_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lesson?: InputMaybe<Lessons_Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  order_on_day?: InputMaybe<Order_By>;
  programme_of_study?: InputMaybe<Programme_Of_Study_Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  timetable?: InputMaybe<Timetables_Order_By>;
  timetable_id?: InputMaybe<Order_By>;
  timetabled_week?: InputMaybe<Timetabled_Weeks_Order_By>;
  timetabled_week_id?: InputMaybe<Order_By>;
  unit?: InputMaybe<Units_Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "timetabled_lessons" */
export type Timetabled_Lessons_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "timetabled_lessons" */
export enum Timetabled_Lessons_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DayId = 'day_id',
  /** column name */
  Id = 'id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  OrderOnDay = 'order_on_day',
  /** column name */
  ProgrammeOfStudyId = 'programme_of_study_id',
  /** column name */
  TimetableId = 'timetable_id',
  /** column name */
  TimetabledWeekId = 'timetabled_week_id',
  /** column name */
  UnitId = 'unit_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "timetabled_lessons" */
export type Timetabled_Lessons_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  day_id?: InputMaybe<Scalars['uuid']>;
  id?: InputMaybe<Scalars['uuid']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  order_on_day?: InputMaybe<Scalars['Int']>;
  programme_of_study_id?: InputMaybe<Scalars['Int']>;
  timetable_id?: InputMaybe<Scalars['uuid']>;
  timetabled_week_id?: InputMaybe<Scalars['uuid']>;
  unit_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Timetabled_Lessons_Stddev_Fields = {
  __typename?: 'timetabled_lessons_stddev_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  order_on_day?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "timetabled_lessons" */
export type Timetabled_Lessons_Stddev_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  order_on_day?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Timetabled_Lessons_Stddev_Pop_Fields = {
  __typename?: 'timetabled_lessons_stddev_pop_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  order_on_day?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "timetabled_lessons" */
export type Timetabled_Lessons_Stddev_Pop_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  order_on_day?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Timetabled_Lessons_Stddev_Samp_Fields = {
  __typename?: 'timetabled_lessons_stddev_samp_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  order_on_day?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "timetabled_lessons" */
export type Timetabled_Lessons_Stddev_Samp_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  order_on_day?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Timetabled_Lessons_Sum_Fields = {
  __typename?: 'timetabled_lessons_sum_fields';
  lesson_id?: Maybe<Scalars['Int']>;
  order_on_day?: Maybe<Scalars['Int']>;
  programme_of_study_id?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "timetabled_lessons" */
export type Timetabled_Lessons_Sum_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  order_on_day?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** update columns of table "timetabled_lessons" */
export enum Timetabled_Lessons_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DayId = 'day_id',
  /** column name */
  Id = 'id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  OrderOnDay = 'order_on_day',
  /** column name */
  ProgrammeOfStudyId = 'programme_of_study_id',
  /** column name */
  TimetableId = 'timetable_id',
  /** column name */
  TimetabledWeekId = 'timetabled_week_id',
  /** column name */
  UnitId = 'unit_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Timetabled_Lessons_Var_Pop_Fields = {
  __typename?: 'timetabled_lessons_var_pop_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  order_on_day?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "timetabled_lessons" */
export type Timetabled_Lessons_Var_Pop_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  order_on_day?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Timetabled_Lessons_Var_Samp_Fields = {
  __typename?: 'timetabled_lessons_var_samp_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  order_on_day?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "timetabled_lessons" */
export type Timetabled_Lessons_Var_Samp_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  order_on_day?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Timetabled_Lessons_Variance_Fields = {
  __typename?: 'timetabled_lessons_variance_fields';
  lesson_id?: Maybe<Scalars['Float']>;
  order_on_day?: Maybe<Scalars['Float']>;
  programme_of_study_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "timetabled_lessons" */
export type Timetabled_Lessons_Variance_Order_By = {
  lesson_id?: InputMaybe<Order_By>;
  order_on_day?: InputMaybe<Order_By>;
  programme_of_study_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "timetabled_weeks" */
export type Timetabled_Weeks = {
  __typename?: 'timetabled_weeks';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  slug?: Maybe<Scalars['String']>;
  /** An object relationship */
  timetable: Timetables;
  timetable_id: Scalars['uuid'];
  timetable_week_number: Scalars['Int'];
  /** An array relationship */
  timetabled_lessons: Array<Timetabled_Lessons>;
  /** An aggregated array relationship */
  timetabled_lessons_aggregate: Timetabled_Lessons_Aggregate;
  title: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  week: Weeks;
  week_id: Scalars['uuid'];
};


/** columns and relationships of "timetabled_weeks" */
export type Timetabled_WeeksTimetabled_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Lessons_Order_By>>;
  where?: InputMaybe<Timetabled_Lessons_Bool_Exp>;
};


/** columns and relationships of "timetabled_weeks" */
export type Timetabled_WeeksTimetabled_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Lessons_Order_By>>;
  where?: InputMaybe<Timetabled_Lessons_Bool_Exp>;
};

/** aggregated selection of "timetabled_weeks" */
export type Timetabled_Weeks_Aggregate = {
  __typename?: 'timetabled_weeks_aggregate';
  aggregate?: Maybe<Timetabled_Weeks_Aggregate_Fields>;
  nodes: Array<Timetabled_Weeks>;
};

/** aggregate fields of "timetabled_weeks" */
export type Timetabled_Weeks_Aggregate_Fields = {
  __typename?: 'timetabled_weeks_aggregate_fields';
  avg?: Maybe<Timetabled_Weeks_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Timetabled_Weeks_Max_Fields>;
  min?: Maybe<Timetabled_Weeks_Min_Fields>;
  stddev?: Maybe<Timetabled_Weeks_Stddev_Fields>;
  stddev_pop?: Maybe<Timetabled_Weeks_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Timetabled_Weeks_Stddev_Samp_Fields>;
  sum?: Maybe<Timetabled_Weeks_Sum_Fields>;
  var_pop?: Maybe<Timetabled_Weeks_Var_Pop_Fields>;
  var_samp?: Maybe<Timetabled_Weeks_Var_Samp_Fields>;
  variance?: Maybe<Timetabled_Weeks_Variance_Fields>;
};


/** aggregate fields of "timetabled_weeks" */
export type Timetabled_Weeks_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Timetabled_Weeks_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "timetabled_weeks" */
export type Timetabled_Weeks_Aggregate_Order_By = {
  avg?: InputMaybe<Timetabled_Weeks_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Timetabled_Weeks_Max_Order_By>;
  min?: InputMaybe<Timetabled_Weeks_Min_Order_By>;
  stddev?: InputMaybe<Timetabled_Weeks_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Timetabled_Weeks_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Timetabled_Weeks_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Timetabled_Weeks_Sum_Order_By>;
  var_pop?: InputMaybe<Timetabled_Weeks_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Timetabled_Weeks_Var_Samp_Order_By>;
  variance?: InputMaybe<Timetabled_Weeks_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "timetabled_weeks" */
export type Timetabled_Weeks_Arr_Rel_Insert_Input = {
  data: Array<Timetabled_Weeks_Insert_Input>;
  on_conflict?: InputMaybe<Timetabled_Weeks_On_Conflict>;
};

/** aggregate avg on columns */
export type Timetabled_Weeks_Avg_Fields = {
  __typename?: 'timetabled_weeks_avg_fields';
  timetable_week_number?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "timetabled_weeks" */
export type Timetabled_Weeks_Avg_Order_By = {
  timetable_week_number?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "timetabled_weeks". All fields are combined with a logical 'AND'. */
export type Timetabled_Weeks_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Timetabled_Weeks_Bool_Exp>>>;
  _not?: InputMaybe<Timetabled_Weeks_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Timetabled_Weeks_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  timetable?: InputMaybe<Timetables_Bool_Exp>;
  timetable_id?: InputMaybe<Uuid_Comparison_Exp>;
  timetable_week_number?: InputMaybe<Int_Comparison_Exp>;
  timetabled_lessons?: InputMaybe<Timetabled_Lessons_Bool_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  week?: InputMaybe<Weeks_Bool_Exp>;
  week_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "timetabled_weeks" */
export enum Timetabled_Weeks_Constraint {
  /** unique or primary key constraint */
  TimetabledWeeksPkey = 'timetabled_weeks_pkey',
  /** unique or primary key constraint */
  TimetabledWeeksSlugKey = 'timetabled_weeks_slug_key',
  /** unique or primary key constraint */
  TimetabledWeeksTimetableIdWeekIdKey = 'timetabled_weeks_timetable_id_week_id_key'
}

/** input type for incrementing integer column in table "timetabled_weeks" */
export type Timetabled_Weeks_Inc_Input = {
  timetable_week_number?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "timetabled_weeks" */
export type Timetabled_Weeks_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  slug?: InputMaybe<Scalars['String']>;
  timetable?: InputMaybe<Timetables_Obj_Rel_Insert_Input>;
  timetable_id?: InputMaybe<Scalars['uuid']>;
  timetable_week_number?: InputMaybe<Scalars['Int']>;
  timetabled_lessons?: InputMaybe<Timetabled_Lessons_Arr_Rel_Insert_Input>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  week?: InputMaybe<Weeks_Obj_Rel_Insert_Input>;
  week_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Timetabled_Weeks_Max_Fields = {
  __typename?: 'timetabled_weeks_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  slug?: Maybe<Scalars['String']>;
  timetable_id?: Maybe<Scalars['uuid']>;
  timetable_week_number?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "timetabled_weeks" */
export type Timetabled_Weeks_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  timetable_id?: InputMaybe<Order_By>;
  timetable_week_number?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  week_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Timetabled_Weeks_Min_Fields = {
  __typename?: 'timetabled_weeks_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  slug?: Maybe<Scalars['String']>;
  timetable_id?: Maybe<Scalars['uuid']>;
  timetable_week_number?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "timetabled_weeks" */
export type Timetabled_Weeks_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  timetable_id?: InputMaybe<Order_By>;
  timetable_week_number?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  week_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "timetabled_weeks" */
export type Timetabled_Weeks_Mutation_Response = {
  __typename?: 'timetabled_weeks_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Timetabled_Weeks>;
};

/** input type for inserting object relation for remote table "timetabled_weeks" */
export type Timetabled_Weeks_Obj_Rel_Insert_Input = {
  data: Timetabled_Weeks_Insert_Input;
  on_conflict?: InputMaybe<Timetabled_Weeks_On_Conflict>;
};

/** on conflict condition type for table "timetabled_weeks" */
export type Timetabled_Weeks_On_Conflict = {
  constraint: Timetabled_Weeks_Constraint;
  update_columns: Array<Timetabled_Weeks_Update_Column>;
  where?: InputMaybe<Timetabled_Weeks_Bool_Exp>;
};

/** ordering options when selecting data from "timetabled_weeks" */
export type Timetabled_Weeks_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  timetable?: InputMaybe<Timetables_Order_By>;
  timetable_id?: InputMaybe<Order_By>;
  timetable_week_number?: InputMaybe<Order_By>;
  timetabled_lessons_aggregate?: InputMaybe<Timetabled_Lessons_Aggregate_Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  week?: InputMaybe<Weeks_Order_By>;
  week_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "timetabled_weeks" */
export type Timetabled_Weeks_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "timetabled_weeks" */
export enum Timetabled_Weeks_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  TimetableId = 'timetable_id',
  /** column name */
  TimetableWeekNumber = 'timetable_week_number',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  WeekId = 'week_id'
}

/** input type for updating data in table "timetabled_weeks" */
export type Timetabled_Weeks_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  slug?: InputMaybe<Scalars['String']>;
  timetable_id?: InputMaybe<Scalars['uuid']>;
  timetable_week_number?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  week_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Timetabled_Weeks_Stddev_Fields = {
  __typename?: 'timetabled_weeks_stddev_fields';
  timetable_week_number?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "timetabled_weeks" */
export type Timetabled_Weeks_Stddev_Order_By = {
  timetable_week_number?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Timetabled_Weeks_Stddev_Pop_Fields = {
  __typename?: 'timetabled_weeks_stddev_pop_fields';
  timetable_week_number?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "timetabled_weeks" */
export type Timetabled_Weeks_Stddev_Pop_Order_By = {
  timetable_week_number?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Timetabled_Weeks_Stddev_Samp_Fields = {
  __typename?: 'timetabled_weeks_stddev_samp_fields';
  timetable_week_number?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "timetabled_weeks" */
export type Timetabled_Weeks_Stddev_Samp_Order_By = {
  timetable_week_number?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Timetabled_Weeks_Sum_Fields = {
  __typename?: 'timetabled_weeks_sum_fields';
  timetable_week_number?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "timetabled_weeks" */
export type Timetabled_Weeks_Sum_Order_By = {
  timetable_week_number?: InputMaybe<Order_By>;
};

/** update columns of table "timetabled_weeks" */
export enum Timetabled_Weeks_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  TimetableId = 'timetable_id',
  /** column name */
  TimetableWeekNumber = 'timetable_week_number',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  WeekId = 'week_id'
}

/** aggregate var_pop on columns */
export type Timetabled_Weeks_Var_Pop_Fields = {
  __typename?: 'timetabled_weeks_var_pop_fields';
  timetable_week_number?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "timetabled_weeks" */
export type Timetabled_Weeks_Var_Pop_Order_By = {
  timetable_week_number?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Timetabled_Weeks_Var_Samp_Fields = {
  __typename?: 'timetabled_weeks_var_samp_fields';
  timetable_week_number?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "timetabled_weeks" */
export type Timetabled_Weeks_Var_Samp_Order_By = {
  timetable_week_number?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Timetabled_Weeks_Variance_Fields = {
  __typename?: 'timetabled_weeks_variance_fields';
  timetable_week_number?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "timetabled_weeks" */
export type Timetabled_Weeks_Variance_Order_By = {
  timetable_week_number?: InputMaybe<Order_By>;
};

/** columns and relationships of "timetables" */
export type Timetables = {
  __typename?: 'timetables';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  slug: Scalars['String'];
  /** An array relationship */
  timetabled_lessons: Array<Timetabled_Lessons>;
  /** An aggregated array relationship */
  timetabled_lessons_aggregate: Timetabled_Lessons_Aggregate;
  /** An array relationship */
  timetabled_weeks: Array<Timetabled_Weeks>;
  /** An aggregated array relationship */
  timetabled_weeks_aggregate: Timetabled_Weeks_Aggregate;
  title: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "timetables" */
export type TimetablesTimetabled_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Lessons_Order_By>>;
  where?: InputMaybe<Timetabled_Lessons_Bool_Exp>;
};


/** columns and relationships of "timetables" */
export type TimetablesTimetabled_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Lessons_Order_By>>;
  where?: InputMaybe<Timetabled_Lessons_Bool_Exp>;
};


/** columns and relationships of "timetables" */
export type TimetablesTimetabled_WeeksArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Weeks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Weeks_Order_By>>;
  where?: InputMaybe<Timetabled_Weeks_Bool_Exp>;
};


/** columns and relationships of "timetables" */
export type TimetablesTimetabled_Weeks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Weeks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Weeks_Order_By>>;
  where?: InputMaybe<Timetabled_Weeks_Bool_Exp>;
};

/** aggregated selection of "timetables" */
export type Timetables_Aggregate = {
  __typename?: 'timetables_aggregate';
  aggregate?: Maybe<Timetables_Aggregate_Fields>;
  nodes: Array<Timetables>;
};

/** aggregate fields of "timetables" */
export type Timetables_Aggregate_Fields = {
  __typename?: 'timetables_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Timetables_Max_Fields>;
  min?: Maybe<Timetables_Min_Fields>;
};


/** aggregate fields of "timetables" */
export type Timetables_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Timetables_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "timetables" */
export type Timetables_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Timetables_Max_Order_By>;
  min?: InputMaybe<Timetables_Min_Order_By>;
};

/** input type for inserting array relation for remote table "timetables" */
export type Timetables_Arr_Rel_Insert_Input = {
  data: Array<Timetables_Insert_Input>;
  on_conflict?: InputMaybe<Timetables_On_Conflict>;
};

/** Boolean expression to filter rows from the table "timetables". All fields are combined with a logical 'AND'. */
export type Timetables_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Timetables_Bool_Exp>>>;
  _not?: InputMaybe<Timetables_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Timetables_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  timetabled_lessons?: InputMaybe<Timetabled_Lessons_Bool_Exp>;
  timetabled_weeks?: InputMaybe<Timetabled_Weeks_Bool_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "timetables" */
export enum Timetables_Constraint {
  /** unique or primary key constraint */
  TimetablesPkey = 'timetables_pkey',
  /** unique or primary key constraint */
  TimetablesSlugKey = 'timetables_slug_key'
}

/** input type for inserting data into table "timetables" */
export type Timetables_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  slug?: InputMaybe<Scalars['String']>;
  timetabled_lessons?: InputMaybe<Timetabled_Lessons_Arr_Rel_Insert_Input>;
  timetabled_weeks?: InputMaybe<Timetabled_Weeks_Arr_Rel_Insert_Input>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Timetables_Max_Fields = {
  __typename?: 'timetables_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "timetables" */
export type Timetables_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Timetables_Min_Fields = {
  __typename?: 'timetables_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "timetables" */
export type Timetables_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "timetables" */
export type Timetables_Mutation_Response = {
  __typename?: 'timetables_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Timetables>;
};

/** input type for inserting object relation for remote table "timetables" */
export type Timetables_Obj_Rel_Insert_Input = {
  data: Timetables_Insert_Input;
  on_conflict?: InputMaybe<Timetables_On_Conflict>;
};

/** on conflict condition type for table "timetables" */
export type Timetables_On_Conflict = {
  constraint: Timetables_Constraint;
  update_columns: Array<Timetables_Update_Column>;
  where?: InputMaybe<Timetables_Bool_Exp>;
};

/** ordering options when selecting data from "timetables" */
export type Timetables_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  timetabled_lessons_aggregate?: InputMaybe<Timetabled_Lessons_Aggregate_Order_By>;
  timetabled_weeks_aggregate?: InputMaybe<Timetabled_Weeks_Aggregate_Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "timetables" */
export type Timetables_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "timetables" */
export enum Timetables_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "timetables" */
export type Timetables_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "timetables" */
export enum Timetables_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "topic_types" */
export type Topic_Types = {
  __typename?: 'topic_types';
  title?: Maybe<Scalars['String']>;
};

/** aggregated selection of "topic_types" */
export type Topic_Types_Aggregate = {
  __typename?: 'topic_types_aggregate';
  aggregate?: Maybe<Topic_Types_Aggregate_Fields>;
  nodes: Array<Topic_Types>;
};

/** aggregate fields of "topic_types" */
export type Topic_Types_Aggregate_Fields = {
  __typename?: 'topic_types_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Topic_Types_Max_Fields>;
  min?: Maybe<Topic_Types_Min_Fields>;
};


/** aggregate fields of "topic_types" */
export type Topic_Types_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Topic_Types_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "topic_types" */
export type Topic_Types_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Topic_Types_Max_Order_By>;
  min?: InputMaybe<Topic_Types_Min_Order_By>;
};

/** Boolean expression to filter rows from the table "topic_types". All fields are combined with a logical 'AND'. */
export type Topic_Types_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Topic_Types_Bool_Exp>>>;
  _not?: InputMaybe<Topic_Types_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Topic_Types_Bool_Exp>>>;
  title?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Topic_Types_Max_Fields = {
  __typename?: 'topic_types_max_fields';
  title?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "topic_types" */
export type Topic_Types_Max_Order_By = {
  title?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Topic_Types_Min_Fields = {
  __typename?: 'topic_types_min_fields';
  title?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "topic_types" */
export type Topic_Types_Min_Order_By = {
  title?: InputMaybe<Order_By>;
};

/** ordering options when selecting data from "topic_types" */
export type Topic_Types_Order_By = {
  title?: InputMaybe<Order_By>;
};

/** select columns of table "topic_types" */
export enum Topic_Types_Select_Column {
  /** column name */
  Title = 'title'
}

/** columns and relationships of "unit_lessons" */
export type Unit_Lessons = {
  __typename?: 'unit_lessons';
  created_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['Int'];
  intro_quiz_url?: Maybe<Scalars['String']>;
  /** An object relationship */
  lesson: Lessons;
  lesson_id: Scalars['Int'];
  position_in_unit: Scalars['Int'];
  /** An object relationship */
  unit: Units;
  unit_id: Scalars['Int'];
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "unit_lessons" */
export type Unit_Lessons_Aggregate = {
  __typename?: 'unit_lessons_aggregate';
  aggregate?: Maybe<Unit_Lessons_Aggregate_Fields>;
  nodes: Array<Unit_Lessons>;
};

/** aggregate fields of "unit_lessons" */
export type Unit_Lessons_Aggregate_Fields = {
  __typename?: 'unit_lessons_aggregate_fields';
  avg?: Maybe<Unit_Lessons_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Unit_Lessons_Max_Fields>;
  min?: Maybe<Unit_Lessons_Min_Fields>;
  stddev?: Maybe<Unit_Lessons_Stddev_Fields>;
  stddev_pop?: Maybe<Unit_Lessons_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Unit_Lessons_Stddev_Samp_Fields>;
  sum?: Maybe<Unit_Lessons_Sum_Fields>;
  var_pop?: Maybe<Unit_Lessons_Var_Pop_Fields>;
  var_samp?: Maybe<Unit_Lessons_Var_Samp_Fields>;
  variance?: Maybe<Unit_Lessons_Variance_Fields>;
};


/** aggregate fields of "unit_lessons" */
export type Unit_Lessons_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Unit_Lessons_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "unit_lessons" */
export type Unit_Lessons_Aggregate_Order_By = {
  avg?: InputMaybe<Unit_Lessons_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Unit_Lessons_Max_Order_By>;
  min?: InputMaybe<Unit_Lessons_Min_Order_By>;
  stddev?: InputMaybe<Unit_Lessons_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Unit_Lessons_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Unit_Lessons_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Unit_Lessons_Sum_Order_By>;
  var_pop?: InputMaybe<Unit_Lessons_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Unit_Lessons_Var_Samp_Order_By>;
  variance?: InputMaybe<Unit_Lessons_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "unit_lessons" */
export type Unit_Lessons_Arr_Rel_Insert_Input = {
  data: Array<Unit_Lessons_Insert_Input>;
  on_conflict?: InputMaybe<Unit_Lessons_On_Conflict>;
};

/** aggregate avg on columns */
export type Unit_Lessons_Avg_Fields = {
  __typename?: 'unit_lessons_avg_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  position_in_unit?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "unit_lessons" */
export type Unit_Lessons_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "unit_lessons". All fields are combined with a logical 'AND'. */
export type Unit_Lessons_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Unit_Lessons_Bool_Exp>>>;
  _not?: InputMaybe<Unit_Lessons_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Unit_Lessons_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  intro_quiz_url?: InputMaybe<String_Comparison_Exp>;
  lesson?: InputMaybe<Lessons_Bool_Exp>;
  lesson_id?: InputMaybe<Int_Comparison_Exp>;
  position_in_unit?: InputMaybe<Int_Comparison_Exp>;
  unit?: InputMaybe<Units_Bool_Exp>;
  unit_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "unit_lessons" */
export enum Unit_Lessons_Constraint {
  /** unique or primary key constraint */
  UnitLessonsLessonIdUnitIdKey = 'unit_lessons_lesson_id_unit_id_key',
  /** unique or primary key constraint */
  UnitLessonsPkey = 'unit_lessons_pkey'
}

/** input type for incrementing integer column in table "unit_lessons" */
export type Unit_Lessons_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  position_in_unit?: InputMaybe<Scalars['Int']>;
  unit_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "unit_lessons" */
export type Unit_Lessons_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  intro_quiz_url?: InputMaybe<Scalars['String']>;
  lesson?: InputMaybe<Lessons_Obj_Rel_Insert_Input>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  position_in_unit?: InputMaybe<Scalars['Int']>;
  unit?: InputMaybe<Units_Obj_Rel_Insert_Input>;
  unit_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Unit_Lessons_Max_Fields = {
  __typename?: 'unit_lessons_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  intro_quiz_url?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['Int']>;
  position_in_unit?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "unit_lessons" */
export type Unit_Lessons_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  intro_quiz_url?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Unit_Lessons_Min_Fields = {
  __typename?: 'unit_lessons_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  intro_quiz_url?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['Int']>;
  position_in_unit?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "unit_lessons" */
export type Unit_Lessons_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  intro_quiz_url?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "unit_lessons" */
export type Unit_Lessons_Mutation_Response = {
  __typename?: 'unit_lessons_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Unit_Lessons>;
};

/** input type for inserting object relation for remote table "unit_lessons" */
export type Unit_Lessons_Obj_Rel_Insert_Input = {
  data: Unit_Lessons_Insert_Input;
  on_conflict?: InputMaybe<Unit_Lessons_On_Conflict>;
};

/** on conflict condition type for table "unit_lessons" */
export type Unit_Lessons_On_Conflict = {
  constraint: Unit_Lessons_Constraint;
  update_columns: Array<Unit_Lessons_Update_Column>;
  where?: InputMaybe<Unit_Lessons_Bool_Exp>;
};

/** ordering options when selecting data from "unit_lessons" */
export type Unit_Lessons_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  intro_quiz_url?: InputMaybe<Order_By>;
  lesson?: InputMaybe<Lessons_Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit?: InputMaybe<Units_Order_By>;
  unit_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "unit_lessons" */
export type Unit_Lessons_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "unit_lessons" */
export enum Unit_Lessons_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IntroQuizUrl = 'intro_quiz_url',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  PositionInUnit = 'position_in_unit',
  /** column name */
  UnitId = 'unit_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "unit_lessons" */
export type Unit_Lessons_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  intro_quiz_url?: InputMaybe<Scalars['String']>;
  lesson_id?: InputMaybe<Scalars['Int']>;
  position_in_unit?: InputMaybe<Scalars['Int']>;
  unit_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Unit_Lessons_Stddev_Fields = {
  __typename?: 'unit_lessons_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  position_in_unit?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "unit_lessons" */
export type Unit_Lessons_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Unit_Lessons_Stddev_Pop_Fields = {
  __typename?: 'unit_lessons_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  position_in_unit?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "unit_lessons" */
export type Unit_Lessons_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Unit_Lessons_Stddev_Samp_Fields = {
  __typename?: 'unit_lessons_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  position_in_unit?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "unit_lessons" */
export type Unit_Lessons_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Unit_Lessons_Sum_Fields = {
  __typename?: 'unit_lessons_sum_fields';
  id?: Maybe<Scalars['Int']>;
  lesson_id?: Maybe<Scalars['Int']>;
  position_in_unit?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "unit_lessons" */
export type Unit_Lessons_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** update columns of table "unit_lessons" */
export enum Unit_Lessons_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IntroQuizUrl = 'intro_quiz_url',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  PositionInUnit = 'position_in_unit',
  /** column name */
  UnitId = 'unit_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Unit_Lessons_Var_Pop_Fields = {
  __typename?: 'unit_lessons_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  position_in_unit?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "unit_lessons" */
export type Unit_Lessons_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Unit_Lessons_Var_Samp_Fields = {
  __typename?: 'unit_lessons_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  position_in_unit?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "unit_lessons" */
export type Unit_Lessons_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Unit_Lessons_Variance_Fields = {
  __typename?: 'unit_lessons_variance_fields';
  id?: Maybe<Scalars['Float']>;
  lesson_id?: Maybe<Scalars['Float']>;
  position_in_unit?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "unit_lessons" */
export type Unit_Lessons_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  position_in_unit?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "unit_quizzes" */
export type Unit_Quizzes = {
  __typename?: 'unit_quizzes';
  id: Scalars['Int'];
  is_active: Scalars['Boolean'];
  /** An object relationship */
  quiz: Quizzes;
  quiz_id: Scalars['Int'];
  /** An object relationship */
  unit: Units;
  unit_id: Scalars['Int'];
};

/** aggregated selection of "unit_quizzes" */
export type Unit_Quizzes_Aggregate = {
  __typename?: 'unit_quizzes_aggregate';
  aggregate?: Maybe<Unit_Quizzes_Aggregate_Fields>;
  nodes: Array<Unit_Quizzes>;
};

/** aggregate fields of "unit_quizzes" */
export type Unit_Quizzes_Aggregate_Fields = {
  __typename?: 'unit_quizzes_aggregate_fields';
  avg?: Maybe<Unit_Quizzes_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Unit_Quizzes_Max_Fields>;
  min?: Maybe<Unit_Quizzes_Min_Fields>;
  stddev?: Maybe<Unit_Quizzes_Stddev_Fields>;
  stddev_pop?: Maybe<Unit_Quizzes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Unit_Quizzes_Stddev_Samp_Fields>;
  sum?: Maybe<Unit_Quizzes_Sum_Fields>;
  var_pop?: Maybe<Unit_Quizzes_Var_Pop_Fields>;
  var_samp?: Maybe<Unit_Quizzes_Var_Samp_Fields>;
  variance?: Maybe<Unit_Quizzes_Variance_Fields>;
};


/** aggregate fields of "unit_quizzes" */
export type Unit_Quizzes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Unit_Quizzes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "unit_quizzes" */
export type Unit_Quizzes_Aggregate_Order_By = {
  avg?: InputMaybe<Unit_Quizzes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Unit_Quizzes_Max_Order_By>;
  min?: InputMaybe<Unit_Quizzes_Min_Order_By>;
  stddev?: InputMaybe<Unit_Quizzes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Unit_Quizzes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Unit_Quizzes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Unit_Quizzes_Sum_Order_By>;
  var_pop?: InputMaybe<Unit_Quizzes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Unit_Quizzes_Var_Samp_Order_By>;
  variance?: InputMaybe<Unit_Quizzes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "unit_quizzes" */
export type Unit_Quizzes_Arr_Rel_Insert_Input = {
  data: Array<Unit_Quizzes_Insert_Input>;
  on_conflict?: InputMaybe<Unit_Quizzes_On_Conflict>;
};

/** aggregate avg on columns */
export type Unit_Quizzes_Avg_Fields = {
  __typename?: 'unit_quizzes_avg_fields';
  id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "unit_quizzes" */
export type Unit_Quizzes_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "unit_quizzes". All fields are combined with a logical 'AND'. */
export type Unit_Quizzes_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Unit_Quizzes_Bool_Exp>>>;
  _not?: InputMaybe<Unit_Quizzes_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Unit_Quizzes_Bool_Exp>>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_active?: InputMaybe<Boolean_Comparison_Exp>;
  quiz?: InputMaybe<Quizzes_Bool_Exp>;
  quiz_id?: InputMaybe<Int_Comparison_Exp>;
  unit?: InputMaybe<Units_Bool_Exp>;
  unit_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "unit_quizzes" */
export enum Unit_Quizzes_Constraint {
  /** unique or primary key constraint */
  UnitQuizzesPkey = 'unit_quizzes_pkey'
}

/** input type for incrementing integer column in table "unit_quizzes" */
export type Unit_Quizzes_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  quiz_id?: InputMaybe<Scalars['Int']>;
  unit_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "unit_quizzes" */
export type Unit_Quizzes_Insert_Input = {
  id?: InputMaybe<Scalars['Int']>;
  is_active?: InputMaybe<Scalars['Boolean']>;
  quiz?: InputMaybe<Quizzes_Obj_Rel_Insert_Input>;
  quiz_id?: InputMaybe<Scalars['Int']>;
  unit?: InputMaybe<Units_Obj_Rel_Insert_Input>;
  unit_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Unit_Quizzes_Max_Fields = {
  __typename?: 'unit_quizzes_max_fields';
  id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "unit_quizzes" */
export type Unit_Quizzes_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Unit_Quizzes_Min_Fields = {
  __typename?: 'unit_quizzes_min_fields';
  id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "unit_quizzes" */
export type Unit_Quizzes_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "unit_quizzes" */
export type Unit_Quizzes_Mutation_Response = {
  __typename?: 'unit_quizzes_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Unit_Quizzes>;
};

/** input type for inserting object relation for remote table "unit_quizzes" */
export type Unit_Quizzes_Obj_Rel_Insert_Input = {
  data: Unit_Quizzes_Insert_Input;
  on_conflict?: InputMaybe<Unit_Quizzes_On_Conflict>;
};

/** on conflict condition type for table "unit_quizzes" */
export type Unit_Quizzes_On_Conflict = {
  constraint: Unit_Quizzes_Constraint;
  update_columns: Array<Unit_Quizzes_Update_Column>;
  where?: InputMaybe<Unit_Quizzes_Bool_Exp>;
};

/** ordering options when selecting data from "unit_quizzes" */
export type Unit_Quizzes_Order_By = {
  id?: InputMaybe<Order_By>;
  is_active?: InputMaybe<Order_By>;
  quiz?: InputMaybe<Quizzes_Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit?: InputMaybe<Units_Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "unit_quizzes" */
export type Unit_Quizzes_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "unit_quizzes" */
export enum Unit_Quizzes_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  QuizId = 'quiz_id',
  /** column name */
  UnitId = 'unit_id'
}

/** input type for updating data in table "unit_quizzes" */
export type Unit_Quizzes_Set_Input = {
  id?: InputMaybe<Scalars['Int']>;
  is_active?: InputMaybe<Scalars['Boolean']>;
  quiz_id?: InputMaybe<Scalars['Int']>;
  unit_id?: InputMaybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Unit_Quizzes_Stddev_Fields = {
  __typename?: 'unit_quizzes_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "unit_quizzes" */
export type Unit_Quizzes_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Unit_Quizzes_Stddev_Pop_Fields = {
  __typename?: 'unit_quizzes_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "unit_quizzes" */
export type Unit_Quizzes_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Unit_Quizzes_Stddev_Samp_Fields = {
  __typename?: 'unit_quizzes_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "unit_quizzes" */
export type Unit_Quizzes_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Unit_Quizzes_Sum_Fields = {
  __typename?: 'unit_quizzes_sum_fields';
  id?: Maybe<Scalars['Int']>;
  quiz_id?: Maybe<Scalars['Int']>;
  unit_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "unit_quizzes" */
export type Unit_Quizzes_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** update columns of table "unit_quizzes" */
export enum Unit_Quizzes_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  QuizId = 'quiz_id',
  /** column name */
  UnitId = 'unit_id'
}

/** aggregate var_pop on columns */
export type Unit_Quizzes_Var_Pop_Fields = {
  __typename?: 'unit_quizzes_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "unit_quizzes" */
export type Unit_Quizzes_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Unit_Quizzes_Var_Samp_Fields = {
  __typename?: 'unit_quizzes_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "unit_quizzes" */
export type Unit_Quizzes_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Unit_Quizzes_Variance_Fields = {
  __typename?: 'unit_quizzes_variance_fields';
  id?: Maybe<Scalars['Float']>;
  quiz_id?: Maybe<Scalars['Float']>;
  unit_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "unit_quizzes" */
export type Unit_Quizzes_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  unit_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "units" */
export type Units = {
  __typename?: 'units';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  exclude_from_timetable: Scalars['Boolean'];
  future_study_unit_id?: Maybe<Scalars['Int']>;
  id: Scalars['Int'];
  ingest_id: Scalars['String'];
  is_sensitive: Scalars['Boolean'];
  national_curriculum_link1?: Maybe<Scalars['String']>;
  national_curriculum_link2?: Maybe<Scalars['String']>;
  national_curriculum_link3?: Maybe<Scalars['String']>;
  national_curriculum_link4?: Maybe<Scalars['String']>;
  national_curriculum_link5?: Maybe<Scalars['String']>;
  national_curriculum_link6?: Maybe<Scalars['String']>;
  national_curriculum_link7?: Maybe<Scalars['String']>;
  national_curriculum_link8?: Maybe<Scalars['String']>;
  national_curriculum_link9?: Maybe<Scalars['String']>;
  national_curriculum_link10?: Maybe<Scalars['String']>;
  number_of_lessons: Scalars['Int'];
  prior_knowledge_required?: Maybe<Scalars['String']>;
  prior_study_unit_id?: Maybe<Scalars['Int']>;
  /** An array relationship */
  programme_of_study_units: Array<Programme_Of_Study_Unit>;
  /** An aggregated array relationship */
  programme_of_study_units_aggregate: Programme_Of_Study_Unit_Aggregate;
  /** An array relationship */
  quizzes: Array<Lesson_Quizzes>;
  /** An aggregated array relationship */
  quizzes_aggregate: Lesson_Quizzes_Aggregate;
  slug?: Maybe<Scalars['String']>;
  /** An object relationship */
  theme?: Maybe<Themes>;
  theme_id?: Maybe<Scalars['Int']>;
  /** An array relationship */
  therapy_units: Array<Therapy_Units>;
  /** An aggregated array relationship */
  therapy_units_aggregate: Therapy_Units_Aggregate;
  title?: Maybe<Scalars['String']>;
  /** An object relationship */
  topic?: Maybe<Units_As_Topics>;
  /** An array relationship */
  unit_lessons: Array<Unit_Lessons>;
  /** An aggregated array relationship */
  unit_lessons_aggregate: Unit_Lessons_Aggregate;
  /** An array relationship */
  unit_management_lessons: Array<Management_Unit_Lessons>;
  /** An aggregated array relationship */
  unit_management_lessons_aggregate: Management_Unit_Lessons_Aggregate;
  unit_question?: Maybe<Scalars['String']>;
  /** An array relationship */
  unit_quizzes: Array<Unit_Quizzes>;
  /** An aggregated array relationship */
  unit_quizzes_aggregate: Unit_Quizzes_Aggregate;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "units" */
export type UnitsProgramme_Of_Study_UnitsArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Unit_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Unit_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Unit_Bool_Exp>;
};


/** columns and relationships of "units" */
export type UnitsProgramme_Of_Study_Units_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Unit_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Unit_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Unit_Bool_Exp>;
};


/** columns and relationships of "units" */
export type UnitsQuizzesArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Quizzes_Order_By>>;
  where?: InputMaybe<Lesson_Quizzes_Bool_Exp>;
};


/** columns and relationships of "units" */
export type UnitsQuizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Quizzes_Order_By>>;
  where?: InputMaybe<Lesson_Quizzes_Bool_Exp>;
};


/** columns and relationships of "units" */
export type UnitsTherapy_UnitsArgs = {
  distinct_on?: InputMaybe<Array<Therapy_Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Therapy_Units_Order_By>>;
  where?: InputMaybe<Therapy_Units_Bool_Exp>;
};


/** columns and relationships of "units" */
export type UnitsTherapy_Units_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Therapy_Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Therapy_Units_Order_By>>;
  where?: InputMaybe<Therapy_Units_Bool_Exp>;
};


/** columns and relationships of "units" */
export type UnitsUnit_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Unit_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Unit_Lessons_Order_By>>;
  where?: InputMaybe<Unit_Lessons_Bool_Exp>;
};


/** columns and relationships of "units" */
export type UnitsUnit_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Unit_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Unit_Lessons_Order_By>>;
  where?: InputMaybe<Unit_Lessons_Bool_Exp>;
};


/** columns and relationships of "units" */
export type UnitsUnit_Management_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Management_Unit_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Unit_Lessons_Order_By>>;
  where?: InputMaybe<Management_Unit_Lessons_Bool_Exp>;
};


/** columns and relationships of "units" */
export type UnitsUnit_Management_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Management_Unit_Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Management_Unit_Lessons_Order_By>>;
  where?: InputMaybe<Management_Unit_Lessons_Bool_Exp>;
};


/** columns and relationships of "units" */
export type UnitsUnit_QuizzesArgs = {
  distinct_on?: InputMaybe<Array<Unit_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Unit_Quizzes_Order_By>>;
  where?: InputMaybe<Unit_Quizzes_Bool_Exp>;
};


/** columns and relationships of "units" */
export type UnitsUnit_Quizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Unit_Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Unit_Quizzes_Order_By>>;
  where?: InputMaybe<Unit_Quizzes_Bool_Exp>;
};

/** aggregated selection of "units" */
export type Units_Aggregate = {
  __typename?: 'units_aggregate';
  aggregate?: Maybe<Units_Aggregate_Fields>;
  nodes: Array<Units>;
};

/** aggregate fields of "units" */
export type Units_Aggregate_Fields = {
  __typename?: 'units_aggregate_fields';
  avg?: Maybe<Units_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Units_Max_Fields>;
  min?: Maybe<Units_Min_Fields>;
  stddev?: Maybe<Units_Stddev_Fields>;
  stddev_pop?: Maybe<Units_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Units_Stddev_Samp_Fields>;
  sum?: Maybe<Units_Sum_Fields>;
  var_pop?: Maybe<Units_Var_Pop_Fields>;
  var_samp?: Maybe<Units_Var_Samp_Fields>;
  variance?: Maybe<Units_Variance_Fields>;
};


/** aggregate fields of "units" */
export type Units_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Units_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "units" */
export type Units_Aggregate_Order_By = {
  avg?: InputMaybe<Units_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Units_Max_Order_By>;
  min?: InputMaybe<Units_Min_Order_By>;
  stddev?: InputMaybe<Units_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Units_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Units_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Units_Sum_Order_By>;
  var_pop?: InputMaybe<Units_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Units_Var_Samp_Order_By>;
  variance?: InputMaybe<Units_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "units" */
export type Units_Arr_Rel_Insert_Input = {
  data: Array<Units_Insert_Input>;
  on_conflict?: InputMaybe<Units_On_Conflict>;
};

/** columns and relationships of "units_as_topics" */
export type Units_As_Topics = {
  __typename?: 'units_as_topics';
  id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  theme_id?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  /** An object relationship */
  topic?: Maybe<Themes_As_Topics>;
  /** An object relationship */
  topic_type?: Maybe<Topic_Types>;
  type?: Maybe<Scalars['String']>;
  /** An array relationship */
  units: Array<Units>;
  /** An aggregated array relationship */
  units_aggregate: Units_Aggregate;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "units_as_topics" */
export type Units_As_TopicsUnitsArgs = {
  distinct_on?: InputMaybe<Array<Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Units_Order_By>>;
  where?: InputMaybe<Units_Bool_Exp>;
};


/** columns and relationships of "units_as_topics" */
export type Units_As_TopicsUnits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Units_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Units_Order_By>>;
  where?: InputMaybe<Units_Bool_Exp>;
};

/** aggregated selection of "units_as_topics" */
export type Units_As_Topics_Aggregate = {
  __typename?: 'units_as_topics_aggregate';
  aggregate?: Maybe<Units_As_Topics_Aggregate_Fields>;
  nodes: Array<Units_As_Topics>;
};

/** aggregate fields of "units_as_topics" */
export type Units_As_Topics_Aggregate_Fields = {
  __typename?: 'units_as_topics_aggregate_fields';
  avg?: Maybe<Units_As_Topics_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Units_As_Topics_Max_Fields>;
  min?: Maybe<Units_As_Topics_Min_Fields>;
  stddev?: Maybe<Units_As_Topics_Stddev_Fields>;
  stddev_pop?: Maybe<Units_As_Topics_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Units_As_Topics_Stddev_Samp_Fields>;
  sum?: Maybe<Units_As_Topics_Sum_Fields>;
  var_pop?: Maybe<Units_As_Topics_Var_Pop_Fields>;
  var_samp?: Maybe<Units_As_Topics_Var_Samp_Fields>;
  variance?: Maybe<Units_As_Topics_Variance_Fields>;
};


/** aggregate fields of "units_as_topics" */
export type Units_As_Topics_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Units_As_Topics_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "units_as_topics" */
export type Units_As_Topics_Aggregate_Order_By = {
  avg?: InputMaybe<Units_As_Topics_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Units_As_Topics_Max_Order_By>;
  min?: InputMaybe<Units_As_Topics_Min_Order_By>;
  stddev?: InputMaybe<Units_As_Topics_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Units_As_Topics_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Units_As_Topics_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Units_As_Topics_Sum_Order_By>;
  var_pop?: InputMaybe<Units_As_Topics_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Units_As_Topics_Var_Samp_Order_By>;
  variance?: InputMaybe<Units_As_Topics_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "units_as_topics" */
export type Units_As_Topics_Arr_Rel_Insert_Input = {
  data: Array<Units_As_Topics_Insert_Input>;
};

/** aggregate avg on columns */
export type Units_As_Topics_Avg_Fields = {
  __typename?: 'units_as_topics_avg_fields';
  id?: Maybe<Scalars['Float']>;
  theme_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "units_as_topics" */
export type Units_As_Topics_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "units_as_topics". All fields are combined with a logical 'AND'. */
export type Units_As_Topics_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Units_As_Topics_Bool_Exp>>>;
  _not?: InputMaybe<Units_As_Topics_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Units_As_Topics_Bool_Exp>>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  theme_id?: InputMaybe<Int_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  topic?: InputMaybe<Themes_As_Topics_Bool_Exp>;
  topic_type?: InputMaybe<Topic_Types_Bool_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  units?: InputMaybe<Units_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** input type for incrementing integer column in table "units_as_topics" */
export type Units_As_Topics_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  theme_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "units_as_topics" */
export type Units_As_Topics_Insert_Input = {
  id?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  theme_id?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Scalars['String']>;
  topic?: InputMaybe<Themes_As_Topics_Obj_Rel_Insert_Input>;
  type?: InputMaybe<Scalars['String']>;
  units?: InputMaybe<Units_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Units_As_Topics_Max_Fields = {
  __typename?: 'units_as_topics_max_fields';
  id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  theme_id?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "units_as_topics" */
export type Units_As_Topics_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Units_As_Topics_Min_Fields = {
  __typename?: 'units_as_topics_min_fields';
  id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  theme_id?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "units_as_topics" */
export type Units_As_Topics_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "units_as_topics" */
export type Units_As_Topics_Mutation_Response = {
  __typename?: 'units_as_topics_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Units_As_Topics>;
};

/** input type for inserting object relation for remote table "units_as_topics" */
export type Units_As_Topics_Obj_Rel_Insert_Input = {
  data: Units_As_Topics_Insert_Input;
};

/** ordering options when selecting data from "units_as_topics" */
export type Units_As_Topics_Order_By = {
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  topic?: InputMaybe<Themes_As_Topics_Order_By>;
  topic_type?: InputMaybe<Topic_Types_Order_By>;
  type?: InputMaybe<Order_By>;
  units_aggregate?: InputMaybe<Units_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** select columns of table "units_as_topics" */
export enum Units_As_Topics_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  ThemeId = 'theme_id',
  /** column name */
  Title = 'title',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "units_as_topics" */
export type Units_As_Topics_Set_Input = {
  id?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  theme_id?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Units_As_Topics_Stddev_Fields = {
  __typename?: 'units_as_topics_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  theme_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "units_as_topics" */
export type Units_As_Topics_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Units_As_Topics_Stddev_Pop_Fields = {
  __typename?: 'units_as_topics_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  theme_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "units_as_topics" */
export type Units_As_Topics_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Units_As_Topics_Stddev_Samp_Fields = {
  __typename?: 'units_as_topics_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  theme_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "units_as_topics" */
export type Units_As_Topics_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Units_As_Topics_Sum_Fields = {
  __typename?: 'units_as_topics_sum_fields';
  id?: Maybe<Scalars['Int']>;
  theme_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "units_as_topics" */
export type Units_As_Topics_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Units_As_Topics_Var_Pop_Fields = {
  __typename?: 'units_as_topics_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  theme_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "units_as_topics" */
export type Units_As_Topics_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Units_As_Topics_Var_Samp_Fields = {
  __typename?: 'units_as_topics_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  theme_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "units_as_topics" */
export type Units_As_Topics_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Units_As_Topics_Variance_Fields = {
  __typename?: 'units_as_topics_variance_fields';
  id?: Maybe<Scalars['Float']>;
  theme_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "units_as_topics" */
export type Units_As_Topics_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
};

/** aggregate avg on columns */
export type Units_Avg_Fields = {
  __typename?: 'units_avg_fields';
  future_study_unit_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  number_of_lessons?: Maybe<Scalars['Float']>;
  prior_study_unit_id?: Maybe<Scalars['Float']>;
  theme_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "units" */
export type Units_Avg_Order_By = {
  future_study_unit_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  number_of_lessons?: InputMaybe<Order_By>;
  prior_study_unit_id?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "units". All fields are combined with a logical 'AND'. */
export type Units_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Units_Bool_Exp>>>;
  _not?: InputMaybe<Units_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Units_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  exclude_from_timetable?: InputMaybe<Boolean_Comparison_Exp>;
  future_study_unit_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  is_sensitive?: InputMaybe<Boolean_Comparison_Exp>;
  national_curriculum_link1?: InputMaybe<String_Comparison_Exp>;
  national_curriculum_link2?: InputMaybe<String_Comparison_Exp>;
  national_curriculum_link3?: InputMaybe<String_Comparison_Exp>;
  national_curriculum_link4?: InputMaybe<String_Comparison_Exp>;
  national_curriculum_link5?: InputMaybe<String_Comparison_Exp>;
  national_curriculum_link6?: InputMaybe<String_Comparison_Exp>;
  national_curriculum_link7?: InputMaybe<String_Comparison_Exp>;
  national_curriculum_link8?: InputMaybe<String_Comparison_Exp>;
  national_curriculum_link9?: InputMaybe<String_Comparison_Exp>;
  national_curriculum_link10?: InputMaybe<String_Comparison_Exp>;
  number_of_lessons?: InputMaybe<Int_Comparison_Exp>;
  prior_knowledge_required?: InputMaybe<String_Comparison_Exp>;
  prior_study_unit_id?: InputMaybe<Int_Comparison_Exp>;
  programme_of_study_units?: InputMaybe<Programme_Of_Study_Unit_Bool_Exp>;
  quizzes?: InputMaybe<Lesson_Quizzes_Bool_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  theme?: InputMaybe<Themes_Bool_Exp>;
  theme_id?: InputMaybe<Int_Comparison_Exp>;
  therapy_units?: InputMaybe<Therapy_Units_Bool_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  topic?: InputMaybe<Units_As_Topics_Bool_Exp>;
  unit_lessons?: InputMaybe<Unit_Lessons_Bool_Exp>;
  unit_management_lessons?: InputMaybe<Management_Unit_Lessons_Bool_Exp>;
  unit_question?: InputMaybe<String_Comparison_Exp>;
  unit_quizzes?: InputMaybe<Unit_Quizzes_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "units" */
export enum Units_Constraint {
  /** unique or primary key constraint */
  UnitsIngestIdKey = 'units_ingest_id_key',
  /** unique or primary key constraint */
  UnitsPkey = 'units_pkey',
  /** unique or primary key constraint */
  UnitsSlugKey = 'units_slug_key'
}

/** input type for incrementing integer column in table "units" */
export type Units_Inc_Input = {
  future_study_unit_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  number_of_lessons?: InputMaybe<Scalars['Int']>;
  prior_study_unit_id?: InputMaybe<Scalars['Int']>;
  theme_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "units" */
export type Units_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  exclude_from_timetable?: InputMaybe<Scalars['Boolean']>;
  future_study_unit_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  is_sensitive?: InputMaybe<Scalars['Boolean']>;
  national_curriculum_link1?: InputMaybe<Scalars['String']>;
  national_curriculum_link2?: InputMaybe<Scalars['String']>;
  national_curriculum_link3?: InputMaybe<Scalars['String']>;
  national_curriculum_link4?: InputMaybe<Scalars['String']>;
  national_curriculum_link5?: InputMaybe<Scalars['String']>;
  national_curriculum_link6?: InputMaybe<Scalars['String']>;
  national_curriculum_link7?: InputMaybe<Scalars['String']>;
  national_curriculum_link8?: InputMaybe<Scalars['String']>;
  national_curriculum_link9?: InputMaybe<Scalars['String']>;
  national_curriculum_link10?: InputMaybe<Scalars['String']>;
  number_of_lessons?: InputMaybe<Scalars['Int']>;
  prior_knowledge_required?: InputMaybe<Scalars['String']>;
  prior_study_unit_id?: InputMaybe<Scalars['Int']>;
  programme_of_study_units?: InputMaybe<Programme_Of_Study_Unit_Arr_Rel_Insert_Input>;
  quizzes?: InputMaybe<Lesson_Quizzes_Arr_Rel_Insert_Input>;
  slug?: InputMaybe<Scalars['String']>;
  theme?: InputMaybe<Themes_Obj_Rel_Insert_Input>;
  theme_id?: InputMaybe<Scalars['Int']>;
  therapy_units?: InputMaybe<Therapy_Units_Arr_Rel_Insert_Input>;
  title?: InputMaybe<Scalars['String']>;
  topic?: InputMaybe<Units_As_Topics_Obj_Rel_Insert_Input>;
  unit_lessons?: InputMaybe<Unit_Lessons_Arr_Rel_Insert_Input>;
  unit_management_lessons?: InputMaybe<Management_Unit_Lessons_Arr_Rel_Insert_Input>;
  unit_question?: InputMaybe<Scalars['String']>;
  unit_quizzes?: InputMaybe<Unit_Quizzes_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Units_Max_Fields = {
  __typename?: 'units_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  future_study_unit_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  national_curriculum_link1?: Maybe<Scalars['String']>;
  national_curriculum_link2?: Maybe<Scalars['String']>;
  national_curriculum_link3?: Maybe<Scalars['String']>;
  national_curriculum_link4?: Maybe<Scalars['String']>;
  national_curriculum_link5?: Maybe<Scalars['String']>;
  national_curriculum_link6?: Maybe<Scalars['String']>;
  national_curriculum_link7?: Maybe<Scalars['String']>;
  national_curriculum_link8?: Maybe<Scalars['String']>;
  national_curriculum_link9?: Maybe<Scalars['String']>;
  national_curriculum_link10?: Maybe<Scalars['String']>;
  number_of_lessons?: Maybe<Scalars['Int']>;
  prior_knowledge_required?: Maybe<Scalars['String']>;
  prior_study_unit_id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  theme_id?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  unit_question?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "units" */
export type Units_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  future_study_unit_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  national_curriculum_link1?: InputMaybe<Order_By>;
  national_curriculum_link2?: InputMaybe<Order_By>;
  national_curriculum_link3?: InputMaybe<Order_By>;
  national_curriculum_link4?: InputMaybe<Order_By>;
  national_curriculum_link5?: InputMaybe<Order_By>;
  national_curriculum_link6?: InputMaybe<Order_By>;
  national_curriculum_link7?: InputMaybe<Order_By>;
  national_curriculum_link8?: InputMaybe<Order_By>;
  national_curriculum_link9?: InputMaybe<Order_By>;
  national_curriculum_link10?: InputMaybe<Order_By>;
  number_of_lessons?: InputMaybe<Order_By>;
  prior_knowledge_required?: InputMaybe<Order_By>;
  prior_study_unit_id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unit_question?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Units_Min_Fields = {
  __typename?: 'units_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  future_study_unit_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  national_curriculum_link1?: Maybe<Scalars['String']>;
  national_curriculum_link2?: Maybe<Scalars['String']>;
  national_curriculum_link3?: Maybe<Scalars['String']>;
  national_curriculum_link4?: Maybe<Scalars['String']>;
  national_curriculum_link5?: Maybe<Scalars['String']>;
  national_curriculum_link6?: Maybe<Scalars['String']>;
  national_curriculum_link7?: Maybe<Scalars['String']>;
  national_curriculum_link8?: Maybe<Scalars['String']>;
  national_curriculum_link9?: Maybe<Scalars['String']>;
  national_curriculum_link10?: Maybe<Scalars['String']>;
  number_of_lessons?: Maybe<Scalars['Int']>;
  prior_knowledge_required?: Maybe<Scalars['String']>;
  prior_study_unit_id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
  theme_id?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  unit_question?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "units" */
export type Units_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  future_study_unit_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  national_curriculum_link1?: InputMaybe<Order_By>;
  national_curriculum_link2?: InputMaybe<Order_By>;
  national_curriculum_link3?: InputMaybe<Order_By>;
  national_curriculum_link4?: InputMaybe<Order_By>;
  national_curriculum_link5?: InputMaybe<Order_By>;
  national_curriculum_link6?: InputMaybe<Order_By>;
  national_curriculum_link7?: InputMaybe<Order_By>;
  national_curriculum_link8?: InputMaybe<Order_By>;
  national_curriculum_link9?: InputMaybe<Order_By>;
  national_curriculum_link10?: InputMaybe<Order_By>;
  number_of_lessons?: InputMaybe<Order_By>;
  prior_knowledge_required?: InputMaybe<Order_By>;
  prior_study_unit_id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  unit_question?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "units" */
export type Units_Mutation_Response = {
  __typename?: 'units_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Units>;
};

/** input type for inserting object relation for remote table "units" */
export type Units_Obj_Rel_Insert_Input = {
  data: Units_Insert_Input;
  on_conflict?: InputMaybe<Units_On_Conflict>;
};

/** on conflict condition type for table "units" */
export type Units_On_Conflict = {
  constraint: Units_Constraint;
  update_columns: Array<Units_Update_Column>;
  where?: InputMaybe<Units_Bool_Exp>;
};

/** ordering options when selecting data from "units" */
export type Units_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  exclude_from_timetable?: InputMaybe<Order_By>;
  future_study_unit_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  is_sensitive?: InputMaybe<Order_By>;
  national_curriculum_link1?: InputMaybe<Order_By>;
  national_curriculum_link2?: InputMaybe<Order_By>;
  national_curriculum_link3?: InputMaybe<Order_By>;
  national_curriculum_link4?: InputMaybe<Order_By>;
  national_curriculum_link5?: InputMaybe<Order_By>;
  national_curriculum_link6?: InputMaybe<Order_By>;
  national_curriculum_link7?: InputMaybe<Order_By>;
  national_curriculum_link8?: InputMaybe<Order_By>;
  national_curriculum_link9?: InputMaybe<Order_By>;
  national_curriculum_link10?: InputMaybe<Order_By>;
  number_of_lessons?: InputMaybe<Order_By>;
  prior_knowledge_required?: InputMaybe<Order_By>;
  prior_study_unit_id?: InputMaybe<Order_By>;
  programme_of_study_units_aggregate?: InputMaybe<Programme_Of_Study_Unit_Aggregate_Order_By>;
  quizzes_aggregate?: InputMaybe<Lesson_Quizzes_Aggregate_Order_By>;
  slug?: InputMaybe<Order_By>;
  theme?: InputMaybe<Themes_Order_By>;
  theme_id?: InputMaybe<Order_By>;
  therapy_units_aggregate?: InputMaybe<Therapy_Units_Aggregate_Order_By>;
  title?: InputMaybe<Order_By>;
  topic?: InputMaybe<Units_As_Topics_Order_By>;
  unit_lessons_aggregate?: InputMaybe<Unit_Lessons_Aggregate_Order_By>;
  unit_management_lessons_aggregate?: InputMaybe<Management_Unit_Lessons_Aggregate_Order_By>;
  unit_question?: InputMaybe<Order_By>;
  unit_quizzes_aggregate?: InputMaybe<Unit_Quizzes_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "units" */
export type Units_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "units" */
export enum Units_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  ExcludeFromTimetable = 'exclude_from_timetable',
  /** column name */
  FutureStudyUnitId = 'future_study_unit_id',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  IsSensitive = 'is_sensitive',
  /** column name */
  NationalCurriculumLink1 = 'national_curriculum_link1',
  /** column name */
  NationalCurriculumLink2 = 'national_curriculum_link2',
  /** column name */
  NationalCurriculumLink3 = 'national_curriculum_link3',
  /** column name */
  NationalCurriculumLink4 = 'national_curriculum_link4',
  /** column name */
  NationalCurriculumLink5 = 'national_curriculum_link5',
  /** column name */
  NationalCurriculumLink6 = 'national_curriculum_link6',
  /** column name */
  NationalCurriculumLink7 = 'national_curriculum_link7',
  /** column name */
  NationalCurriculumLink8 = 'national_curriculum_link8',
  /** column name */
  NationalCurriculumLink9 = 'national_curriculum_link9',
  /** column name */
  NationalCurriculumLink10 = 'national_curriculum_link10',
  /** column name */
  NumberOfLessons = 'number_of_lessons',
  /** column name */
  PriorKnowledgeRequired = 'prior_knowledge_required',
  /** column name */
  PriorStudyUnitId = 'prior_study_unit_id',
  /** column name */
  Slug = 'slug',
  /** column name */
  ThemeId = 'theme_id',
  /** column name */
  Title = 'title',
  /** column name */
  UnitQuestion = 'unit_question',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "units" */
export type Units_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  exclude_from_timetable?: InputMaybe<Scalars['Boolean']>;
  future_study_unit_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  is_sensitive?: InputMaybe<Scalars['Boolean']>;
  national_curriculum_link1?: InputMaybe<Scalars['String']>;
  national_curriculum_link2?: InputMaybe<Scalars['String']>;
  national_curriculum_link3?: InputMaybe<Scalars['String']>;
  national_curriculum_link4?: InputMaybe<Scalars['String']>;
  national_curriculum_link5?: InputMaybe<Scalars['String']>;
  national_curriculum_link6?: InputMaybe<Scalars['String']>;
  national_curriculum_link7?: InputMaybe<Scalars['String']>;
  national_curriculum_link8?: InputMaybe<Scalars['String']>;
  national_curriculum_link9?: InputMaybe<Scalars['String']>;
  national_curriculum_link10?: InputMaybe<Scalars['String']>;
  number_of_lessons?: InputMaybe<Scalars['Int']>;
  prior_knowledge_required?: InputMaybe<Scalars['String']>;
  prior_study_unit_id?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  theme_id?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Scalars['String']>;
  unit_question?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Units_Stddev_Fields = {
  __typename?: 'units_stddev_fields';
  future_study_unit_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  number_of_lessons?: Maybe<Scalars['Float']>;
  prior_study_unit_id?: Maybe<Scalars['Float']>;
  theme_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "units" */
export type Units_Stddev_Order_By = {
  future_study_unit_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  number_of_lessons?: InputMaybe<Order_By>;
  prior_study_unit_id?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Units_Stddev_Pop_Fields = {
  __typename?: 'units_stddev_pop_fields';
  future_study_unit_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  number_of_lessons?: Maybe<Scalars['Float']>;
  prior_study_unit_id?: Maybe<Scalars['Float']>;
  theme_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "units" */
export type Units_Stddev_Pop_Order_By = {
  future_study_unit_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  number_of_lessons?: InputMaybe<Order_By>;
  prior_study_unit_id?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Units_Stddev_Samp_Fields = {
  __typename?: 'units_stddev_samp_fields';
  future_study_unit_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  number_of_lessons?: Maybe<Scalars['Float']>;
  prior_study_unit_id?: Maybe<Scalars['Float']>;
  theme_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "units" */
export type Units_Stddev_Samp_Order_By = {
  future_study_unit_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  number_of_lessons?: InputMaybe<Order_By>;
  prior_study_unit_id?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Units_Sum_Fields = {
  __typename?: 'units_sum_fields';
  future_study_unit_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  number_of_lessons?: Maybe<Scalars['Int']>;
  prior_study_unit_id?: Maybe<Scalars['Int']>;
  theme_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "units" */
export type Units_Sum_Order_By = {
  future_study_unit_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  number_of_lessons?: InputMaybe<Order_By>;
  prior_study_unit_id?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
};

/** update columns of table "units" */
export enum Units_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  ExcludeFromTimetable = 'exclude_from_timetable',
  /** column name */
  FutureStudyUnitId = 'future_study_unit_id',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  IsSensitive = 'is_sensitive',
  /** column name */
  NationalCurriculumLink1 = 'national_curriculum_link1',
  /** column name */
  NationalCurriculumLink2 = 'national_curriculum_link2',
  /** column name */
  NationalCurriculumLink3 = 'national_curriculum_link3',
  /** column name */
  NationalCurriculumLink4 = 'national_curriculum_link4',
  /** column name */
  NationalCurriculumLink5 = 'national_curriculum_link5',
  /** column name */
  NationalCurriculumLink6 = 'national_curriculum_link6',
  /** column name */
  NationalCurriculumLink7 = 'national_curriculum_link7',
  /** column name */
  NationalCurriculumLink8 = 'national_curriculum_link8',
  /** column name */
  NationalCurriculumLink9 = 'national_curriculum_link9',
  /** column name */
  NationalCurriculumLink10 = 'national_curriculum_link10',
  /** column name */
  NumberOfLessons = 'number_of_lessons',
  /** column name */
  PriorKnowledgeRequired = 'prior_knowledge_required',
  /** column name */
  PriorStudyUnitId = 'prior_study_unit_id',
  /** column name */
  Slug = 'slug',
  /** column name */
  ThemeId = 'theme_id',
  /** column name */
  Title = 'title',
  /** column name */
  UnitQuestion = 'unit_question',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Units_Var_Pop_Fields = {
  __typename?: 'units_var_pop_fields';
  future_study_unit_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  number_of_lessons?: Maybe<Scalars['Float']>;
  prior_study_unit_id?: Maybe<Scalars['Float']>;
  theme_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "units" */
export type Units_Var_Pop_Order_By = {
  future_study_unit_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  number_of_lessons?: InputMaybe<Order_By>;
  prior_study_unit_id?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Units_Var_Samp_Fields = {
  __typename?: 'units_var_samp_fields';
  future_study_unit_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  number_of_lessons?: Maybe<Scalars['Float']>;
  prior_study_unit_id?: Maybe<Scalars['Float']>;
  theme_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "units" */
export type Units_Var_Samp_Order_By = {
  future_study_unit_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  number_of_lessons?: InputMaybe<Order_By>;
  prior_study_unit_id?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Units_Variance_Fields = {
  __typename?: 'units_variance_fields';
  future_study_unit_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  number_of_lessons?: Maybe<Scalars['Float']>;
  prior_study_unit_id?: Maybe<Scalars['Float']>;
  theme_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "units" */
export type Units_Variance_Order_By = {
  future_study_unit_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  number_of_lessons?: InputMaybe<Order_By>;
  prior_study_unit_id?: InputMaybe<Order_By>;
  theme_id?: InputMaybe<Order_By>;
};

/** expression to compare columns of type uuid. All fields are combined with logical 'AND'. */
export type Uuid_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['uuid']>;
  _gt?: InputMaybe<Scalars['uuid']>;
  _gte?: InputMaybe<Scalars['uuid']>;
  _in?: InputMaybe<Array<Scalars['uuid']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['uuid']>;
  _lte?: InputMaybe<Scalars['uuid']>;
  _neq?: InputMaybe<Scalars['uuid']>;
  _nin?: InputMaybe<Array<Scalars['uuid']>>;
};

/** columns and relationships of "videos" */
export type Videos = {
  __typename?: 'videos';
  aspect_ratio: Scalars['String'];
  caption_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  captions?: Maybe<Captions>;
  created_at?: Maybe<Scalars['timestamptz']>;
  duration?: Maybe<Scalars['Int']>;
  id: Scalars['uuid'];
  ingest_id?: Maybe<Scalars['String']>;
  /** An array relationship */
  lessons: Array<Lessons>;
  /** An array relationship */
  lessonsByUnsignedVideoId: Array<Lessons>;
  /** An aggregated array relationship */
  lessonsByUnsignedVideoId_aggregate: Lessons_Aggregate;
  /** An aggregated array relationship */
  lessons_aggregate: Lessons_Aggregate;
  mux_asset_id: Scalars['String'];
  mux_playback_id?: Maybe<Scalars['String']>;
  signed?: Maybe<Scalars['Boolean']>;
  signed_stream_id?: Maybe<Scalars['String']>;
  text_track_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "videos" */
export type VideosLessonsArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Order_By>>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};


/** columns and relationships of "videos" */
export type VideosLessonsByUnsignedVideoIdArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Order_By>>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};


/** columns and relationships of "videos" */
export type VideosLessonsByUnsignedVideoId_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Order_By>>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};


/** columns and relationships of "videos" */
export type VideosLessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Order_By>>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};

/** aggregated selection of "videos" */
export type Videos_Aggregate = {
  __typename?: 'videos_aggregate';
  aggregate?: Maybe<Videos_Aggregate_Fields>;
  nodes: Array<Videos>;
};

/** aggregate fields of "videos" */
export type Videos_Aggregate_Fields = {
  __typename?: 'videos_aggregate_fields';
  avg?: Maybe<Videos_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Videos_Max_Fields>;
  min?: Maybe<Videos_Min_Fields>;
  stddev?: Maybe<Videos_Stddev_Fields>;
  stddev_pop?: Maybe<Videos_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Videos_Stddev_Samp_Fields>;
  sum?: Maybe<Videos_Sum_Fields>;
  var_pop?: Maybe<Videos_Var_Pop_Fields>;
  var_samp?: Maybe<Videos_Var_Samp_Fields>;
  variance?: Maybe<Videos_Variance_Fields>;
};


/** aggregate fields of "videos" */
export type Videos_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Videos_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "videos" */
export type Videos_Aggregate_Order_By = {
  avg?: InputMaybe<Videos_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Videos_Max_Order_By>;
  min?: InputMaybe<Videos_Min_Order_By>;
  stddev?: InputMaybe<Videos_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Videos_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Videos_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Videos_Sum_Order_By>;
  var_pop?: InputMaybe<Videos_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Videos_Var_Samp_Order_By>;
  variance?: InputMaybe<Videos_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "videos" */
export type Videos_Arr_Rel_Insert_Input = {
  data: Array<Videos_Insert_Input>;
  on_conflict?: InputMaybe<Videos_On_Conflict>;
};

/** aggregate avg on columns */
export type Videos_Avg_Fields = {
  __typename?: 'videos_avg_fields';
  caption_id?: Maybe<Scalars['Float']>;
  duration?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "videos" */
export type Videos_Avg_Order_By = {
  caption_id?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "videos". All fields are combined with a logical 'AND'. */
export type Videos_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Videos_Bool_Exp>>>;
  _not?: InputMaybe<Videos_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Videos_Bool_Exp>>>;
  aspect_ratio?: InputMaybe<String_Comparison_Exp>;
  caption_id?: InputMaybe<Int_Comparison_Exp>;
  captions?: InputMaybe<Captions_Bool_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  duration?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  lessons?: InputMaybe<Lessons_Bool_Exp>;
  lessonsByUnsignedVideoId?: InputMaybe<Lessons_Bool_Exp>;
  mux_asset_id?: InputMaybe<String_Comparison_Exp>;
  mux_playback_id?: InputMaybe<String_Comparison_Exp>;
  signed?: InputMaybe<Boolean_Comparison_Exp>;
  signed_stream_id?: InputMaybe<String_Comparison_Exp>;
  text_track_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "videos" */
export enum Videos_Constraint {
  /** unique or primary key constraint */
  VideosIngestIdKey = 'videos_ingest_id_key',
  /** unique or primary key constraint */
  VideosMuxAssetIdKey = 'videos_mux_asset_id_key',
  /** unique or primary key constraint */
  VideosPkey = 'videos_pkey'
}

/** input type for incrementing integer column in table "videos" */
export type Videos_Inc_Input = {
  caption_id?: InputMaybe<Scalars['Int']>;
  duration?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "videos" */
export type Videos_Insert_Input = {
  aspect_ratio?: InputMaybe<Scalars['String']>;
  caption_id?: InputMaybe<Scalars['Int']>;
  captions?: InputMaybe<Captions_Obj_Rel_Insert_Input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  duration?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['uuid']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  lessons?: InputMaybe<Lessons_Arr_Rel_Insert_Input>;
  lessonsByUnsignedVideoId?: InputMaybe<Lessons_Arr_Rel_Insert_Input>;
  mux_asset_id?: InputMaybe<Scalars['String']>;
  mux_playback_id?: InputMaybe<Scalars['String']>;
  signed?: InputMaybe<Scalars['Boolean']>;
  signed_stream_id?: InputMaybe<Scalars['String']>;
  text_track_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Videos_Max_Fields = {
  __typename?: 'videos_max_fields';
  aspect_ratio?: Maybe<Scalars['String']>;
  caption_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  duration?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['uuid']>;
  ingest_id?: Maybe<Scalars['String']>;
  mux_asset_id?: Maybe<Scalars['String']>;
  mux_playback_id?: Maybe<Scalars['String']>;
  signed_stream_id?: Maybe<Scalars['String']>;
  text_track_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "videos" */
export type Videos_Max_Order_By = {
  aspect_ratio?: InputMaybe<Order_By>;
  caption_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  mux_asset_id?: InputMaybe<Order_By>;
  mux_playback_id?: InputMaybe<Order_By>;
  signed_stream_id?: InputMaybe<Order_By>;
  text_track_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Videos_Min_Fields = {
  __typename?: 'videos_min_fields';
  aspect_ratio?: Maybe<Scalars['String']>;
  caption_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  duration?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['uuid']>;
  ingest_id?: Maybe<Scalars['String']>;
  mux_asset_id?: Maybe<Scalars['String']>;
  mux_playback_id?: Maybe<Scalars['String']>;
  signed_stream_id?: Maybe<Scalars['String']>;
  text_track_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "videos" */
export type Videos_Min_Order_By = {
  aspect_ratio?: InputMaybe<Order_By>;
  caption_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  mux_asset_id?: InputMaybe<Order_By>;
  mux_playback_id?: InputMaybe<Order_By>;
  signed_stream_id?: InputMaybe<Order_By>;
  text_track_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "videos" */
export type Videos_Mutation_Response = {
  __typename?: 'videos_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Videos>;
};

/** input type for inserting object relation for remote table "videos" */
export type Videos_Obj_Rel_Insert_Input = {
  data: Videos_Insert_Input;
  on_conflict?: InputMaybe<Videos_On_Conflict>;
};

/** on conflict condition type for table "videos" */
export type Videos_On_Conflict = {
  constraint: Videos_Constraint;
  update_columns: Array<Videos_Update_Column>;
  where?: InputMaybe<Videos_Bool_Exp>;
};

/** ordering options when selecting data from "videos" */
export type Videos_Order_By = {
  aspect_ratio?: InputMaybe<Order_By>;
  caption_id?: InputMaybe<Order_By>;
  captions?: InputMaybe<Captions_Order_By>;
  created_at?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  lessonsByUnsignedVideoId_aggregate?: InputMaybe<Lessons_Aggregate_Order_By>;
  lessons_aggregate?: InputMaybe<Lessons_Aggregate_Order_By>;
  mux_asset_id?: InputMaybe<Order_By>;
  mux_playback_id?: InputMaybe<Order_By>;
  signed?: InputMaybe<Order_By>;
  signed_stream_id?: InputMaybe<Order_By>;
  text_track_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "videos" */
export type Videos_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "videos" */
export enum Videos_Select_Column {
  /** column name */
  AspectRatio = 'aspect_ratio',
  /** column name */
  CaptionId = 'caption_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Duration = 'duration',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  MuxAssetId = 'mux_asset_id',
  /** column name */
  MuxPlaybackId = 'mux_playback_id',
  /** column name */
  Signed = 'signed',
  /** column name */
  SignedStreamId = 'signed_stream_id',
  /** column name */
  TextTrackId = 'text_track_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "videos" */
export type Videos_Set_Input = {
  aspect_ratio?: InputMaybe<Scalars['String']>;
  caption_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  duration?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['uuid']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  mux_asset_id?: InputMaybe<Scalars['String']>;
  mux_playback_id?: InputMaybe<Scalars['String']>;
  signed?: InputMaybe<Scalars['Boolean']>;
  signed_stream_id?: InputMaybe<Scalars['String']>;
  text_track_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Videos_Stddev_Fields = {
  __typename?: 'videos_stddev_fields';
  caption_id?: Maybe<Scalars['Float']>;
  duration?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "videos" */
export type Videos_Stddev_Order_By = {
  caption_id?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Videos_Stddev_Pop_Fields = {
  __typename?: 'videos_stddev_pop_fields';
  caption_id?: Maybe<Scalars['Float']>;
  duration?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "videos" */
export type Videos_Stddev_Pop_Order_By = {
  caption_id?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Videos_Stddev_Samp_Fields = {
  __typename?: 'videos_stddev_samp_fields';
  caption_id?: Maybe<Scalars['Float']>;
  duration?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "videos" */
export type Videos_Stddev_Samp_Order_By = {
  caption_id?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Videos_Sum_Fields = {
  __typename?: 'videos_sum_fields';
  caption_id?: Maybe<Scalars['Int']>;
  duration?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "videos" */
export type Videos_Sum_Order_By = {
  caption_id?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
};

/** update columns of table "videos" */
export enum Videos_Update_Column {
  /** column name */
  AspectRatio = 'aspect_ratio',
  /** column name */
  CaptionId = 'caption_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Duration = 'duration',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  MuxAssetId = 'mux_asset_id',
  /** column name */
  MuxPlaybackId = 'mux_playback_id',
  /** column name */
  Signed = 'signed',
  /** column name */
  SignedStreamId = 'signed_stream_id',
  /** column name */
  TextTrackId = 'text_track_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Videos_Var_Pop_Fields = {
  __typename?: 'videos_var_pop_fields';
  caption_id?: Maybe<Scalars['Float']>;
  duration?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "videos" */
export type Videos_Var_Pop_Order_By = {
  caption_id?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Videos_Var_Samp_Fields = {
  __typename?: 'videos_var_samp_fields';
  caption_id?: Maybe<Scalars['Float']>;
  duration?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "videos" */
export type Videos_Var_Samp_Order_By = {
  caption_id?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Videos_Variance_Fields = {
  __typename?: 'videos_variance_fields';
  caption_id?: Maybe<Scalars['Float']>;
  duration?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "videos" */
export type Videos_Variance_Order_By = {
  caption_id?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
};

/** columns and relationships of "vw_latest_updated_at" */
export type Vw_Latest_Updated_At = {
  __typename?: 'vw_latest_updated_at';
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "vw_latest_updated_at" */
export type Vw_Latest_Updated_At_Aggregate = {
  __typename?: 'vw_latest_updated_at_aggregate';
  aggregate?: Maybe<Vw_Latest_Updated_At_Aggregate_Fields>;
  nodes: Array<Vw_Latest_Updated_At>;
};

/** aggregate fields of "vw_latest_updated_at" */
export type Vw_Latest_Updated_At_Aggregate_Fields = {
  __typename?: 'vw_latest_updated_at_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Vw_Latest_Updated_At_Max_Fields>;
  min?: Maybe<Vw_Latest_Updated_At_Min_Fields>;
};


/** aggregate fields of "vw_latest_updated_at" */
export type Vw_Latest_Updated_At_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Vw_Latest_Updated_At_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "vw_latest_updated_at" */
export type Vw_Latest_Updated_At_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Vw_Latest_Updated_At_Max_Order_By>;
  min?: InputMaybe<Vw_Latest_Updated_At_Min_Order_By>;
};

/** Boolean expression to filter rows from the table "vw_latest_updated_at". All fields are combined with a logical 'AND'. */
export type Vw_Latest_Updated_At_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Vw_Latest_Updated_At_Bool_Exp>>>;
  _not?: InputMaybe<Vw_Latest_Updated_At_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Vw_Latest_Updated_At_Bool_Exp>>>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** aggregate max on columns */
export type Vw_Latest_Updated_At_Max_Fields = {
  __typename?: 'vw_latest_updated_at_max_fields';
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "vw_latest_updated_at" */
export type Vw_Latest_Updated_At_Max_Order_By = {
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Vw_Latest_Updated_At_Min_Fields = {
  __typename?: 'vw_latest_updated_at_min_fields';
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "vw_latest_updated_at" */
export type Vw_Latest_Updated_At_Min_Order_By = {
  updated_at?: InputMaybe<Order_By>;
};

/** ordering options when selecting data from "vw_latest_updated_at" */
export type Vw_Latest_Updated_At_Order_By = {
  updated_at?: InputMaybe<Order_By>;
};

/** select columns of table "vw_latest_updated_at" */
export enum Vw_Latest_Updated_At_Select_Column {
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "weeks" */
export type Weeks = {
  __typename?: 'weeks';
  academic_year_id: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  /** An array relationship */
  days: Array<Days>;
  /** An aggregated array relationship */
  days_aggregate: Days_Aggregate;
  id: Scalars['uuid'];
  slug: Scalars['String'];
  starting_at: Scalars['date'];
  /** An array relationship */
  timetabled_weeks: Array<Timetabled_Weeks>;
  /** An aggregated array relationship */
  timetabled_weeks_aggregate: Timetabled_Weeks_Aggregate;
  title: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  week_number: Scalars['Int'];
};


/** columns and relationships of "weeks" */
export type WeeksDaysArgs = {
  distinct_on?: InputMaybe<Array<Days_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Days_Order_By>>;
  where?: InputMaybe<Days_Bool_Exp>;
};


/** columns and relationships of "weeks" */
export type WeeksDays_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Days_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Days_Order_By>>;
  where?: InputMaybe<Days_Bool_Exp>;
};


/** columns and relationships of "weeks" */
export type WeeksTimetabled_WeeksArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Weeks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Weeks_Order_By>>;
  where?: InputMaybe<Timetabled_Weeks_Bool_Exp>;
};


/** columns and relationships of "weeks" */
export type WeeksTimetabled_Weeks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Timetabled_Weeks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Timetabled_Weeks_Order_By>>;
  where?: InputMaybe<Timetabled_Weeks_Bool_Exp>;
};

/** aggregated selection of "weeks" */
export type Weeks_Aggregate = {
  __typename?: 'weeks_aggregate';
  aggregate?: Maybe<Weeks_Aggregate_Fields>;
  nodes: Array<Weeks>;
};

/** aggregate fields of "weeks" */
export type Weeks_Aggregate_Fields = {
  __typename?: 'weeks_aggregate_fields';
  avg?: Maybe<Weeks_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Weeks_Max_Fields>;
  min?: Maybe<Weeks_Min_Fields>;
  stddev?: Maybe<Weeks_Stddev_Fields>;
  stddev_pop?: Maybe<Weeks_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Weeks_Stddev_Samp_Fields>;
  sum?: Maybe<Weeks_Sum_Fields>;
  var_pop?: Maybe<Weeks_Var_Pop_Fields>;
  var_samp?: Maybe<Weeks_Var_Samp_Fields>;
  variance?: Maybe<Weeks_Variance_Fields>;
};


/** aggregate fields of "weeks" */
export type Weeks_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Weeks_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "weeks" */
export type Weeks_Aggregate_Order_By = {
  avg?: InputMaybe<Weeks_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Weeks_Max_Order_By>;
  min?: InputMaybe<Weeks_Min_Order_By>;
  stddev?: InputMaybe<Weeks_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Weeks_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Weeks_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Weeks_Sum_Order_By>;
  var_pop?: InputMaybe<Weeks_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Weeks_Var_Samp_Order_By>;
  variance?: InputMaybe<Weeks_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "weeks" */
export type Weeks_Arr_Rel_Insert_Input = {
  data: Array<Weeks_Insert_Input>;
  on_conflict?: InputMaybe<Weeks_On_Conflict>;
};

/** aggregate avg on columns */
export type Weeks_Avg_Fields = {
  __typename?: 'weeks_avg_fields';
  academic_year_id?: Maybe<Scalars['Float']>;
  week_number?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "weeks" */
export type Weeks_Avg_Order_By = {
  academic_year_id?: InputMaybe<Order_By>;
  week_number?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "weeks". All fields are combined with a logical 'AND'. */
export type Weeks_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Weeks_Bool_Exp>>>;
  _not?: InputMaybe<Weeks_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Weeks_Bool_Exp>>>;
  academic_year_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  days?: InputMaybe<Days_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  starting_at?: InputMaybe<Date_Comparison_Exp>;
  timetabled_weeks?: InputMaybe<Timetabled_Weeks_Bool_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  week_number?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "weeks" */
export enum Weeks_Constraint {
  /** unique or primary key constraint */
  WeeksPkey = 'weeks_pkey',
  /** unique or primary key constraint */
  WeeksSlugKey = 'weeks_slug_key',
  /** unique or primary key constraint */
  WeeksWeekNumberYear = 'weeks_week_number_year'
}

/** input type for incrementing integer column in table "weeks" */
export type Weeks_Inc_Input = {
  academic_year_id?: InputMaybe<Scalars['Int']>;
  week_number?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "weeks" */
export type Weeks_Insert_Input = {
  academic_year_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  days?: InputMaybe<Days_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  slug?: InputMaybe<Scalars['String']>;
  starting_at?: InputMaybe<Scalars['date']>;
  timetabled_weeks?: InputMaybe<Timetabled_Weeks_Arr_Rel_Insert_Input>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  week_number?: InputMaybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Weeks_Max_Fields = {
  __typename?: 'weeks_max_fields';
  academic_year_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  slug?: Maybe<Scalars['String']>;
  starting_at?: Maybe<Scalars['date']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week_number?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "weeks" */
export type Weeks_Max_Order_By = {
  academic_year_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  starting_at?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  week_number?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Weeks_Min_Fields = {
  __typename?: 'weeks_min_fields';
  academic_year_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  slug?: Maybe<Scalars['String']>;
  starting_at?: Maybe<Scalars['date']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week_number?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "weeks" */
export type Weeks_Min_Order_By = {
  academic_year_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  starting_at?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  week_number?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "weeks" */
export type Weeks_Mutation_Response = {
  __typename?: 'weeks_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Weeks>;
};

/** input type for inserting object relation for remote table "weeks" */
export type Weeks_Obj_Rel_Insert_Input = {
  data: Weeks_Insert_Input;
  on_conflict?: InputMaybe<Weeks_On_Conflict>;
};

/** on conflict condition type for table "weeks" */
export type Weeks_On_Conflict = {
  constraint: Weeks_Constraint;
  update_columns: Array<Weeks_Update_Column>;
  where?: InputMaybe<Weeks_Bool_Exp>;
};

/** ordering options when selecting data from "weeks" */
export type Weeks_Order_By = {
  academic_year_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  days_aggregate?: InputMaybe<Days_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  starting_at?: InputMaybe<Order_By>;
  timetabled_weeks_aggregate?: InputMaybe<Timetabled_Weeks_Aggregate_Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  week_number?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "weeks" */
export type Weeks_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "weeks" */
export enum Weeks_Select_Column {
  /** column name */
  AcademicYearId = 'academic_year_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  StartingAt = 'starting_at',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  WeekNumber = 'week_number'
}

/** input type for updating data in table "weeks" */
export type Weeks_Set_Input = {
  academic_year_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  slug?: InputMaybe<Scalars['String']>;
  starting_at?: InputMaybe<Scalars['date']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  week_number?: InputMaybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Weeks_Stddev_Fields = {
  __typename?: 'weeks_stddev_fields';
  academic_year_id?: Maybe<Scalars['Float']>;
  week_number?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "weeks" */
export type Weeks_Stddev_Order_By = {
  academic_year_id?: InputMaybe<Order_By>;
  week_number?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Weeks_Stddev_Pop_Fields = {
  __typename?: 'weeks_stddev_pop_fields';
  academic_year_id?: Maybe<Scalars['Float']>;
  week_number?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "weeks" */
export type Weeks_Stddev_Pop_Order_By = {
  academic_year_id?: InputMaybe<Order_By>;
  week_number?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Weeks_Stddev_Samp_Fields = {
  __typename?: 'weeks_stddev_samp_fields';
  academic_year_id?: Maybe<Scalars['Float']>;
  week_number?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "weeks" */
export type Weeks_Stddev_Samp_Order_By = {
  academic_year_id?: InputMaybe<Order_By>;
  week_number?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Weeks_Sum_Fields = {
  __typename?: 'weeks_sum_fields';
  academic_year_id?: Maybe<Scalars['Int']>;
  week_number?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "weeks" */
export type Weeks_Sum_Order_By = {
  academic_year_id?: InputMaybe<Order_By>;
  week_number?: InputMaybe<Order_By>;
};

/** update columns of table "weeks" */
export enum Weeks_Update_Column {
  /** column name */
  AcademicYearId = 'academic_year_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  StartingAt = 'starting_at',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  WeekNumber = 'week_number'
}

/** aggregate var_pop on columns */
export type Weeks_Var_Pop_Fields = {
  __typename?: 'weeks_var_pop_fields';
  academic_year_id?: Maybe<Scalars['Float']>;
  week_number?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "weeks" */
export type Weeks_Var_Pop_Order_By = {
  academic_year_id?: InputMaybe<Order_By>;
  week_number?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Weeks_Var_Samp_Fields = {
  __typename?: 'weeks_var_samp_fields';
  academic_year_id?: Maybe<Scalars['Float']>;
  week_number?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "weeks" */
export type Weeks_Var_Samp_Order_By = {
  academic_year_id?: InputMaybe<Order_By>;
  week_number?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Weeks_Variance_Fields = {
  __typename?: 'weeks_variance_fields';
  academic_year_id?: Maybe<Scalars['Float']>;
  week_number?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "weeks" */
export type Weeks_Variance_Order_By = {
  academic_year_id?: InputMaybe<Order_By>;
  week_number?: InputMaybe<Order_By>;
};

/** columns and relationships of "years" */
export type Years = {
  __typename?: 'years';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  ingest_id: Scalars['String'];
  /** An object relationship */
  key_stage: Key_Stages;
  key_stage_id: Scalars['Int'];
  /** An object relationship */
  phase: Phases;
  phase_id: Scalars['Int'];
  /** An array relationship */
  programme_of_studies: Array<Programme_Of_Study>;
  /** An aggregated array relationship */
  programme_of_studies_aggregate: Programme_Of_Study_Aggregate;
  short_code: Scalars['String'];
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "years" */
export type YearsProgramme_Of_StudiesArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Bool_Exp>;
};


/** columns and relationships of "years" */
export type YearsProgramme_Of_Studies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Programme_Of_Study_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Programme_Of_Study_Order_By>>;
  where?: InputMaybe<Programme_Of_Study_Bool_Exp>;
};

/** aggregated selection of "years" */
export type Years_Aggregate = {
  __typename?: 'years_aggregate';
  aggregate?: Maybe<Years_Aggregate_Fields>;
  nodes: Array<Years>;
};

/** aggregate fields of "years" */
export type Years_Aggregate_Fields = {
  __typename?: 'years_aggregate_fields';
  avg?: Maybe<Years_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Years_Max_Fields>;
  min?: Maybe<Years_Min_Fields>;
  stddev?: Maybe<Years_Stddev_Fields>;
  stddev_pop?: Maybe<Years_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Years_Stddev_Samp_Fields>;
  sum?: Maybe<Years_Sum_Fields>;
  var_pop?: Maybe<Years_Var_Pop_Fields>;
  var_samp?: Maybe<Years_Var_Samp_Fields>;
  variance?: Maybe<Years_Variance_Fields>;
};


/** aggregate fields of "years" */
export type Years_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Years_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "years" */
export type Years_Aggregate_Order_By = {
  avg?: InputMaybe<Years_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Years_Max_Order_By>;
  min?: InputMaybe<Years_Min_Order_By>;
  stddev?: InputMaybe<Years_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Years_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Years_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Years_Sum_Order_By>;
  var_pop?: InputMaybe<Years_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Years_Var_Samp_Order_By>;
  variance?: InputMaybe<Years_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "years" */
export type Years_Arr_Rel_Insert_Input = {
  data: Array<Years_Insert_Input>;
  on_conflict?: InputMaybe<Years_On_Conflict>;
};

/** aggregate avg on columns */
export type Years_Avg_Fields = {
  __typename?: 'years_avg_fields';
  id?: Maybe<Scalars['Float']>;
  key_stage_id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "years" */
export type Years_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "years". All fields are combined with a logical 'AND'. */
export type Years_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Years_Bool_Exp>>>;
  _not?: InputMaybe<Years_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Years_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  ingest_id?: InputMaybe<String_Comparison_Exp>;
  key_stage?: InputMaybe<Key_Stages_Bool_Exp>;
  key_stage_id?: InputMaybe<Int_Comparison_Exp>;
  phase?: InputMaybe<Phases_Bool_Exp>;
  phase_id?: InputMaybe<Int_Comparison_Exp>;
  programme_of_studies?: InputMaybe<Programme_Of_Study_Bool_Exp>;
  short_code?: InputMaybe<String_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "years" */
export enum Years_Constraint {
  /** unique or primary key constraint */
  YearIngestIdKey = 'year_ingest_id_key',
  /** unique or primary key constraint */
  YearPkey = 'year_pkey',
  /** unique or primary key constraint */
  YearSlugKey = 'year_slug_key'
}

/** input type for incrementing integer column in table "years" */
export type Years_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  key_stage_id?: InputMaybe<Scalars['Int']>;
  phase_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "years" */
export type Years_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  key_stage?: InputMaybe<Key_Stages_Obj_Rel_Insert_Input>;
  key_stage_id?: InputMaybe<Scalars['Int']>;
  phase?: InputMaybe<Phases_Obj_Rel_Insert_Input>;
  phase_id?: InputMaybe<Scalars['Int']>;
  programme_of_studies?: InputMaybe<Programme_Of_Study_Arr_Rel_Insert_Input>;
  short_code?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Years_Max_Fields = {
  __typename?: 'years_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  key_stage_id?: Maybe<Scalars['Int']>;
  phase_id?: Maybe<Scalars['Int']>;
  short_code?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "years" */
export type Years_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  short_code?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Years_Min_Fields = {
  __typename?: 'years_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ingest_id?: Maybe<Scalars['String']>;
  key_stage_id?: Maybe<Scalars['Int']>;
  phase_id?: Maybe<Scalars['Int']>;
  short_code?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "years" */
export type Years_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  short_code?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "years" */
export type Years_Mutation_Response = {
  __typename?: 'years_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Years>;
};

/** input type for inserting object relation for remote table "years" */
export type Years_Obj_Rel_Insert_Input = {
  data: Years_Insert_Input;
  on_conflict?: InputMaybe<Years_On_Conflict>;
};

/** on conflict condition type for table "years" */
export type Years_On_Conflict = {
  constraint: Years_Constraint;
  update_columns: Array<Years_Update_Column>;
  where?: InputMaybe<Years_Bool_Exp>;
};

/** ordering options when selecting data from "years" */
export type Years_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ingest_id?: InputMaybe<Order_By>;
  key_stage?: InputMaybe<Key_Stages_Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  phase?: InputMaybe<Phases_Order_By>;
  phase_id?: InputMaybe<Order_By>;
  programme_of_studies_aggregate?: InputMaybe<Programme_Of_Study_Aggregate_Order_By>;
  short_code?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "years" */
export type Years_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "years" */
export enum Years_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  KeyStageId = 'key_stage_id',
  /** column name */
  PhaseId = 'phase_id',
  /** column name */
  ShortCode = 'short_code',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "years" */
export type Years_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  ingest_id?: InputMaybe<Scalars['String']>;
  key_stage_id?: InputMaybe<Scalars['Int']>;
  phase_id?: InputMaybe<Scalars['Int']>;
  short_code?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Years_Stddev_Fields = {
  __typename?: 'years_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  key_stage_id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "years" */
export type Years_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Years_Stddev_Pop_Fields = {
  __typename?: 'years_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  key_stage_id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "years" */
export type Years_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Years_Stddev_Samp_Fields = {
  __typename?: 'years_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  key_stage_id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "years" */
export type Years_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Years_Sum_Fields = {
  __typename?: 'years_sum_fields';
  id?: Maybe<Scalars['Int']>;
  key_stage_id?: Maybe<Scalars['Int']>;
  phase_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "years" */
export type Years_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
};

/** update columns of table "years" */
export enum Years_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  IngestId = 'ingest_id',
  /** column name */
  KeyStageId = 'key_stage_id',
  /** column name */
  PhaseId = 'phase_id',
  /** column name */
  ShortCode = 'short_code',
  /** column name */
  Slug = 'slug',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Years_Var_Pop_Fields = {
  __typename?: 'years_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  key_stage_id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "years" */
export type Years_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Years_Var_Samp_Fields = {
  __typename?: 'years_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  key_stage_id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "years" */
export type Years_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Years_Variance_Fields = {
  __typename?: 'years_variance_fields';
  id?: Maybe<Scalars['Float']>;
  key_stage_id?: Maybe<Scalars['Float']>;
  phase_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "years" */
export type Years_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  key_stage_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
};

export type TeachersHomePageQueryVariables = Exact<{ [key: string]: never; }>;


export type TeachersHomePageQuery = { __typename?: 'query_root', mv_key_stages: Array<{ __typename?: 'mv_key_stages', slug?: string | null, title?: string | null, shortCode?: string | null }> };

export type TeachersKeyStageSubjectTiersQueryVariables = Exact<{
  keyStageSlug: Scalars['String'];
  subjectSlug: Scalars['String'];
}>;


export type TeachersKeyStageSubjectTiersQuery = { __typename?: 'query_root', mv_key_stages: Array<{ __typename?: 'mv_key_stages', slug?: string | null, title?: string | null }>, mv_subjects: Array<{ __typename?: 'mv_subjects', slug?: string | null, title?: string | null }>, mv_tiers: Array<{ __typename?: 'mv_tiers', slug?: string | null, title?: string | null, unitCount?: any | null, lessonCount?: any | null }> };

export type TeachersKeyStageSubjectTiersPathsQueryVariables = Exact<{ [key: string]: never; }>;


export type TeachersKeyStageSubjectTiersPathsQuery = { __typename?: 'query_root', mv_tiers: Array<{ __typename?: 'mv_tiers', subjectSlug?: string | null, keyStageSlug?: string | null }> };

export type TeachersKeyStageSubjectUnitLessonsQueryVariables = Exact<{
  keyStageSlug: Scalars['String'];
  subjectSlug: Scalars['String'];
  unitSlug: Scalars['String'];
}>;


export type TeachersKeyStageSubjectUnitLessonsQuery = { __typename?: 'query_root', mv_units: Array<{ __typename?: 'mv_units', unitSlug?: string | null, unitTitle?: string | null, keyStageSlug?: string | null, keyStageTitle?: string | null, subjectSlug?: string | null, subjectTitle?: string | null }>, mv_lessons: Array<{ __typename?: 'mv_lessons', slug?: string | null, title?: string | null, description?: string | null, expired?: boolean | null, keyStageSlug?: string | null, keyStageTitle?: string | null, subjectSlug?: string | null, subjectTitle?: string | null, unitSlug?: string | null, themeTitle?: string | null, themeSlug?: string | null, contentGuidance?: string | null, equipmentRequired?: string | null, supervisionLevel?: string | null, videoCount?: number | null, presentationCount?: any | null, worksheetCount?: any | null, hasCopyrightMaterial?: boolean | null, hasDownloadableResources?: boolean | null, quizCount?: any | null }> };

export type TeachersKeyStageSubjectUnitsQueryVariables = Exact<{
  keyStageSlug: Scalars['String'];
  subjectSlug: Scalars['String'];
  tierSlug?: InputMaybe<Scalars['String']>;
  learningThemeSlug?: InputMaybe<Scalars['String']>;
}>;


export type TeachersKeyStageSubjectUnitsQuery = { __typename?: 'query_root', mv_key_stages: Array<{ __typename?: 'mv_key_stages', slug?: string | null, title?: string | null }>, mv_subjects: Array<{ __typename?: 'mv_subjects', slug?: string | null, title?: string | null }>, mv_tiers: Array<{ __typename?: 'mv_tiers', slug?: string | null, title?: string | null, unitCount?: any | null, lessonCount?: any | null }>, mv_units: Array<{ __typename?: 'mv_units', slug?: string | null, title?: string | null, year?: string | null, expired?: boolean | null, keyStageSlug?: string | null, keyStageTitle?: string | null, subjectSlug?: string | null, subjectTitle?: string | null, themeSlug?: string | null, themeTitle?: string | null, lessonCount?: any | null, quizCount?: any | null, unitStudyOrder?: number | null, expiredLessonCount?: any | null }>, mv_learning_themes: Array<{ __typename?: 'mv_learning_themes', slug?: string | null, label?: string | null, tierSlug?: string | null, tierName?: string | null, subjectTitle?: string | null, subjectSlug?: string | null, keyStageTitle?: string | null, keyStageSlug?: string | null }> };

export type TeachersKeyStageSubjectUnitLessonsDownloadsQueryVariables = Exact<{
  lessonSlug: Scalars['String'];
  keyStageSlug: Scalars['String'];
  subjectSlug: Scalars['String'];
  unitSlug: Scalars['String'];
}>;


export type TeachersKeyStageSubjectUnitLessonsDownloadsQuery = { __typename?: 'query_root', mv_downloads: Array<{ __typename?: 'mv_downloads', downloads?: any | null, slug?: string | null, title?: string | null, keyStageSlug?: string | null, keyStageTitle?: string | null, subjectSlug?: string | null, subjectTitle?: string | null, themeSlug?: string | null, themeTitle?: string | null, unitSlug?: string | null, unitTitle?: string | null }> };

export type TeachersKeyStageSubjectUnitsPathsQueryVariables = Exact<{ [key: string]: never; }>;


export type TeachersKeyStageSubjectUnitsPathsQuery = { __typename?: 'query_root', mv_subjects: Array<{ __typename?: 'mv_subjects', subjectSlug?: string | null, keyStageSlug?: string | null }> };

export type TeachersKeyStageSubjectsQueryVariables = Exact<{
  keyStageSlug: Scalars['String'];
}>;


export type TeachersKeyStageSubjectsQuery = { __typename?: 'query_root', mv_key_stages: Array<{ __typename?: 'mv_key_stages', slug?: string | null, title?: string | null }>, mv_subjects: Array<{ __typename?: 'mv_subjects', slug?: string | null, title?: string | null, keyStageSlug?: string | null, keyStageTitle?: string | null, lessonCount?: any | null, unitCount?: any | null, tierCount?: any | null, activeUnitCount?: any | null }> };

export type TeachersLessonOverviewQueryVariables = Exact<{
  lessonSlug: Scalars['String'];
  keyStageSlug: Scalars['String'];
  subjectSlug: Scalars['String'];
  unitSlug: Scalars['String'];
}>;


export type TeachersLessonOverviewQuery = { __typename?: 'query_root', mv_lessons: Array<{ __typename?: 'mv_lessons', slug?: string | null, title?: string | null, transcript?: string | null, unitSlug?: string | null, unitTitle?: string | null, keyStageSlug?: string | null, keyStageTitle?: string | null, subjectSlug?: string | null, subjectTitle?: string | null, contentGuidance?: string | null, equipmentRequired?: string | null, presentationUrl?: string | null, supervisionLevel?: string | null, worksheetUrl?: string | null, hasCopyrightMaterial?: boolean | null, coreContent?: any | null, videoMuxPlaybackId?: string | null, videoWithSignLanguageMuxPlaybackId?: string | null, hasDownloadableResources?: boolean | null }>, exitQuizInfo: Array<{ __typename?: 'mv_quizzes', title?: string | null, questionCount?: any | null }>, exitQuiz: Array<{ __typename?: 'mv_questions', active?: boolean | null, answer?: any | null, choices?: any | null, images?: any | null, points?: number | null, required?: boolean | null, title?: string | null, type?: string | null, order?: number | null, keyStageSlug?: string | null, keyStageTitle?: string | null, lessonSlug?: string | null, lessonTitle?: string | null, subjectSlug?: string | null, subjectTitle?: string | null, unitSlug?: string | null, unitTitle?: string | null, choiceImages?: any | null, feedbackCorrect?: string | null, feedbackIncorrect?: string | null, quizType?: string | null, displayNumber?: string | null }>, introQuizInfo: Array<{ __typename?: 'mv_quizzes', title?: string | null, questionCount?: any | null }>, introQuiz: Array<{ __typename?: 'mv_questions', active?: boolean | null, answer?: any | null, choices?: any | null, images?: any | null, points?: number | null, required?: boolean | null, title?: string | null, type?: string | null, order?: number | null, keyStageSlug?: string | null, keyStageTitle?: string | null, lessonSlug?: string | null, lessonTitle?: string | null, subjectSlug?: string | null, subjectTitle?: string | null, unitSlug?: string | null, unitTitle?: string | null, choiceImages?: any | null, feedbackCorrect?: string | null, feedbackIncorrect?: string | null, quizType?: string | null, displayNumber?: string | null }> };

export type TeachersLessonOverviewPathsQueryVariables = Exact<{ [key: string]: never; }>;


export type TeachersLessonOverviewPathsQuery = { __typename?: 'query_root', mv_lessons: Array<{ __typename?: 'mv_lessons', lessonSlug?: string | null, keyStageSlug?: string | null, subjectSlug?: string | null, unitSlug?: string | null }> };


export const TeachersHomePageDocument = gql`
    query teachersHomePage {
  mv_key_stages(order_by: {short_code: asc}) {
    shortCode: short_code
    slug
    title
  }
}
    `;
export const TeachersKeyStageSubjectTiersDocument = gql`
    query teachersKeyStageSubjectTiers($keyStageSlug: String!, $subjectSlug: String!) {
  mv_key_stages(where: {slug: {_eq: $keyStageSlug}}) {
    slug
    title
  }
  mv_subjects(where: {slug: {_eq: $subjectSlug}}) {
    slug
    title
  }
  mv_tiers(
    where: {key_stage_slug: {_eq: $keyStageSlug}, subject_slug: {_eq: $subjectSlug}}
  ) {
    slug
    title
    unitCount: unit_count
    lessonCount: lesson_count
  }
}
    `;
export const TeachersKeyStageSubjectTiersPathsDocument = gql`
    query teachersKeyStageSubjectTiersPaths {
  mv_tiers {
    subjectSlug: subject_slug
    keyStageSlug: key_stage_slug
  }
}
    `;
export const TeachersKeyStageSubjectUnitLessonsDocument = gql`
    query teachersKeyStageSubjectUnitLessons($keyStageSlug: String!, $subjectSlug: String!, $unitSlug: String!) {
  mv_units(
    where: {slug: {_eq: $unitSlug}, subject_slug: {_eq: $subjectSlug}, key_stage_slug: {_eq: $keyStageSlug}}
  ) {
    unitSlug: slug
    unitTitle: title
    keyStageSlug: key_stage_slug
    keyStageTitle: key_stage_title
    subjectSlug: subject_slug
    subjectTitle: subject_title
  }
  mv_lessons(
    order_by: {position_in_unit: asc}
    where: {key_stage_slug: {_eq: $keyStageSlug}, subject_slug: {_eq: $subjectSlug}, unit_slug: {_eq: $unitSlug}}
  ) {
    slug
    title
    keyStageSlug: key_stage_slug
    keyStageTitle: key_stage_title
    subjectSlug: subject_slug
    subjectTitle: subject_title
    unitSlug: unit_slug
    themeTitle: theme_title
    themeSlug: theme_slug
    description
    contentGuidance: content_guidance
    equipmentRequired: equipment_required
    supervisionLevel: supervision_level
    videoCount: video_count
    presentationCount: presentation_count
    worksheetCount: worksheet_count
    hasCopyrightMaterial: has_copyright_material
    hasDownloadableResources: has_downloadable_resources
    quizCount: quiz_count
    expired
  }
}
    `;
export const TeachersKeyStageSubjectUnitsDocument = gql`
    query teachersKeyStageSubjectUnits($keyStageSlug: String!, $subjectSlug: String!, $tierSlug: String, $learningThemeSlug: String) {
  mv_key_stages(where: {slug: {_eq: $keyStageSlug}}) {
    slug
    title
  }
  mv_subjects(where: {slug: {_eq: $subjectSlug}}) {
    slug
    title
  }
  mv_tiers(
    where: {key_stage_slug: {_eq: $keyStageSlug}, subject_slug: {_eq: $subjectSlug}}
  ) {
    slug
    title
    unitCount: unit_count
    lessonCount: lesson_count
  }
  mv_units(
    where: {key_stage_slug: {_eq: $keyStageSlug}, subject_slug: {_eq: $subjectSlug}, tier_slug: {_eq: $tierSlug}, theme_slug: {_eq: $learningThemeSlug}}
    order_by: {year: asc, unit_study_order: asc}
  ) {
    slug
    title
    keyStageSlug: key_stage_slug
    keyStageTitle: key_stage_title
    subjectSlug: subject_slug
    subjectTitle: subject_title
    themeSlug: theme_slug
    themeTitle: theme_title
    lessonCount: lesson_count
    quizCount: quiz_count
    unitStudyOrder: unit_study_order
    year
    expired
    expiredLessonCount: expired_lesson_count
  }
  mv_learning_themes(
    where: {key_stage_slug: {_eq: $keyStageSlug}, subject_slug: {_eq: $subjectSlug}, tier_slug: {_eq: $tierSlug}}
  ) {
    label: title
    tierSlug: tier_slug
    tierName: tier_name
    subjectTitle: subject_title
    subjectSlug: subject_slug
    slug
    keyStageTitle: key_stage_title
    keyStageSlug: key_stage_slug
  }
}
    `;
export const TeachersKeyStageSubjectUnitLessonsDownloadsDocument = gql`
    query teachersKeyStageSubjectUnitLessonsDownloads($lessonSlug: String!, $keyStageSlug: String!, $subjectSlug: String!, $unitSlug: String!) {
  mv_downloads(
    where: {slug: {_eq: $lessonSlug}, key_stage_slug: {_eq: $keyStageSlug}, subject_slug: {_eq: $subjectSlug}, unit_slug: {_eq: $unitSlug}}
  ) {
    downloads
    keyStageSlug: key_stage_slug
    keyStageTitle: key_stage_title
    slug
    title
    subjectSlug: subject_slug
    subjectTitle: subject_title
    themeSlug: theme_slug
    themeTitle: theme_title
    unitSlug: unit_slug
    unitTitle: unit_title
  }
}
    `;
export const TeachersKeyStageSubjectUnitsPathsDocument = gql`
    query teachersKeyStageSubjectUnitsPaths {
  mv_subjects {
    subjectSlug: slug
    keyStageSlug: key_stage_slug
  }
}
    `;
export const TeachersKeyStageSubjectsDocument = gql`
    query teachersKeyStageSubjects($keyStageSlug: String!) {
  mv_key_stages(where: {slug: {_eq: $keyStageSlug}}) {
    slug
    title
  }
  mv_subjects(
    order_by: {slug: asc}
    where: {key_stage_slug: {_eq: $keyStageSlug}}
  ) {
    slug
    title
    keyStageSlug: key_stage_slug
    keyStageTitle: key_stage_title
    lessonCount: lesson_count
    unitCount: unit_count
    tierCount: tier_count
    activeUnitCount: active_unit_count
  }
}
    `;
export const TeachersLessonOverviewDocument = gql`
    query teachersLessonOverview($lessonSlug: String!, $keyStageSlug: String!, $subjectSlug: String!, $unitSlug: String!) {
  mv_lessons(
    where: {slug: {_eq: $lessonSlug}, key_stage_slug: {_eq: $keyStageSlug}, subject_slug: {_eq: $subjectSlug}, unit_slug: {_eq: $unitSlug}}
  ) {
    slug
    title
    unitSlug: unit_slug
    unitTitle: unit_title
    keyStageSlug: key_stage_slug
    keyStageTitle: key_stage_title
    subjectSlug: subject_slug
    subjectTitle: subject_title
    contentGuidance: content_guidance
    equipmentRequired: equipment_required
    presentationUrl: presentation_url
    supervisionLevel: supervision_level
    worksheetUrl: worksheet_url
    hasCopyrightMaterial: has_copyright_material
    coreContent: core_content
    videoMuxPlaybackId: video_mux_playback_id
    videoWithSignLanguageMuxPlaybackId: video_with_sign_language_mux_playback_id
    transcript
    hasDownloadableResources: has_downloadable_resources
  }
  exitQuizInfo: mv_quizzes(
    where: {key_stage_slug: {_eq: $keyStageSlug}, subject_slug: {_eq: $subjectSlug}, unit_slug: {_eq: $unitSlug}, type: {_eq: "exit"}, lesson_slug: {_eq: $lessonSlug}}
  ) {
    title
    questionCount: question_count
  }
  exitQuiz: mv_questions(
    where: {key_stage_slug: {_eq: $keyStageSlug}, subject_slug: {_eq: $subjectSlug}, unit_slug: {_eq: $unitSlug}, quiz_type: {_eq: "exit"}, lesson_slug: {_eq: $lessonSlug}}
    order_by: {order: asc}
  ) {
    keyStageSlug: key_stage_slug
    keyStageTitle: key_stage_title
    lessonSlug: lesson_slug
    lessonTitle: lesson_title
    subjectSlug: subject_slug
    subjectTitle: subject_title
    unitSlug: unit_slug
    unitTitle: unit_title
    active
    answer
    choiceImages: choice_images
    choices
    feedbackCorrect: feedback_correct
    feedbackIncorrect: feedback_incorrect
    images
    points
    quizType: quiz_type
    required
    title
    type
    order
    displayNumber: display_number
  }
  introQuizInfo: mv_quizzes(
    where: {key_stage_slug: {_eq: $keyStageSlug}, subject_slug: {_eq: $subjectSlug}, unit_slug: {_eq: $unitSlug}, type: {_eq: "intro"}, lesson_slug: {_eq: $lessonSlug}}
  ) {
    title
    questionCount: question_count
  }
  introQuiz: mv_questions(
    where: {key_stage_slug: {_eq: $keyStageSlug}, subject_slug: {_eq: $subjectSlug}, unit_slug: {_eq: $unitSlug}, quiz_type: {_eq: "intro"}, lesson_slug: {_eq: $lessonSlug}}
    order_by: {order: asc}
  ) {
    keyStageSlug: key_stage_slug
    keyStageTitle: key_stage_title
    lessonSlug: lesson_slug
    lessonTitle: lesson_title
    subjectSlug: subject_slug
    subjectTitle: subject_title
    unitSlug: unit_slug
    unitTitle: unit_title
    active
    answer
    choiceImages: choice_images
    choices
    feedbackCorrect: feedback_correct
    feedbackIncorrect: feedback_incorrect
    images
    points
    quizType: quiz_type
    required
    title
    type
    order
    displayNumber: display_number
  }
}
    `;
export const TeachersLessonOverviewPathsDocument = gql`
    query teachersLessonOverviewPaths {
  mv_lessons {
    lessonSlug: slug
    keyStageSlug: key_stage_slug
    subjectSlug: subject_slug
    unitSlug: unit_slug
  }
}
    `;

export type SdkFunctionWrapper = <T>(action: (requestHeaders?:Record<string, string>) => Promise<T>, operationName: string, operationType?: string) => Promise<T>;


const defaultWrapper: SdkFunctionWrapper = (action, _operationName, _operationType) => action();

export function getSdk(client: GraphQLClient, withWrapper: SdkFunctionWrapper = defaultWrapper) {
  return {
    teachersHomePage(variables?: TeachersHomePageQueryVariables, requestHeaders?: Dom.RequestInit["headers"]): Promise<TeachersHomePageQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<TeachersHomePageQuery>(TeachersHomePageDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'teachersHomePage', 'query');
    },
    teachersKeyStageSubjectTiers(variables: TeachersKeyStageSubjectTiersQueryVariables, requestHeaders?: Dom.RequestInit["headers"]): Promise<TeachersKeyStageSubjectTiersQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<TeachersKeyStageSubjectTiersQuery>(TeachersKeyStageSubjectTiersDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'teachersKeyStageSubjectTiers', 'query');
    },
    teachersKeyStageSubjectTiersPaths(variables?: TeachersKeyStageSubjectTiersPathsQueryVariables, requestHeaders?: Dom.RequestInit["headers"]): Promise<TeachersKeyStageSubjectTiersPathsQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<TeachersKeyStageSubjectTiersPathsQuery>(TeachersKeyStageSubjectTiersPathsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'teachersKeyStageSubjectTiersPaths', 'query');
    },
    teachersKeyStageSubjectUnitLessons(variables: TeachersKeyStageSubjectUnitLessonsQueryVariables, requestHeaders?: Dom.RequestInit["headers"]): Promise<TeachersKeyStageSubjectUnitLessonsQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<TeachersKeyStageSubjectUnitLessonsQuery>(TeachersKeyStageSubjectUnitLessonsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'teachersKeyStageSubjectUnitLessons', 'query');
    },
    teachersKeyStageSubjectUnits(variables: TeachersKeyStageSubjectUnitsQueryVariables, requestHeaders?: Dom.RequestInit["headers"]): Promise<TeachersKeyStageSubjectUnitsQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<TeachersKeyStageSubjectUnitsQuery>(TeachersKeyStageSubjectUnitsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'teachersKeyStageSubjectUnits', 'query');
    },
    teachersKeyStageSubjectUnitLessonsDownloads(variables: TeachersKeyStageSubjectUnitLessonsDownloadsQueryVariables, requestHeaders?: Dom.RequestInit["headers"]): Promise<TeachersKeyStageSubjectUnitLessonsDownloadsQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<TeachersKeyStageSubjectUnitLessonsDownloadsQuery>(TeachersKeyStageSubjectUnitLessonsDownloadsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'teachersKeyStageSubjectUnitLessonsDownloads', 'query');
    },
    teachersKeyStageSubjectUnitsPaths(variables?: TeachersKeyStageSubjectUnitsPathsQueryVariables, requestHeaders?: Dom.RequestInit["headers"]): Promise<TeachersKeyStageSubjectUnitsPathsQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<TeachersKeyStageSubjectUnitsPathsQuery>(TeachersKeyStageSubjectUnitsPathsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'teachersKeyStageSubjectUnitsPaths', 'query');
    },
    teachersKeyStageSubjects(variables: TeachersKeyStageSubjectsQueryVariables, requestHeaders?: Dom.RequestInit["headers"]): Promise<TeachersKeyStageSubjectsQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<TeachersKeyStageSubjectsQuery>(TeachersKeyStageSubjectsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'teachersKeyStageSubjects', 'query');
    },
    teachersLessonOverview(variables: TeachersLessonOverviewQueryVariables, requestHeaders?: Dom.RequestInit["headers"]): Promise<TeachersLessonOverviewQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<TeachersLessonOverviewQuery>(TeachersLessonOverviewDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'teachersLessonOverview', 'query');
    },
    teachersLessonOverviewPaths(variables?: TeachersLessonOverviewPathsQueryVariables, requestHeaders?: Dom.RequestInit["headers"]): Promise<TeachersLessonOverviewPathsQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<TeachersLessonOverviewPathsQuery>(TeachersLessonOverviewPathsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'teachersLessonOverviewPaths', 'query');
    }
  };
}
export type Sdk = ReturnType<typeof getSdk>;