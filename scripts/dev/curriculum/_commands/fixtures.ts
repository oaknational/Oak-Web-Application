import { mkdir, writeFile } from "fs/promises";
import { join } from "path";

import sdk from "@/node-lib/curriculum-api-2023/sdk";

const fixtures = {
  "curriculumunits-english-secondary": async () => {
    const output = await sdk.curriculumSequence({
      where: {
        _and: [
          {
            _or: [
              { subject_slug: { _eq: "english" } },
              { subject_parent_slug: { _eq: "english" } },
            ],
          },
          { phase_slug: { _eq: "secondary" } },
          { state: { _eq: "published" } },
        ],
      },
    });
    return output;
  },
  "curriculumunits-english-primary": async () => {
    const output = await sdk.curriculumSequence({
      where: {
        _and: [
          {
            _or: [
              { subject_slug: { _eq: "english" } },
              { subject_parent_slug: { _eq: "english" } },
            ],
          },
          { phase_slug: { _eq: "primary" } },
          { state: { _eq: "published" } },
        ],
      },
    });
    return output;
  },
  "curriculumunits-science-secondary": async () => {
    const output = await sdk.curriculumSequence({
      where: {
        _and: [
          {
            _or: [
              { subject_slug: { _eq: "science" } },
              { subject_parent_slug: { _eq: "science" } },
            ],
          },
          { phase_slug: { _eq: "secondary" } },
          { examboard_slug: { _eq: "edexcel" } },
          { state: { _eq: "published" } },
        ],
      },
    });
    return output;
  },
  subjectPhaseOptions: async () => {
    return await sdk.subjectPhaseOptions();
  },
  "curriculumOverview-english-secondary": async () => {
    return await sdk.curriculumOverview({
      subjectSlug: "english",
      phaseSlug: "secondary",
    });
  },
};

const wrapFile = (input: string) => {
  return `/**
 * NOTE: This is automatically generated by the following script
 * 
 *   ./scripts/dev/curriculum/fixtures generate
 */
export default ${input}`;
};

export async function buildFixtures() {
  const basedir = "./src/utils/curriculum/fixtures/";
  await mkdir(basedir, { recursive: true });
  for (const [name, fixture] of Object.entries(fixtures)) {
    const output = await fixture();
    const filepath = join(basedir, name + ".fixture.ts");
    console.log(`ðŸ“¦ generating: ${filepath}`);
    await writeFile(filepath, wrapFile(JSON.stringify(output, null, 2)));
  }
}
